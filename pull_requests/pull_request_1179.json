{
    "reason": "",
    "state": "MERGED",
    "updated_on": "2014-09-02T22:52:30.664889+00:00",
    "comment_count": 13,
    "description": "This partially fixes load_octree which was otherwise broken. But there's still something not quite right - if I try and make a projection plot using the object returned by ``load_octree`` I get:\r\n\r\n```\r\n>>> prj = ProjectionPlot(pf, 'z', ['density'], center=[0.0, 0.0, 0.0])\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/visualization/plot_window.py\", line 1233, in __init__\r\n    field_parameters = field_parameters, style = proj_style)\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py\", line 236, in __init__\r\n    self.get_data(field)\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py\", line 267, in get_data\r\n    fields = self._determine_fields(ensure_list(fields))\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/data_containers.py\", line 490, in _determine_fields\r\n    finfo = self.ds._get_field_info(\"unknown\", fname)\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/static_output.py\", line 449, in _get_field_info\r\n    self.index\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/static_output.py\", line 279, in index\r\n    self, dataset_type=self.dataset_type)\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py\", line 1314, in __init__\r\n    super(StreamOctreeHandler, self).__init__(ds, dataset_type)\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/geometry/geometry_handler.py\", line 57, in __init__\r\n    self._setup_geometry()\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/geometry/oct_geometry_handler.py\", line 41, in _setup_geometry\r\n    self._initialize_oct_handler()\r\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py\", line 1329, in _initialize_oct_handler\r\n    self.oct_handler = OctreeContainer.load_octree(header)\r\n  File \"oct_container.pyx\", line 115, in yt.geometry.oct_container.OctreeContainer.load_octree (build/src.macosx-10.8-x86_64-2.7/yt/geometry/oct_container.c:2903)\r\nValueError: Does not understand character buffer dtype format string ('?')\r\n```\r\n\r\n[As a side note, it took me a solid hour to try and figure out the mercurial workflow for creating pull requests :-/ It would be nice if you could provide step-by-step instructions on making a simple code contribution. The current contribution page just mentions some useful info, but assumes prior knowledge of mercurial.]",
    "created_on": "2014-09-02T10:40:15.261088+00:00",
    "task_count": 0,
    "merge_commit": null,
    "title": "Fixed unit handling in load_octree",
    "links": {
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/diff"
        },
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/decline"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/activity"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/merge"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/commits"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/statuses"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments"
        }
    },
    "closed_by": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
        "username": "MatthewTurk"
    },
    "id": 1179,
    "type": "pullrequest",
    "author": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/astrofrog"
            },
            "html": {
                "href": "https://bitbucket.org/astrofrog/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "astrofrog",
        "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
        "username": "astrofrog"
    },
    "source": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/astrofrog/yt/commit/6f6f243af3d3"
                }
            },
            "hash": "6f6f243af3d3"
        },
        "repository": {
            "full_name": "astrofrog/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/astrofrog/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/astrofrog/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/astrofrog/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{5406c69e-dd22-4aa4-917c-951234227370}"
        }
    },
    "close_source_branch": false,
    "destination": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/75d65dcf2ce6"
                }
            },
            "hash": "75d65dcf2ce6"
        },
        "repository": {
            "full_name": "yt_analysis/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}"
        }
    },
    "comments": [
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2923594"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2923594"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "It turns out the error above was caused by the fact I was passing a boolean mask. I've added a commit with a check on the mask dtype since it might end up being a common mistake.",
                "html": "<p>It turns out the error above was caused by the fact I was passing a boolean mask. I've added a commit with a check on the mask dtype since it might end up being a common mistake.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T10:44:35.501806+00:00",
            "updated_on": "2014-09-02T10:44:35.955820+00:00",
            "id": 2923594
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2923611"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2923611"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "I'm now seeing a different error that I don't really understand:\n\n```\n  File \"test_ring.py\", line 27, in <module>\n    prj = ProjectionPlot(pf, 'z', ['density'], center=[0.0, 0.0, 0.0])\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/visualization/plot_window.py\", line 1233, in __init__\n    field_parameters = field_parameters, style = proj_style)\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py\", line 236, in __init__\n    self.get_data(field)\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py\", line 275, in get_data\n    for chunk in self.data_source.chunks([], \"io\", local_only = False):\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/data_containers.py\", line 551, in chunks\n    self.get_data() # Ensure we have built ourselves\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/data_containers.py\", line 590, in get_data\n    self.index._identify_base_chunk(self)\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py\", line 1336, in _identify_base_chunk\n    self.ds.over_refine_factor)]\n  File \"/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py\", line 1285, in __init__\n    self.index = self.ds.index\nAttributeError: can't set attribute\n```\n\nI don't have time to dig into this in detail, but let me know if you have any thoughts!",
                "html": "<p>I'm now seeing a different error that I don't really understand:</p>\n<div class=\"codehilite\"><pre><span></span>  File &quot;test_ring.py&quot;, line 27, in &lt;module&gt;\n    prj = ProjectionPlot(pf, &#39;z&#39;, [&#39;density&#39;], center=[0.0, 0.0, 0.0])\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/visualization/plot_window.py&quot;, line 1233, in __init__\n    field_parameters = field_parameters, style = proj_style)\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py&quot;, line 236, in __init__\n    self.get_data(field)\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/construction_data_containers.py&quot;, line 275, in get_data\n    for chunk in self.data_source.chunks([], &quot;io&quot;, local_only = False):\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/data_containers.py&quot;, line 551, in chunks\n    self.get_data() # Ensure we have built ourselves\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/data_objects/data_containers.py&quot;, line 590, in get_data\n    self.index._identify_base_chunk(self)\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py&quot;, line 1336, in _identify_base_chunk\n    self.ds.over_refine_factor)]\n  File &quot;/Volumes/Raptor/Library/Python/2.7/lib/python/site-packages/yt-3.1dev-py2.7-macosx-10.8-x86_64.egg/yt/frontends/stream/data_structures.py&quot;, line 1285, in __init__\n    self.index = self.ds.index\nAttributeError: can&#39;t set attribute\n</pre></div>\n\n\n<p>I don't have time to dig into this in detail, but let me know if you have any thoughts!</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T10:45:45.710000+00:00",
            "updated_on": "2014-09-02T10:45:46.141583+00:00",
            "id": 2923611
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}",
                "username": "yt-fido"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2924362"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2924362"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "All tests pass. Good job!",
                "html": "<p>All tests pass. Good job!</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T11:51:24.096065+00:00",
            "updated_on": "2014-09-02T11:51:24.430273+00:00",
            "id": 2924362
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2927470"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2927470"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Can't say much on the octree front, but I'll just mention that we have a page on developing yt that I think nicely walks through the development process: http://yt-project.org/doc/developing/developing.html#making-and-sharing-changes\nFrom the docs front page it can be found by the path \"Developing in yt\" -> \"Submitting Changes\".  Let us know if there is something more we should add to that page that wasn't clear, or if there are keywords that we should add to that page that you tried searching for that didn't lead you there. ",
                "html": "<p>Can't say much on the octree front, but I'll just mention that we have a page on developing yt that I think nicely walks through the development process: <a href=\"http://yt-project.org/doc/developing/developing.html#making-and-sharing-changes\" rel=\"nofollow\">http://yt-project.org/doc/developing/developing.html#making-and-sharing-changes</a>\nFrom the docs front page it can be found by the path \"Developing in yt\" -&gt; \"Submitting Changes\".  Let us know if there is something more we should add to that page that wasn't clear, or if there are keywords that we should add to that page that you tried searching for that didn't lead you there. </p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T15:17:47.645057+00:00",
            "updated_on": "2014-09-02T15:17:47.653991+00:00",
            "id": 2927470
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2927857"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2927857"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "The issue I was having was that some steps were missing, for example:\n\n* cloning the fork between steps 3 and 4 (this is obvious, but just thought I'd mention it for completeness)\n\n* how to deal with bookmarks/branches. Coming from a git background I was going to make a branch but then read that bookmarks are preferred, but there are no instructions on dealing with this\n\n* how to make sure the local copy is up to date with the remote copy before branching/bookmarking\n\nThe two last issues are what took me a while to figure out, so if you can think of a way to make that clearer in the instructions.",
                "html": "<p>The issue I was having was that some steps were missing, for example:</p>\n<ul>\n<li>\n<p>cloning the fork between steps 3 and 4 (this is obvious, but just thought I'd mention it for completeness)</p>\n</li>\n<li>\n<p>how to deal with bookmarks/branches. Coming from a git background I was going to make a branch but then read that bookmarks are preferred, but there are no instructions on dealing with this</p>\n</li>\n<li>\n<p>how to make sure the local copy is up to date with the remote copy before branching/bookmarking</p>\n</li>\n</ul>\n<p>The two last issues are what took me a while to figure out, so if you can think of a way to make that clearer in the instructions.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T15:37:53.472634+00:00",
            "updated_on": "2014-09-02T15:37:53.902887+00:00",
            "id": 2927857
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2928120"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2928120"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2927857"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2927857"
                    }
                },
                "id": 2927857
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Ah, I see. I think some of this stems from requiring fewer steps with hg to develop than git: \n\n* You don't have to clone the fork between steps 3 and 4. Simply fork, then push your local changes up to that newly created fork. \n\n* You don't have to use branches or bookmarks. You can make a PR directly from any head in the repository tree. Bookmarks simply make it easy to track a line of development, particularly if you are working on a few things at once.\n\n* No need to make sure that the local copy is up to date before doing anything. If your changes happen to conflict with something that someone else has done between the time you last pulled in changes from the main yt_analysis/yt repository, then after making a PR it will notify you that there were merge conflicts, at which point you'll need to manually resolve them. Otherwise hg/bitbucket will handle the automatic merge and things will be a-ok. \n\nPerhaps a section that is explicitly \"How developing in hg/bitbucket is different than git/github\" would be useful to point out the steps that aren't needed?",
                "html": "<p>Ah, I see. I think some of this stems from requiring fewer steps with hg to develop than git: </p>\n<ul>\n<li>\n<p>You don't have to clone the fork between steps 3 and 4. Simply fork, then push your local changes up to that newly created fork. </p>\n</li>\n<li>\n<p>You don't have to use branches or bookmarks. You can make a PR directly from any head in the repository tree. Bookmarks simply make it easy to track a line of development, particularly if you are working on a few things at once.</p>\n</li>\n<li>\n<p>No need to make sure that the local copy is up to date before doing anything. If your changes happen to conflict with something that someone else has done between the time you last pulled in changes from the main <a href=\"/yt_analysis/yt\" rel=\"nofollow\">yt_analysis/yt</a> repository, then after making a PR it will notify you that there were merge conflicts, at which point you'll need to manually resolve them. Otherwise hg/bitbucket will handle the automatic merge and things will be a-ok. </p>\n</li>\n</ul>\n<p>Perhaps a section that is explicitly \"How developing in hg/bitbucket is different than git/github\" would be useful to point out the steps that aren't needed?</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T15:54:36.652620+00:00",
            "updated_on": "2014-09-02T15:55:45.206122+00:00",
            "id": 2928120
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2928685"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2928685"
                }
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Thanks for the explanations!\n\nRegarding the cloning, you still have to clone either the main repository or the fork (in git you can also get away with not cloning the fork since you can specify the remote to push to) so I'd suggest explicitly mentioning the cloning step.\n\nFor the bookmarks, I still it could still be handy to show how this is done - I very often want to have two or more branches/bookmarks going at the same time so it's a good idea to get people into a habit even if they are starting off only with a single change.\n\nI tried not updating my local copy but then it was complaining that pushing would create a new remote branch (yt-3.0) and when I added the ``--new-branch`` as suggested, it told me that I could not push it because the branch had multiple heads. Not sure what that means :-/\n\nNow that I understand a bit more, based on what you said, I actually don't think git/hg are that different intrinsically. You're just choosing not to use branches for example, and to recommend users clone the main repo and push to the fork rather than cloning the fork - I don't think those are fundamental differences between git and hg. You could do the same with git but we just chosen to follow the workflow that ipython/numpy/scipy followed to avoid confusion. I think it might be more useful to make sure that the instructions could be followed by someone with absolutely no knowledge of mercurial - i.e. what commands to I type to get it to work? (of course, I want to understand what's going on, but providing *all* the commands needed would be a nice starting place and I can learn from there).\n\nAnyway, just some ideas to think about :)",
                "html": "<p>Thanks for the explanations!</p>\n<p>Regarding the cloning, you still have to clone either the main repository or the fork (in git you can also get away with not cloning the fork since you can specify the remote to push to) so I'd suggest explicitly mentioning the cloning step.</p>\n<p>For the bookmarks, I still it could still be handy to show how this is done - I very often want to have two or more branches/bookmarks going at the same time so it's a good idea to get people into a habit even if they are starting off only with a single change.</p>\n<p>I tried not updating my local copy but then it was complaining that pushing would create a new remote branch (yt-3.0) and when I added the <code>--new-branch</code> as suggested, it told me that I could not push it because the branch had multiple heads. Not sure what that means :-/</p>\n<p>Now that I understand a bit more, based on what you said, I actually don't think git/hg are that different intrinsically. You're just choosing not to use branches for example, and to recommend users clone the main repo and push to the fork rather than cloning the fork - I don't think those are fundamental differences between git and hg. You could do the same with git but we just chosen to follow the workflow that ipython/numpy/scipy followed to avoid confusion. I think it might be more useful to make sure that the instructions could be followed by someone with absolutely no knowledge of mercurial - i.e. what commands to I type to get it to work? (of course, I want to understand what's going on, but providing <em>all</em> the commands needed would be a nice starting place and I can learn from there).</p>\n<p>Anyway, just some ideas to think about :)</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T16:34:48.162394+00:00",
            "updated_on": "2014-09-02T16:34:48.459478+00:00",
            "id": 2928685
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2928873"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2928873"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2928685"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2928685"
                    }
                },
                "id": 2928685
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Sorry to hear you've been having trouble.\n\nA lot of us don't have much experience with the git/github workflow.  It might help if you could contribute the improvements you're discussing, if only because we're somewhat blind to the issues you're seeing.\n\nDo you have a sample load_octree script? It could use fake in-memory data or a public dataset.  Having a script all of us can work off of makes it much more straightforward to reproduce issues like the ones you are seeing.",
                "html": "<p>Sorry to hear you've been having trouble.</p>\n<p>A lot of us don't have much experience with the git/github workflow.  It might help if you could contribute the improvements you're discussing, if only because we're somewhat blind to the issues you're seeing.</p>\n<p>Do you have a sample load_octree script? It could use fake in-memory data or a public dataset.  Having a script all of us can work off of makes it much more straightforward to reproduce issues like the ones you are seeing.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T16:45:09.632764+00:00",
            "updated_on": "2014-09-02T16:45:09.641820+00:00",
            "id": 2928873
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929009"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929009"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2928873"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2928873"
                    }
                },
                "id": 2928873
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Just to be clear, I didn't mean to be critical and am only reporting my experience because I'm always glad when someone points out issues with our workflow instructions for astropy, since I'm so used to the git workflow that it seems trivial to me :) I will try and open a pull request at some point with improvements, but I'll first need to figure out how to use bookmarks since if I want to do it while this pull request is open! Just out of curiosity, why do you recommend bookmarks over branches?\n\nI sent Matt a script off-list and he has already got a fix for the issue described above - he will commit them later along with this pull request once he gets a chance.",
                "html": "<p>Just to be clear, I didn't mean to be critical and am only reporting my experience because I'm always glad when someone points out issues with our workflow instructions for astropy, since I'm so used to the git workflow that it seems trivial to me :) I will try and open a pull request at some point with improvements, but I'll first need to figure out how to use bookmarks since if I want to do it while this pull request is open! Just out of curiosity, why do you recommend bookmarks over branches?</p>\n<p>I sent Matt a script off-list and he has already got a fix for the issue described above - he will commit them later along with this pull request once he gets a chance.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T16:52:07.396863+00:00",
            "updated_on": "2014-09-02T16:52:07.707562+00:00",
            "id": 2929009
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929292"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929292"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929009"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929009"
                    }
                },
                "id": 2929009
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Unlike git, mercurial branches are part of the commit and the list of branches is append-only.  This means that you can always infer whihc branch a commit was made on, but it also means that branches can quickly proliferate.\n\nBranches are useful for long-term development work.  If all the developers are comfortable with having a large number of permanent branches, branches can be useful for more short-term work as well.\n\nBookmarks are more like git branches - they are a moving reference to a single commit.\n\nI personally don't actually use bookmarks for short-term work like you're discussing - I guess that's why it's not mentioned in our docs?  Too much semantic overhead for a one-line change.  Instead, my development workflow for bugfixes looks like this:\n\n*     Update to the current tip of https://bitbucket.org/yt_analysis/yt \n\n     I use the hgbb extension, so I can refer to it as `bb:yt_analysis/yt` in my hg prompt:\n\n    `hg pull bb:yt_analysis/yt`\n    \n     `hg up -C yt`\n\n    Here I update to the `yt` branch.  The `-C` option clears local changes, you can also use `hg shelve` to save local changes.\n    \n*     Apply the bugfix patch.\n\n      This can happen either by manually fixing the code in a text editor or by using the `hg shelve` extension to apply a previously shelved patch.\n\n*    Commit my change\n\n    `hg commit -m \"my commit message\"`\n\n*    Push my change to my bitbucket fork\n\n    `hg push -r . bb:yt`\n\n     Note my use of \"push -r .\".  By default, mercurial will push all heads, using `push -r .` tells mercurial to only push whatever changes are needed to construct the change you are currently standing on, ignoring other topological branches in the DAG. If pushing your bugfix implies that you will create a new head on bitbucket, you may need to use `push -f`.  It's ok to force-push in this situation, since you *want* to create a new remote head.\n\nBookmarks can be used to \"name\" these remote heads, just like git branches.  After updating to the place where I want to apply my patch, I would create a new bookmark for my bugfix work using `hg bookmark`.  I could also refer to the bookmark name when pushing `hg push -B bookmark_name`, avoiding the need to refer to a specific changeset (i.e. `hg push -r .`). If I were more organized, I would probably use bookmarks like this, but I tend not to do that and just be ok with my fork having a ton of anonymous heads.\n\nI hope that clears things up a bit and doesn't cause any more confusion!  Please feel free to stop by our IRC channel to chat about this stuff at lower latency.",
                "html": "<p>Unlike git, mercurial branches are part of the commit and the list of branches is append-only.  This means that you can always infer whihc branch a commit was made on, but it also means that branches can quickly proliferate.</p>\n<p>Branches are useful for long-term development work.  If all the developers are comfortable with having a large number of permanent branches, branches can be useful for more short-term work as well.</p>\n<p>Bookmarks are more like git branches - they are a moving reference to a single commit.</p>\n<p>I personally don't actually use bookmarks for short-term work like you're discussing - I guess that's why it's not mentioned in our docs?  Too much semantic overhead for a one-line change.  Instead, my development workflow for bugfixes looks like this:</p>\n<ul>\n<li>\n<p>Update to the current tip of <a href=\"https://bitbucket.org/yt_analysis/yt\" rel=\"nofollow\">https://bitbucket.org/yt_analysis/yt</a> </p>\n<p>I use the hgbb extension, so I can refer to it as <code>bb:yt_analysis/yt</code> in my hg prompt:</p>\n<p><code>hg pull bb:yt_analysis/yt</code></p>\n<p><code>hg up -C yt</code></p>\n<p>Here I update to the <code>yt</code> branch.  The <code>-C</code> option clears local changes, you can also use <code>hg shelve</code> to save local changes.</p>\n</li>\n<li>\n<p>Apply the bugfix patch.</p>\n<p>This can happen either by manually fixing the code in a text editor or by using the <code>hg shelve</code> extension to apply a previously shelved patch.</p>\n</li>\n<li>\n<p>Commit my change</p>\n<p><code>hg commit -m \"my commit message\"</code></p>\n</li>\n<li>\n<p>Push my change to my bitbucket fork</p>\n<p><code>hg push -r . bb:yt</code></p>\n<p>Note my use of \"push -r .\".  By default, mercurial will push all heads, using <code>push -r .</code> tells mercurial to only push whatever changes are needed to construct the change you are currently standing on, ignoring other topological branches in the DAG. If pushing your bugfix implies that you will create a new head on bitbucket, you may need to use <code>push -f</code>.  It's ok to force-push in this situation, since you <em>want</em> to create a new remote head.</p>\n</li>\n</ul>\n<p>Bookmarks can be used to \"name\" these remote heads, just like git branches.  After updating to the place where I want to apply my patch, I would create a new bookmark for my bugfix work using <code>hg bookmark</code>.  I could also refer to the bookmark name when pushing <code>hg push -B bookmark_name</code>, avoiding the need to refer to a specific changeset (i.e. <code>hg push -r .</code>). If I were more organized, I would probably use bookmarks like this, but I tend not to do that and just be ok with my fork having a ton of anonymous heads.</p>\n<p>I hope that clears things up a bit and doesn't cause any more confusion!  Please feel free to stop by our IRC channel to chat about this stuff at lower latency.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T17:13:28.705883+00:00",
            "updated_on": "2014-09-02T17:16:03.267833+00:00",
            "id": 2929292
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929493"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929493"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929292"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929292"
                    }
                },
                "id": 2929292
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Thanks for the instructions! I'll play around with this a bit to try and better understand bookmarks. To me, they sound more like git tags than git branches since they point to a single commit. In this PR I have two changes, but if I now wanted to simultaneously work on improvements to the workflow docs, and added a commit to my repo with a new bookmark, won't it also add the commits from this PR when I open a new PR?\n\nEDIT: anyway, I'll play around with this and will drop by IRC if it still doesn't make sense :)",
                "html": "<p>Thanks for the instructions! I'll play around with this a bit to try and better understand bookmarks. To me, they sound more like git tags than git branches since they point to a single commit. In this PR I have two changes, but if I now wanted to simultaneously work on improvements to the workflow docs, and added a commit to my repo with a new bookmark, won't it also add the commits from this PR when I open a new PR?</p>\n<p>EDIT: anyway, I'll play around with this and will drop by IRC if it still doesn't make sense :)</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T17:27:40.466070+00:00",
            "updated_on": "2014-09-02T17:31:16.450371+00:00",
            "id": 2929493
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929551"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929551"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929493"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929493"
                    }
                },
                "id": 2929493
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "They're not tags since they're *moving* references to a single commit. When you update to a bookmark with `hg up <bookmark name>`, this \"activates\" the bookmark.  When you commit on an activated bookmark, the bookmark moves to the new commit.\n\nIt will only include these changes if you update to the tip of this PR (6f6f243).  If instead you update to the current head of the yt_analysis/yt repository (2c3d2e8) and then commit your fixes, this will create a new head separate from your PR head, which you can push to bitbucket separately from this head.",
                "html": "<p>They're not tags since they're <em>moving</em> references to a single commit. When you update to a bookmark with <code>hg up &lt;bookmark name&gt;</code>, this \"activates\" the bookmark.  When you commit on an activated bookmark, the bookmark moves to the new commit.</p>\n<p>It will only include these changes if you update to the tip of this PR (<a href=\"/yt_analysis/yt/commits/6f6f243\" rel=\"nofollow\">6f6f243</a>).  If instead you update to the current head of the <a href=\"/yt_analysis/yt\" rel=\"nofollow\">yt_analysis/yt</a> repository (<a href=\"/yt_analysis/yt/commits/2c3d2e8\" rel=\"nofollow\">2c3d2e8</a>) and then commit your fixes, this will create a new head separate from your PR head, which you can push to bitbucket separately from this head.</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T17:31:11.241366+00:00",
            "updated_on": "2014-09-02T17:31:11.252467+00:00",
            "id": 2929551
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/astrofrog"
                    },
                    "html": {
                        "href": "https://bitbucket.org/astrofrog/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/astrofrog/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "astrofrog",
                "uuid": "{bcaaba2f-d294-45d4-850a-00ce6b0d3e54}",
                "username": "astrofrog"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929567"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929567"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179/comments/2929551"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179/_/diff#comment-2929551"
                    }
                },
                "id": 2929551
            },
            "pullrequest": {
                "title": "Fixed unit handling in load_octree",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1179"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1179"
                    }
                },
                "id": 1179
            },
            "content": {
                "raw": "Oh, that makes more sense - thanks!",
                "html": "<p>Oh, that makes more sense - thanks!</p>",
                "markup": "markdown"
            },
            "created_on": "2014-09-02T17:32:10.531988+00:00",
            "updated_on": "2014-09-02T17:32:10.867495+00:00",
            "id": 2929567
        }
    ]
}