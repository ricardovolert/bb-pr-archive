{
    "reason": "",
    "state": "MERGED",
    "updated_on": "2013-02-27T20:54:03.715601+00:00",
    "comment_count": 2,
    "description": "`par_combine_object` is called right after the data is read from disk. It should prevent nasty nested loops",
    "created_on": "2013-02-27T19:26:31.035404+00:00",
    "task_count": 0,
    "merge_commit": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/ccfe34e70803"
            }
        },
        "hash": "ccfe34e70803"
    },
    "title": "[AMR2DData:getdata] combine fields right after each processes read data from disk. Fixes #511",
    "links": {
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/diff"
        },
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/decline"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/activity"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/merge"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/commits"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/statuses"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/449"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/comments"
        }
    },
    "closed_by": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
        "username": "MatthewTurk"
    },
    "id": 449,
    "type": "pullrequest",
    "author": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/xarthisius"
            },
            "html": {
                "href": "https://bitbucket.org/xarthisius/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/xarthisius/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Kacper Kowalik",
        "uuid": "{26af8f1d-35b3-46ce-9939-09915b06e31f}",
        "username": "xarthisius"
    },
    "source": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/xarthisius/yt/commit/bb5dfe646d20"
                }
            },
            "hash": "bb5dfe646d20"
        },
        "repository": {
            "full_name": "xarthisius/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/xarthisius/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/xarthisius/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/xarthisius/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b753a527-1ccd-415c-8b85-3244947466a3}"
        }
    },
    "close_source_branch": false,
    "destination": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/e0d52392b85c"
                }
            },
            "hash": "e0d52392b85c"
        },
        "repository": {
            "full_name": "yt_analysis/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}"
        }
    },
    "comments": [
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/comments/134051"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/449/_/diff#comment-134051"
                }
            },
            "pullrequest": {
                "title": "[AMR2DData:getdata] combine fields right after each processes read data from disk. Fixes #511",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/449"
                    }
                },
                "id": 449
            },
            "content": {
                "raw": "This fixes #511 for me and returns identical results when run in serial and parallel.\n\nI'm not familiar enough with the way parallelism works in yt to speak to the actual modifications, but as far as the results go this looks good to me.",
                "html": "<p>This fixes <a href=\"/yt_analysis/yt/issues/511/amrslicebase-fails-in-parallel-with\" rel=\"nofollow\" title=\"AMRSliceBase fails in parallel with multiple fields when one is a derived field\"><s>#511</s></a> for me and returns identical results when run in serial and parallel.</p>\n<p>I'm not familiar enough with the way parallelism works in yt to speak to the actual modifications, but as far as the results go this looks good to me.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-02-27T20:51:01.489031+00:00",
            "updated_on": "2013-02-27T20:51:01.512884+00:00",
            "id": 134051
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449/comments/134052"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/449/_/diff#comment-134052"
                }
            },
            "pullrequest": {
                "title": "[AMR2DData:getdata] combine fields right after each processes read data from disk. Fixes #511",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/449"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/449"
                    }
                },
                "id": 449
            },
            "content": {
                "raw": "Two things:\n\n 1. This now serializes the update; I am surprised that this was the problem, since all of the fields should have existed during the datatype='dict' concatenation step.  In principle this is a problem, since it will multiply by 5 or something the number of calls to `par_combine_object`, but in practice it's fine since I think inside that routien we do a bunch of sequential collectives anyway.\n 2. There's the missing case of possibly empty dictionaries.  I'm not sure if this is a problem or not.\n\nI don't really like slices in parallel anyway, so I am fine with this going in.",
                "html": "<p>Two things:</p>\n<ol>\n<li>This now serializes the update; I am surprised that this was the problem, since all of the fields should have existed during the datatype='dict' concatenation step.  In principle this is a problem, since it will multiply by 5 or something the number of calls to <code>par_combine_object</code>, but in practice it's fine since I think inside that routien we do a bunch of sequential collectives anyway.</li>\n<li>There's the missing case of possibly empty dictionaries.  I'm not sure if this is a problem or not.</li>\n</ol>\n<p>I don't really like slices in parallel anyway, so I am fine with this going in.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-02-27T20:53:53.784651+00:00",
            "updated_on": "2013-02-27T20:53:53.792113+00:00",
            "id": 134052
        }
    ]
}