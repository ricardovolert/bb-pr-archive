{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "samskillman/yt",
            "uuid": "{f1df6f31-13ed-4d98-a11d-1954f1f1fdfa}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/samskillman/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/samskillman/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/samskillman/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "1d1d955d024e",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/samskillman/yt/commit/1d1d955d024e"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "ImageArray class",
    "id": 290,
    "comment_count": 4,
    "created_on": "2012-10-04T16:03:57.248056+00:00",
    "merge_commit": {
        "hash": "39220cb0fde7",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/39220cb0fde7"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Sam, I like this functionality, and I'd like to see it get more widely used.  I had a few questions and comments:\n\n1) Does this play nicely with Cython?  i.e., if we pass an image array in, does Cython allow that?\n2) Can we create ImageArrays within Cython, but use them as NumPy arrays?\n\nComments:\n\n * For the try/except for keyerror to get a default value for array_name, use {{{array_name = self.info.get(\"name\", \"image\")}}}\n * I think you can just check {{{if array_name in f}}}.  In principle this does not require traversing the entire root level of the hdf5 file, as it could return an iterator that breaks when the first occurrence hits.  Calling for keys will always have to traverse the entire root level.\n * For setting the attributes, can you just do: {{{d.attrs.update(self.info)}}} ?\n * {{{write_png}}} here only works for actual bitmapped arrays; what do you think about also having the equivalent of {{{yt.visualization.image_writer.write_image}}}, which will apply a colormap?  I am +0 on it.\n * Why are we changing the behavior of write_bitmap in terms of its transposition?  This was just added recently, I thought.\n * Can we just feed in an ImageArray instance instead of the \"image\" value to the render call?\n * Where did the new version of _render come from?\n *  None of the docstrings are compliant with the format in {{{doc/docstring_example.rst}}}, but it looks like it should be a simple set of fixes.",
                "html": "<p>Hi Sam, I like this functionality, and I'd like to see it get more widely used.  I had a few questions and comments:</p>\n<p>1) Does this play nicely with Cython?  i.e., if we pass an image array in, does Cython allow that?\n2) Can we create ImageArrays within Cython, but use them as NumPy arrays?</p>\n<p>Comments:</p>\n<ul><li>For the try/except for keyerror to get a default value for array_name, use <code>array_name = self.info.get(\"name\", \"image\")</code>\n</li><li>I think you can just check <code>if array_name in f</code>.  In principle this does not require traversing the entire root level of the hdf5 file, as it could return an iterator that breaks when the first occurrence hits.  Calling for keys will always have to traverse the entire root level.\n</li><li>For setting the attributes, can you just do: <code>d.attrs.update(self.info)</code> ?\n</li><li><code>write_png</code> here only works for actual bitmapped arrays; what do you think about also having the equivalent of <code>yt.visualization.image_writer.write_image</code>, which will apply a colormap?  I am +0 on it.\n</li><li>Why are we changing the behavior of write_bitmap in terms of its transposition?  This was just added recently, I thought.\n</li><li>Can we just feed in an ImageArray instance instead of the \"image\" value to the render call?\n</li><li>Where did the new version of _render come from?\n</li><li>None of the docstrings are compliant with the format in <code>doc/docstring_example.rst</code>, but it looks like it should be a simple set of fixes.</li></ul>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments/20879"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290/_/diff#comment-20879"
                }
            },
            "created_on": "2012-10-04T17:43:30.724556+00:00",
            "updated_on": "2012-10-04T17:43:30.732020+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290"
                    }
                },
                "title": "ImageArray class",
                "id": 290
            },
            "type": "pullrequest_comment",
            "id": 20879
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Sam,\n\nI think ImageArray is great, we should try to use it elsewhere.\n\nI believe we put the transpose in there in the first place so that the images would be oriented properly.  Have you tried comparing the outputs from your version of yt to, say, a ProjectionPlot where you know how the axes are oriented a priori?  It would be great if we could track down exactly why we sometimes need to transpose and sometimes don't, maybe come up with a test so we can be sure that all images dumped by yt are oriented correctly.",
                "html": "<p>Hi Sam,</p>\n<p>I think ImageArray is great, we should try to use it elsewhere.</p>\n<p>I believe we put the transpose in there in the first place so that the images would be oriented properly.  Have you tried comparing the outputs from your version of yt to, say, a ProjectionPlot where you know how the axes are oriented a priori?  It would be great if we could track down exactly why we sometimes need to transpose and sometimes don't, maybe come up with a test so we can be sure that all images dumped by yt are oriented correctly.</p>\n"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments/20881"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290/_/diff#comment-20881"
                }
            },
            "created_on": "2012-10-04T17:44:54.704524+00:00",
            "updated_on": "2012-10-04T17:44:54.709652+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290"
                    }
                },
                "title": "ImageArray class",
                "id": 290
            },
            "type": "pullrequest_comment",
            "id": 20881
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Great work on the update, Sam.  Do you know if it works wiht Cython?  I'm going to accept, but knowing how it works would be good.",
                "html": "<p>Great work on the update, Sam.  Do you know if it works wiht Cython?  I'm going to accept, but knowing how it works would be good.</p>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments/21073"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290/_/diff#comment-21073"
                }
            },
            "created_on": "2012-10-06T00:04:52.431569+00:00",
            "updated_on": "2012-10-06T00:04:52.439321+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290"
                    }
                },
                "title": "ImageArray class",
                "id": 290
            },
            "type": "pullrequest_comment",
            "id": 21073
        },
        {
            "content": {
                "markup": "creole",
                "raw": "It seems to work fine with Cython, in that I can make the image that we pass into the renderer an ImageArray, and it produces identical images.  Pretty neat, actually.  \n\nNathan: The transpose was put in there when we switched the order in the Camera to be (east, north, normal) from (north, east, normal).  The issue is that write_bitmap internally transposes, I think.  At some point I'll give the ProjectionPlot a shot to see what happens.",
                "html": "<p>It seems to work fine with Cython, in that I can make the image that we pass into the renderer an ImageArray, and it produces identical images.  Pretty neat, actually.  </p>\n<p>Nathan: The transpose was put in there when we switched the order in the Camera to be (east, north, normal) from (north, east, normal).  The issue is that write_bitmap internally transposes, I think.  At some point I'll give the ProjectionPlot a shot to see what happens.</p>\n"
            },
            "user": {
                "username": "samskillman",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments/21073"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290/_/diff#comment-21073"
                    }
                },
                "id": 21073
            },
            "created_on": "2012-10-06T22:04:17.105090+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290/comments/21099"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290/_/diff#comment-21099"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/290"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/290"
                    }
                },
                "title": "ImageArray class",
                "id": 290
            },
            "type": "pullrequest_comment",
            "id": 21099,
            "updated_on": "2012-10-06T22:04:17.112850+00:00"
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "Initial pass at an image class which hold not only the image, but also information about what kind of image, and any other information that would be useful to hold on to.  Right now implemented for the cameras, and seems to work. This also moves the image transposing out of write_bitmap, and sets it the transpose to False by default.  Finally, one fix for the perspective camera brick ordering.  \r\n\r\nUpdate 1: Addressed @matthewturk's comments.  The only thing that doesn't work out is the d.attrs.update, because apparently d.attrs is not a full-fledged dictionary.",
    "author": {
        "username": "samskillman",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/samskillman"
            },
            "html": {
                "href": "https://bitbucket.org/samskillman/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/samskillman/avatar/32/"
            }
        },
        "display_name": "Sam Skillman",
        "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}"
    },
    "updated_on": "2012-10-06T22:04:17.260068+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "b8175a113d8e",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/b8175a113d8e"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}