{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "ChrisMalone/yt",
            "uuid": "{4bdbf5fc-ad50-4988-940a-c4e86d76c16c}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/ChrisMalone/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/ChrisMalone/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/ChrisMalone/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "5904d54c5e50",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/ChrisMalone/yt/commit/5904d54c5e50"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "add an epsilon check to selector",
    "id": 1174,
    "comment_count": 35,
    "created_on": "2014-08-29T17:27:45.573635+00:00",
    "merge_commit": {
        "hash": "75d65dcf2ce6",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/75d65dcf2ce6"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "markdown",
                "raw": "Something went wrong, you should checkout http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1265/",
                "html": "<p>Something went wrong, you should checkout <a href=\"http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1265/\" rel=\"nofollow\">http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1265/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904604"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904604"
                }
            },
            "created_on": "2014-08-29T19:13:58.352295+00:00",
            "updated_on": "2014-08-29T19:13:58.722002+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2904604
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "It looks like the unit tests seg faulted on the build machine.",
                "html": "<p>It looks like the unit tests seg faulted on the build machine.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904604"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904604"
                    }
                },
                "id": 2904604
            },
            "created_on": "2014-08-29T19:18:50.826224+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904650"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904650"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2904650,
            "updated_on": "2014-08-29T19:18:50.835722+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Yeah I just saw that. I'll take a closer look.",
                "html": "<p>Yeah I just saw that. I'll take a closer look.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904650"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904650"
                    }
                },
                "id": 2904650
            },
            "created_on": "2014-08-29T19:24:32.184512+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904691"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904691"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2904691,
            "updated_on": "2014-08-29T19:24:32.193008+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Just out of curiosity - does this branch ever get executed?  `ds` is an attribute of the base data object class, but perhaps `dobj` is sometimes a fake data object?",
                "html": "<p>Just out of curiosity - does this branch ever get executed?  <code>ds</code> is an attribute of the base data object class, but perhaps <code>dobj</code> is sometimes a fake data object?</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2905594"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2905594"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:9c3384db3c4d..db453a34418d?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "created_on": "2014-08-29T20:55:17.532107+00:00",
            "updated_on": "2014-08-29T20:55:17.538862+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": 120,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2905594
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "This is quite bizarre.  When I put back in the loop that looked like it did nothing, I can get past the `test_rays` failure, but then I get a segfault later on...",
                "html": "<p>This is quite bizarre.  When I put back in the loop that looked like it did nothing, I can get past the <code>test_rays</code> failure, but then I get a segfault later on...</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2904650"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2904650"
                    }
                },
                "id": 2904650
            },
            "created_on": "2014-08-29T20:55:42.339723+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2905595"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2905595"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2905595,
            "updated_on": "2014-08-29T20:55:42.348012+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "That's a good question.  I'll see if it ever hits that branch in the tests",
                "html": "<p>That's a good question.  I'll see if it ever hits that branch in the tests</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2905594"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2905594"
                    }
                },
                "id": 2905594
            },
            "created_on": "2014-08-29T20:57:15.638854+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2905609"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2905609"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2905609,
            "updated_on": "2014-08-29T20:57:15.650747+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Something went wrong, you should checkout http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1270/",
                "html": "<p>Something went wrong, you should checkout <a href=\"http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1270/\" rel=\"nofollow\">http://tests.yt-project.org/job/py2.7-yt-3.0_testing/1270/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2906491"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2906491"
                }
            },
            "created_on": "2014-08-29T23:36:39.747971+00:00",
            "updated_on": "2014-08-29T23:36:40.104979+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2906491
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I'm having a hard time reproducing this, but will look into it more this weekend.",
                "html": "<p>I'm having a hard time reproducing this, but will look into it more this weekend.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2906491"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2906491"
                    }
                },
                "id": 2906491
            },
            "created_on": "2014-08-30T00:09:06.088356+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2906566"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2906566"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2906566,
            "updated_on": "2014-08-30T00:09:06.098418+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job!",
                "html": "<p>All tests pass. Good job!</p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2906733"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2906733"
                }
            },
            "created_on": "2014-08-30T01:25:24.717882+00:00",
            "updated_on": "2014-08-30T01:25:25.082626+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2906733
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Okay, so fido was a little slow in catching up to the changes, but I think it is happy now.",
                "html": "<p>Okay, so fido was a little slow in catching up to the changes, but I think it is happy now.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907455"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907455"
                }
            },
            "created_on": "2014-08-30T15:22:16.709242+00:00",
            "updated_on": "2014-08-30T15:22:16.715799+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2907455
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job!",
                "html": "<p>All tests pass. Good job!</p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907519"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907519"
                }
            },
            "created_on": "2014-08-30T16:22:03.765520+00:00",
            "updated_on": "2014-08-30T16:22:04.120789+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2907519
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Hmm, does this have any functional changes, or is it just faster?",
                "html": "<p>Hmm, does this have any functional changes, or is it just faster?</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907874"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907874"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:5904d54c5e50..632fa696f6d4?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "created_on": "2014-08-30T23:48:15.904529+00:00",
            "updated_on": "2014-08-30T23:48:15.914006+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": 119,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2907874
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "It shouldn't have any functional change.  There was just an extra for loop.",
                "html": "<p>It shouldn't have any functional change.  There was just an extra for loop.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907874"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907874"
                    }
                },
                "id": 2907874
            },
            "created_on": "2014-08-31T00:17:09.242223+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907897"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907897"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2907897,
            "updated_on": "2014-08-31T00:17:37.693057+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Be careful with this, you could end up returning two cells that intersect the same x-y position of the cutting plane, which isn't really a better solution than returning none.  A better selection would ensure that only one of the two could possibly be returned, say by choosing the nearer of the two, and the one to larger coordinates in the case of a tie?",
                "html": "<p>Be careful with this, you could end up returning two cells that intersect the same x-y position of the cutting plane, which isn't really a better solution than returning none.  A better selection would ensure that only one of the two could possibly be returned, say by choosing the nearer of the two, and the one to larger coordinates in the case of a tie?</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907991"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907991"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:5904d54c5e50..632fa696f6d4?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "created_on": "2014-08-31T02:51:40.341089+00:00",
            "updated_on": "2014-08-31T02:51:40.618946+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": 1028,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2907991
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "There may also be no way to solve this issue perfectly depending on how dds and pos are computed (which is frontend specific).",
                "html": "<p>There may also be no way to solve this issue perfectly depending on how dds and pos are computed (which is frontend specific).</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907991"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907991"
                    }
                },
                "id": 2907991
            },
            "created_on": "2014-08-31T03:36:27.566693+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2908015"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2908015"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2908015,
            "updated_on": "2014-08-31T03:36:27.785852+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "That is a valid point that I had worried about as well.  In practice, whenever I found a case where the selector would return no cell/grid because the plane was perfectly aligned with the grid, this allowed for only *one* cell/grid to be selected.",
                "html": "<p>That is a valid point that I had worried about as well.  In practice, whenever I found a case where the selector would return no cell/grid because the plane was perfectly aligned with the grid, this allowed for only <em>one</em> cell/grid to be selected.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2907991"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2907991"
                    }
                },
                "id": 2907991
            },
            "created_on": "2014-08-31T04:06:55.925651+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2908032"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2908032"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2908032,
            "updated_on": "2014-08-31T04:06:55.931989+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Can we add a test to make sure that stays the case?  One thing to try is offsetting the cutting plane from the grid by epsilon and see if it still works.  I'm also concerned that it may work for one frontend/dataset and then cause problems for others.",
                "html": "<p>Can we add a test to make sure that stays the case?  One thing to try is offsetting the cutting plane from the grid by epsilon and see if it still works.  I'm also concerned that it may work for one frontend/dataset and then cause problems for others.</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2908032"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2908032"
                    }
                },
                "id": 2908032
            },
            "created_on": "2014-08-31T17:36:45.410512+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2908885"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2908885"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2908885,
            "updated_on": "2014-08-31T17:36:45.573729+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "@drudd does the added test satisfy this?  Probably not... It is only testing a `StreamDataset`, and it isn't perfectly aligned with the grid.  \n\nThe problem with this issue is that it doesn't often show up.  I only know of a single dataset where alignment with the grid causes no cells to be selected; I can't put this dataset into the public domain, however.  If anyone knows of another dataset where this pops up, I'd be happy to amend the test problem to use that dataset.",
                "html": "<p><a href=\"/drudd/\" rel=\"nofollow\" title=\"@drudd\" class=\"mention\">Douglas Rudd</a> does the added test satisfy this?  Probably not... It is only testing a <code>StreamDataset</code>, and it isn't perfectly aligned with the grid.  </p>\n<p>The problem with this issue is that it doesn't often show up.  I only know of a single dataset where alignment with the grid causes no cells to be selected; I can't put this dataset into the public domain, however.  If anyone knows of another dataset where this pops up, I'd be happy to amend the test problem to use that dataset.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2908885"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2908885"
                    }
                },
                "id": 2908885
            },
            "created_on": "2014-09-02T02:59:33.071821+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919554"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919554"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919554,
            "updated_on": "2014-09-02T02:59:33.139262+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I think you're right that alignment is important, and I'd like to see how it shows up in a real-world case.  How non-public is the dataset you have?  Would you feel comfortable sharing it with an ex-astronomer whose only concern is getting YT to work properly?  Could we anonymize the data but keep the same refinement hierarchy?",
                "html": "<p>I think you're right that alignment is important, and I'd like to see how it shows up in a real-world case.  How non-public is the dataset you have?  Would you feel comfortable sharing it with an ex-astronomer whose only concern is getting YT to work properly?  Could we anonymize the data but keep the same refinement hierarchy?</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919554"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919554"
                    }
                },
                "id": 2919554
            },
            "created_on": "2014-09-02T03:06:08.323303+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919586"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919586"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919586,
            "updated_on": "2014-09-02T03:06:08.525576+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "It is from a RAGE dataset from one of LANL's export-controlled codes.  Currently, the yt RAGE frontend is only in my local fork; I would eventually like to get approval from the lab to push it back to the main yt repo, but that is a whole procedure.  So, even if I were allowed to release the dataset and we scrapped the actual data but kept the grid geometry, you wouldn't be able to read it.  That said, I believe @MatthewTurk mentioned someone had looked into this in the past - presumably because this occurred before?",
                "html": "<p>It is from a RAGE dataset from one of LANL's export-controlled codes.  Currently, the yt RAGE frontend is only in my local fork; I would eventually like to get approval from the lab to push it back to the main yt repo, but that is a whole procedure.  So, even if I were allowed to release the dataset and we scrapped the actual data but kept the grid geometry, you wouldn't be able to read it.  That said, I believe <a href=\"/MatthewTurk/\" rel=\"nofollow\" title=\"@MatthewTurk\" class=\"mention\">Matt Turk</a> mentioned someone had looked into this in the past - presumably because this occurred before?</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919586"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919586"
                    }
                },
                "id": 2919586
            },
            "created_on": "2014-09-02T03:11:38.571032+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919602"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919602"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919602,
            "updated_on": "2014-09-02T03:11:38.582472+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Well that's unfortunate.  My concern is that your fix for this dataset/frontend/alignment combination will break some other frontend/dataset/alignment, but it's currently an unproven assertion. Why don't I try to trigger with a different dataset/StreamDataset either the original problem with the old code or a new problem with your fix. If I can't, it's still not proof of correctness, but at least reason not to avoid fixing the bug-in-hand.",
                "html": "<p>Well that's unfortunate.  My concern is that your fix for this dataset/frontend/alignment combination will break some other frontend/dataset/alignment, but it's currently an unproven assertion. Why don't I try to trigger with a different dataset/StreamDataset either the original problem with the old code or a new problem with your fix. If I can't, it's still not proof of correctness, but at least reason not to avoid fixing the bug-in-hand.</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919602"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919602"
                    }
                },
                "id": 2919602
            },
            "created_on": "2014-09-02T03:16:10.100056+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919620"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919620"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919620,
            "updated_on": "2014-09-02T03:16:10.297952+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I understand your concern.  It will be interesting to see what your tests turn up.\n\nI suppose another route would be to put in an explicit check to ensure that there aren't multiple cells/grids at the same position (x,y) within the slice after the selector has selected its cells/grids.  That seems a bit overkill, but would probably alleviate your concern.",
                "html": "<p>I understand your concern.  It will be interesting to see what your tests turn up.</p>\n<p>I suppose another route would be to put in an explicit check to ensure that there aren't multiple cells/grids at the same position (x,y) within the slice after the selector has selected its cells/grids.  That seems a bit overkill, but would probably alleviate your concern.</p>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919620"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919620"
                    }
                },
                "id": 2919620
            },
            "created_on": "2014-09-02T03:22:45.371725+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919643"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919643"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919643,
            "updated_on": "2014-09-02T03:22:45.380804+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Right, this is really a failing with the Selector concept; it hides possible failure cases.  For some uses, the number of cells returned may not be an issue, but for others it may dramatically change the results. If the calculation that uses the selected cells doesn't explicitly check the cells that are returned then it's possible to generate garbage without anyone the wiser. I agree that explicit checks are probably overkill, but they may be the only way to guarantee the result.\n\nAs a side note, I'm not sure how to properly incorporate epsilon into non-grid aligned selections. Those will likely always be somewhat affected by numerical noise. ",
                "html": "<p>Right, this is really a failing with the Selector concept; it hides possible failure cases.  For some uses, the number of cells returned may not be an issue, but for others it may dramatically change the results. If the calculation that uses the selected cells doesn't explicitly check the cells that are returned then it's possible to generate garbage without anyone the wiser. I agree that explicit checks are probably overkill, but they may be the only way to guarantee the result.</p>\n<p>As a side note, I'm not sure how to properly incorporate epsilon into non-grid aligned selections. Those will likely always be somewhat affected by numerical noise. </p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919643"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919643"
                    }
                },
                "id": 2919643
            },
            "created_on": "2014-09-02T03:40:31.258508+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919712"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919712"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919712,
            "updated_on": "2014-09-02T03:40:31.448173+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "For the case that fails, can you post pos and dds values (to machine precision) for cells that are selected when epsilon is included but fail to be included otherwise? \n\nI'm interested to know if the assumption that pos_i + dds == pos_i+1 to machine precision is being violated, or if it's an issue that shows up when pos values are not aligned to power of two boundaries (as with many amr codes).",
                "html": "<p>For the case that fails, can you post pos and dds values (to machine precision) for cells that are selected when epsilon is included but fail to be included otherwise? </p>\n<p>I'm interested to know if the assumption that pos_i + dds == pos_i+1 to machine precision is being violated, or if it's an issue that shows up when pos values are not aligned to power of two boundaries (as with many amr codes).</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919602"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919602"
                    }
                },
                "id": 2919602
            },
            "created_on": "2014-09-02T03:47:17.488358+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2919744"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2919744"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/ChrisMalone/yt:None..None?path=yt%2Fgeometry%2Fselection_routines.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "inline": {
                "to": null,
                "path": "yt/geometry/selection_routines.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 2919744,
            "updated_on": "2014-09-02T03:47:17.679005+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I think this was prematurely merged...",
                "html": "<p>I think this was prematurely merged...</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933636"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933636"
                }
            },
            "created_on": "2014-09-02T22:54:59.197309+00:00",
            "updated_on": "2014-09-02T22:54:59.205164+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933636
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Yes, it was, I looked through the comments and did not see any objections -- but now I see they were buried in the activity, because of the change.  I apologize, and I can back it out.",
                "html": "<p>Yes, it was, I looked through the comments and did not see any objections -- but now I see they were buried in the activity, because of the change.  I apologize, and I can back it out.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933636"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933636"
                    }
                },
                "id": 2933636
            },
            "created_on": "2014-09-02T22:57:18.856497+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933653"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933653"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933653,
            "updated_on": "2014-09-02T22:57:18.865272+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I don't think it's critical to back out, it's fixing a rare issue and if it's not correct will introduce a rare error.\n\nI'll do what I promised and try to prove it's not correct. ",
                "html": "<p>I don't think it's critical to back out, it's fixing a rare issue and if it's not correct will introduce a rare error.</p>\n<p>I'll do what I promised and try to prove it's not correct. </p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933653"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933653"
                    }
                },
                "id": 2933653
            },
            "created_on": "2014-09-02T22:59:00.669233+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933673"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933673"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933673,
            "updated_on": "2014-09-02T22:59:00.676279+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Yes, it was, I looked through the comments and did not see any objections\n-- but now I see they were buried in the activity, because of the change.\nI apologize, and I can back it out.\n",
                "html": "<p>Yes, it was, I looked through the comments and did not see any objections\n-- but now I see they were buried in the activity, because of the change.\nI apologize, and I can back it out.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933636"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933636"
                    }
                },
                "id": 2933636
            },
            "created_on": "2014-09-02T23:00:07.147135+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933680"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933680"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933680,
            "updated_on": "2014-09-02T23:00:07.213141+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Okay, I think you should pull it back out.  Here is an example script that uses the ART answer test dataset.  This fails on the current tip and succeeds before this PR went in (commit 4966afc).  Interestingly it doesn't fail at the center of the box or the exact edge, but only at 1.0.  I'll need to do a bit more work to make sure it isn't a problem with ARTIO's special SFC selection that's being triggered by this new code, but my hunch is it's select_bbox simply returning true for too many root cells.\n\n\n```\n#!python\n\nimport yt\nimport numpy as np\n\nepsilon = np.finfo(np.float64).eps\n\nds = yt.load(\"sizmbhloz-clref04SNth-rs9_a0.9011.art\")\n\ncoord = 1.0\nslice = ds.slice(2,coord)\nslice_minus = ds.slice(2,coord-epsilon)\nslice_plus = ds.slice(2,coord+epsilon)\nprint np.all(slice[\"ones\"] == slice_plus[\"ones\"]) and np.all(slice[\"ones\"] == slice_minus[\"ones\"])\nprint slice[\"ones\"].shape, slice_plus[\"ones\"].shape, slice_minus[\"ones\"].shape\n```\n\nCurrent tip:\n```\nyt : [INFO     ] 2014-09-02 18:36:57,123 Parameters: current_time              = 12042349585.4 yr\nyt : [INFO     ] 2014-09-02 18:36:57,124 Parameters: domain_dimensions         = [128 128 128]\nyt : [INFO     ] 2014-09-02 18:36:57,124 Parameters: domain_left_edge          = [ 0.  0.  0.]\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: domain_right_edge         = [ 128.  128.  128.]\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: cosmological_simulation   = True\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: current_redshift          = 0.10980115777\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: omega_lambda              = 0.7\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: omega_matter              = 0.3\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: hubble_constant           = 0.7\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loading field plugins.\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded angular_momentum (8 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded astro (14 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded cosmology (20 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,539 Loaded fluid (55 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded fluid_vector (87 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded geometric (101 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded local (101 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded magnetic_field (107 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,541 Loaded species (107 new fields)\nyt : [INFO     ] 2014-09-02 18:37:02,816 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:37:06,621 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:37:07,543 Created 1242 chunks for ARTIO\nFalse\n(16384,) (16384,) (32768,)\n```\n\nPrevious commit:\n```\nyt : [INFO     ] 2014-09-02 18:38:18,979 Parameters: current_time              = 12042349585.4 yr\nyt : [INFO     ] 2014-09-02 18:38:18,979 Parameters: domain_dimensions         = [128 128 128]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: domain_left_edge          = [ 0.  0.  0.]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: domain_right_edge         = [ 128.  128.  128.]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: cosmological_simulation   = True\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: current_redshift          = 0.10980115777\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: omega_lambda              = 0.7\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: omega_matter              = 0.3\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: hubble_constant           = 0.7\nyt : [INFO     ] 2014-09-02 18:38:19,389 Loading field plugins.\nyt : [INFO     ] 2014-09-02 18:38:19,389 Loaded angular_momentum (8 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded astro (14 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded cosmology (20 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded fluid (55 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,391 Loaded fluid_vector (87 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,391 Loaded geometric (101 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded local (101 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded magnetic_field (107 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded species (107 new fields)\nyt : [INFO     ] 2014-09-02 18:38:24,258 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:38:27,726 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:38:30,539 Created 5000 chunks for ARTIO\nTrue\n(16384,) (16384,) (16384,)\n```",
                "html": "<p>Okay, I think you should pull it back out.  Here is an example script that uses the ART answer test dataset.  This fails on the current tip and succeeds before this PR went in (commit <a href=\"/yt_analysis/yt/commits/4966afc\" rel=\"nofollow\">4966afc</a>).  Interestingly it doesn't fail at the center of the box or the exact edge, but only at 1.0.  I'll need to do a bit more work to make sure it isn't a problem with ARTIO's special SFC selection that's being triggered by this new code, but my hunch is it's select_bbox simply returning true for too many root cells.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">yt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">epsilon</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">finfo</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">eps</span>\n\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;sizmbhloz-clref04SNth-rs9_a0.9011.art&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">coord</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"nb\">slice</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">slice</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">coord</span><span class=\"p\">)</span>\n<span class=\"n\">slice_minus</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">slice</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">coord</span><span class=\"o\">-</span><span class=\"n\">epsilon</span><span class=\"p\">)</span>\n<span class=\"n\">slice_plus</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">slice</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">coord</span><span class=\"o\">+</span><span class=\"n\">epsilon</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"nb\">slice</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">slice_plus</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">])</span> <span class=\"ow\">and</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"nb\">slice</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">slice_minus</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">])</span>\n<span class=\"k\">print</span> <span class=\"nb\">slice</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">slice_plus</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">slice_minus</span><span class=\"p\">[</span><span class=\"s2\">&quot;ones&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n</pre></div>\n\n\n<p>Current tip:</p>\n<div class=\"codehilite\"><pre><span></span>yt : [INFO     ] 2014-09-02 18:36:57,123 Parameters: current_time              = 12042349585.4 yr\nyt : [INFO     ] 2014-09-02 18:36:57,124 Parameters: domain_dimensions         = [128 128 128]\nyt : [INFO     ] 2014-09-02 18:36:57,124 Parameters: domain_left_edge          = [ 0.  0.  0.]\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: domain_right_edge         = [ 128.  128.  128.]\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: cosmological_simulation   = True\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: current_redshift          = 0.10980115777\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: omega_lambda              = 0.7\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: omega_matter              = 0.3\nyt : [INFO     ] 2014-09-02 18:36:57,125 Parameters: hubble_constant           = 0.7\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loading field plugins.\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded angular_momentum (8 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded astro (14 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,538 Loaded cosmology (20 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,539 Loaded fluid (55 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded fluid_vector (87 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded geometric (101 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded local (101 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,540 Loaded magnetic_field (107 new fields)\nyt : [INFO     ] 2014-09-02 18:36:57,541 Loaded species (107 new fields)\nyt : [INFO     ] 2014-09-02 18:37:02,816 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:37:06,621 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:37:07,543 Created 1242 chunks for ARTIO\nFalse\n(16384,) (16384,) (32768,)\n</pre></div>\n\n\n<p>Previous commit:</p>\n<div class=\"codehilite\"><pre><span></span>yt : [INFO     ] 2014-09-02 18:38:18,979 Parameters: current_time              = 12042349585.4 yr\nyt : [INFO     ] 2014-09-02 18:38:18,979 Parameters: domain_dimensions         = [128 128 128]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: domain_left_edge          = [ 0.  0.  0.]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: domain_right_edge         = [ 128.  128.  128.]\nyt : [INFO     ] 2014-09-02 18:38:18,980 Parameters: cosmological_simulation   = True\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: current_redshift          = 0.10980115777\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: omega_lambda              = 0.7\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: omega_matter              = 0.3\nyt : [INFO     ] 2014-09-02 18:38:18,981 Parameters: hubble_constant           = 0.7\nyt : [INFO     ] 2014-09-02 18:38:19,389 Loading field plugins.\nyt : [INFO     ] 2014-09-02 18:38:19,389 Loaded angular_momentum (8 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded astro (14 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded cosmology (20 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,390 Loaded fluid (55 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,391 Loaded fluid_vector (87 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,391 Loaded geometric (101 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded local (101 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded magnetic_field (107 new fields)\nyt : [INFO     ] 2014-09-02 18:38:19,392 Loaded species (107 new fields)\nyt : [INFO     ] 2014-09-02 18:38:24,258 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:38:27,726 Created 6240 chunks for ARTIO\nyt : [INFO     ] 2014-09-02 18:38:30,539 Created 5000 chunks for ARTIO\nTrue\n(16384,) (16384,) (16384,)\n</pre></div>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933975"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933975"
                }
            },
            "created_on": "2014-09-02T23:41:29.156160+00:00",
            "updated_on": "2014-09-02T23:44:05.382809+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933975
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "1.0 is probably the worst case value for adding/subtracting epsilon.",
                "html": "<p>1.0 is probably the worst case value for adding/subtracting epsilon.</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933992"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933992"
                }
            },
            "created_on": "2014-09-02T23:44:57.555028+00:00",
            "updated_on": "2014-09-02T23:44:57.561401+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933992
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Doug, would it be sufficient to set grid_eps to 0.0 for the time being?\n",
                "html": "<p>Doug, would it be sufficient to set grid_eps to 0.0 for the time being?</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933975"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933975"
                    }
                },
                "id": 2933975
            },
            "created_on": "2014-09-02T23:45:06.866382+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933994"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933994"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2933994,
            "updated_on": "2014-09-02T23:45:06.905735+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Yes, that's fine.  I'll work with Chris to see if we can get this working in general. I also should reiterate that it's still entirely possible ARTIO is at fault.",
                "html": "<p>Yes, that's fine.  I'll work with Chris to see if we can get this working in general. I also should reiterate that it's still entirely possible ARTIO is at fault.</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933994"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933994"
                    }
                },
                "id": 2933994
            },
            "created_on": "2014-09-02T23:47:43.397670+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934007"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934007"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2934007,
            "updated_on": "2014-09-02T23:48:43.985031+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I pushed such a change in 627128ec2f64.",
                "html": "<p>I pushed such a change in <a href=\"/yt_analysis/yt/commits/627128ec2f64\" rel=\"nofollow\">627128ec2f64</a>.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934007"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934007"
                    }
                },
                "id": 2934007
            },
            "created_on": "2014-09-02T23:48:52.418159+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934018"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934018"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2934018,
            "updated_on": "2014-09-02T23:48:52.425003+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "What does the backtrack look like for that test?\n\nLet me know if there is something you want me to fix on my end. Out waiting for food but should be home shortly. \n\n> ",
                "html": "<p>What does the backtrack look like for that test?</p>\n<p>Let me know if there is something you want me to fix on my end. Out waiting for food but should be home shortly. </p>\n<blockquote></blockquote>"
            },
            "user": {
                "username": "ChrisMalone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ChrisMalone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
                    }
                },
                "display_name": "Chris Malone",
                "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2933975"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2933975"
                    }
                },
                "id": 2933975
            },
            "created_on": "2014-09-02T23:55:06.611206+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934054"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934054"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2934054,
            "updated_on": "2014-09-02T23:55:06.654366+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "This just shows that for the ARTIO frontend you can get a case where being off the grid by epsilon allows for cells on both sides of the grid boundary to be selected. Matt disabled it in the code that's going out as 3.0.1 by setting grid_eps = 0 until we can figure out more clearly what's going on.  I don't think I'll have a chance to work more tonight, but I also don't think there's anything that needs doing immediately.",
                "html": "<p>This just shows that for the ARTIO frontend you can get a case where being off the grid by epsilon allows for cells on both sides of the grid boundary to be selected. Matt disabled it in the code that's going out as 3.0.1 by setting grid_eps = 0 until we can figure out more clearly what's going on.  I don't think I'll have a chance to work more tonight, but I also don't think there's anything that needs doing immediately.</p>"
            },
            "user": {
                "username": "drudd",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/drudd"
                    },
                    "html": {
                        "href": "https://bitbucket.org/drudd/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/drudd/avatar/32/"
                    }
                },
                "display_name": "Douglas Rudd",
                "uuid": "{e77bd1fb-b3d9-4763-a121-43d2028b2bbd}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934054"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934054"
                    }
                },
                "id": 2934054
            },
            "created_on": "2014-09-03T01:14:34.561822+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174/comments/2934482"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174/_/diff#comment-2934482"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1174"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1174"
                    }
                },
                "title": "add an epsilon check to selector",
                "id": 1174
            },
            "type": "pullrequest_comment",
            "id": 2934482,
            "updated_on": "2014-09-03T01:16:14.092645+00:00"
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "Sometimes, if the a selector such as a slice is perfectly aligned with the grid boundaries, floating pointedness causes the selector to not pick any objects.  \r\n\r\nHere we add an epsilon parameter so that we can make a definitive decision about which grids/objects to take.  I've only included a fix for slices, but if anyone knows this crops up with other selectors, let me know where I should make fixes.\r\n\r\nthis PR also fixes a vestigial loop",
    "author": {
        "username": "ChrisMalone",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/ChrisMalone"
            },
            "html": {
                "href": "https://bitbucket.org/ChrisMalone/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/ChrisMalone/avatar/32/"
            }
        },
        "display_name": "Chris Malone",
        "uuid": "{eab958cf-edbf-44db-8a2e-8b8ed90af67f}"
    },
    "updated_on": "2014-09-03T01:16:14.097600+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "4966afceaddf",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/4966afceaddf"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}