{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "atmyers/yt",
            "uuid": "{14866916-6c53-4d06-95e1-89d30c798c08}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/atmyers/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/atmyers/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/atmyers/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "43cf42503977",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/atmyers/yt/commit/43cf42503977"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "ngoldbaum",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
            },
            "html": {
                "href": "https://bitbucket.org/ngoldbaum/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
            }
        },
        "display_name": "Nathan Goldbaum",
        "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
    },
    "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
    "id": 2532,
    "comment_count": 6,
    "created_on": "2017-03-01T23:38:20.378091+00:00",
    "merge_commit": {
        "hash": "43cf42503977",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/43cf42503977"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "markdown",
                "raw": "Can you share a code snippet that triggers bad behavior before this PR is applied? I don't quite follow why this helps and what behavior changes here.",
                "html": "<p>Can you share a code snippet that triggers bad behavior before this PR is applied? I don't quite follow why this helps and what behavior changes here.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400189"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400189"
                }
            },
            "created_on": "2017-03-01T23:40:28.911250+00:00",
            "updated_on": "2017-03-01T23:40:28.913375+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "type": "pullrequest_comment",
            "id": 32400189
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Just doing:\n\n```\n#!python\n\nimport yt\nimport numpy as np\nds = yt.load(\"BoxLib-Codes/Nyx/Exec/RegressionTest/plt00010/\")\n```\nwould result in:\n\n\n```\n#!python\n\nImportError                               Traceback (most recent call last)\n<ipython-input-1-381616acd1a5> in <module>()\n      1 import yt\n      2 import numpy as np\n----> 3 ds = yt.load(\"BoxLib-Codes/Nyx/Exec/RegressionTest/plt00010/\")\n\n/home/atmyers/yt-conda/src/yt-hg/yt/convenience.pyc in load(*args, **kwargs)\n     77     for n, c in types_to_check.items():\n     78         if n is None: continue\n---> 79         if c._is_valid(*args, **kwargs): candidates.append(n)\n     80 \n     81     # convert to classes\n\n/home/atmyers/yt-conda/src/yt-hg/yt/frontends/flash/data_structures.py in _is_valid(self, *args, **kwargs)\n    491     def _is_valid(self, *args, **kwargs):\n    492         try:\n--> 493             fileh = HDF5FileHandler(args[0])\n    494             if \"bounding box\" not in fileh[\"/\"].keys() \\\n    495                 and \"localnp\" in fileh[\"/\"].keys():\n\n/home/atmyers/yt-conda/src/yt-hg/yt/utilities/file_handler.pyc in __init__(self, filename)\n     20 \n     21     def __init__(self, filename):\n---> 22         self.handle = h5py.File(filename, 'r')\n     23 \n     24     def __getitem__(self, key):\n\n/home/atmyers/yt-conda/src/yt-hg/yt/utilities/on_demand_imports.pyc in __call__(self, *args, **kwargs)\n     29 \n     30     def __call__(self, *args, **kwargs):\n---> 31         raise self.error\n     32 \n     33 class astropy_imports(object):\n\nImportError: This functionality requires the h5py package to be installed.\n```\nIf you don't have h5py installed. The load function will check all is_valid() functions for all the frontends, some of which crash instead of handling the exception, so this happens even if you aren't using a frontend that doesn't require h5py.",
                "html": "<p>Just doing:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">yt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;BoxLib-Codes/Nyx/Exec/RegressionTest/plt00010/&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>would result in:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">ImportError</span>                               <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">381616</span><span class=\"n\">acd1a5</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n      <span class=\"mi\">1</span> <span class=\"kn\">import</span> <span class=\"nn\">yt</span>\n      <span class=\"mi\">2</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">3</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;BoxLib-Codes/Nyx/Exec/RegressionTest/plt00010/&quot;</span><span class=\"p\">)</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">atmyers</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">hg</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">convenience</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n     <span class=\"mi\">77</span>     <span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">types_to_check</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n     <span class=\"mi\">78</span>         <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">79</span>         <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">_is_valid</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span> <span class=\"n\">candidates</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n     <span class=\"mi\">80</span> \n     <span class=\"mi\">81</span>     <span class=\"c1\"># convert to classes</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">atmyers</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">hg</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">frontends</span><span class=\"o\">/</span><span class=\"n\">flash</span><span class=\"o\">/</span><span class=\"n\">data_structures</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"n\">_is_valid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"mi\">491</span>     <span class=\"k\">def</span> <span class=\"nf\">_is_valid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"mi\">492</span>         <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">493</span>             <span class=\"n\">fileh</span> <span class=\"o\">=</span> <span class=\"n\">HDF5FileHandler</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"mi\">494</span>             <span class=\"k\">if</span> <span class=\"s2\">&quot;bounding box&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fileh</span><span class=\"p\">[</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span> \\\n    <span class=\"mi\">495</span>                 <span class=\"ow\">and</span> <span class=\"s2\">&quot;localnp&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fileh</span><span class=\"p\">[</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">atmyers</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">hg</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">utilities</span><span class=\"o\">/</span><span class=\"n\">file_handler</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n     <span class=\"mi\">20</span> \n     <span class=\"mi\">21</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">22</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span> <span class=\"o\">=</span> <span class=\"n\">h5py</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n     <span class=\"mi\">23</span> \n     <span class=\"mi\">24</span>     <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">atmyers</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"n\">hg</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">utilities</span><span class=\"o\">/</span><span class=\"n\">on_demand_imports</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n     <span class=\"mi\">29</span> \n     <span class=\"mi\">30</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">31</span>         <span class=\"k\">raise</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error</span>\n     <span class=\"mi\">32</span> \n     <span class=\"mi\">33</span> <span class=\"k\">class</span> <span class=\"nc\">astropy_imports</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n<span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">This</span> <span class=\"n\">functionality</span> <span class=\"n\">requires</span> <span class=\"n\">the</span> <span class=\"n\">h5py</span> <span class=\"n\">package</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">installed</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>If you don't have h5py installed. The load function will check all is_valid() functions for all the frontends, some of which crash instead of handling the exception, so this happens even if you aren't using a frontend that doesn't require h5py.</p>"
            },
            "user": {
                "username": "atmyers",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/atmyers"
                    },
                    "html": {
                        "href": "https://bitbucket.org/atmyers/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/atmyers/avatar/32/"
                    }
                },
                "display_name": "Andrew Myers",
                "uuid": "{651c5647-b78f-4cd9-8d9a-5d6e8c9ac8d3}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400189"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400189"
                    }
                },
                "id": 32400189
            },
            "created_on": "2017-03-01T23:44:40.689641+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400364"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400364"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "type": "pullrequest_comment",
            "id": 32400364,
            "updated_on": "2017-03-01T23:45:18.498731+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "What if I try to load a dataset in a frontend that needs h5py support but h5py isn't installed. With this change will I get `YTOutputNotIdentified` instead of `ImportError`? The has what has prevented my from applying a similar fix before when I saw it.",
                "html": "<p>What if I try to load a dataset in a frontend that needs h5py support but h5py isn't installed. With this change will I get <code>YTOutputNotIdentified</code> instead of <code>ImportError</code>? The has what has prevented my from applying a similar fix before when I saw it.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400364"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400364"
                    }
                },
                "id": 32400364
            },
            "created_on": "2017-03-01T23:46:28.351817+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400438"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400438"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "type": "pullrequest_comment",
            "id": 32400438,
            "updated_on": "2017-03-01T23:46:28.354863+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "* All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/632/\n* Something went wrong, you should checkout https://tests.yt-project.org/job/yt_testsuite/633/\n* Something went wrong, you should checkout https://tests.yt-project.org/job/yt_testsuite/634/\n* All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/635/\n* All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/637/\n* All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/674/\n",
                "html": "<ul>\n<li>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/632/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/632/</a></li>\n<li>Something went wrong, you should checkout <a href=\"https://tests.yt-project.org/job/yt_testsuite/633/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/633/</a></li>\n<li>Something went wrong, you should checkout <a href=\"https://tests.yt-project.org/job/yt_testsuite/634/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/634/</a></li>\n<li>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/635/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/635/</a></li>\n<li>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/637/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/637/</a></li>\n<li>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/674/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/674/</a></li>\n</ul>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32401904"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32401904"
                }
            },
            "created_on": "2017-03-02T00:28:22.042325+00:00",
            "updated_on": "2017-03-16T20:47:51.381106+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "type": "pullrequest_comment",
            "id": 32401904
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "It should now handle that case, as we discussed on slack.",
                "html": "<p>It should now handle that case, as we discussed on slack.</p>"
            },
            "user": {
                "username": "atmyers",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/atmyers"
                    },
                    "html": {
                        "href": "https://bitbucket.org/atmyers/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/atmyers/avatar/32/"
                    }
                },
                "display_name": "Andrew Myers",
                "uuid": "{651c5647-b78f-4cd9-8d9a-5d6e8c9ac8d3}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32400438"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32400438"
                    }
                },
                "id": 32400438
            },
            "created_on": "2017-03-02T01:27:31.163195+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32403717"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32403717"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "type": "pullrequest_comment",
            "id": 32403717,
            "updated_on": "2017-03-02T01:27:31.166255+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Shouldn't this use the top-level import you added? right now this isn't using the on-demand import machinery, i think.\n\nAlso perhaps the import of the on-demand import version of netcdf4 shouldn't happen until we really need it down here. Otherwise if you have `netCDF4` installed you'll pay the import cost for it every time you do `import yt`.",
                "html": "<p>Shouldn't this use the top-level import you added? right now this isn't using the on-demand import machinery, i think.</p>\n<p>Also perhaps the import of the on-demand import version of netcdf4 shouldn't happen until we really need it down here. Otherwise if you have <code>netCDF4</code> installed you'll pay the import cost for it every time you do <code>import yt</code>.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532/comments/32408412"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532/_/diff#comment-32408412"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/atmyers/yt:d8f50f5632df..3eca2ae80ab1?path=yt%2Futilities%2Ffile_handler.py"
                }
            },
            "created_on": "2017-03-02T04:32:35.830991+00:00",
            "updated_on": "2017-03-02T04:32:35.833335+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2532"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2532"
                    }
                },
                "title": "[BUGFIX] Handle a couple of places where uncaught exceptions would be raised in yt.load() if h5py was not installed.",
                "id": 2532
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/file_handler.py",
                "from": 72
            },
            "type": "pullrequest_comment",
            "id": 32408412
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "",
    "author": {
        "username": "atmyers",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/atmyers"
            },
            "html": {
                "href": "https://bitbucket.org/atmyers/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/atmyers/avatar/32/"
            }
        },
        "display_name": "Andrew Myers",
        "uuid": "{651c5647-b78f-4cd9-8d9a-5d6e8c9ac8d3}"
    },
    "updated_on": "2017-03-16T20:55:13.193045+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "9e4ea1785be2",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/9e4ea1785be2"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}