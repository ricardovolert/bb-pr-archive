{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "gsiisg/yt",
            "uuid": "{eaf052c4-9e34-43bd-b7d1-e0d9a405fcf1}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/gsiisg/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/gsiisg/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/gsiisg/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "d4b17fba139c",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/gsiisg/yt/commit/d4b17fba139c"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "Ellipsoid Fork",
    "id": 173,
    "comment_count": 4,
    "created_on": "2012-06-20T01:15:18.699674+00:00",
    "merge_commit": {
        "hash": "5052c5ca60c3",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/5052c5ca60c3"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "creole",
                "raw": "Thanks for submitting this Geoffrey!  I know you have worked very hard on it.  I have a few comments; if you would like to resubmit an updated version, you can push changes to your fork and click on the \"Issue Pull Request\" button.  It will offer you the option of updating an existing pull request (this one.)\n\n* Instead of printing, I would suggest either raising an exception (which you can define in yt/exceptions.py) or issuing a warning with {{{mylog.warning(\"Not enough particles to determine ellipsoidal parameters.\")}}}\n* Using the position array the way you do for checking the cases and the axes could lead to a lot of temporary arrays being created, which can drive memory consumption way up.  In future versions (not necessary for this pull request) you might evaluate using a temporary array, in-place operations, or seeing which values can be calculated on the fly instead of retained.  This also applies to rr, which by my reading is of size (N_part, 3), and which is then duplicated into temp_e0, temp_e1, temp_e2.\n* I'd suggest you put all of the ellipsoidal functions in the base class instead of distributing throughout the subclasses.  This avoids code reuse.  You can then override them in parallelHF's halos.\n* Please move all of the rotation matrix functions into yt/utilities/math_utils.py and add docstrings.  These can then be imported in both data_containers.py and the halo functions.\n* Using the sphere function for _get_list_of_grids seems like a fine idea to me\n\nGood work!  I (or someone else) still need to evaluate the correctness of the ellipsoid, but that set of comments should help with coding style and some other things.",
                "html": "<p>Thanks for submitting this Geoffrey!  I know you have worked very hard on it.  I have a few comments; if you would like to resubmit an updated version, you can push changes to your fork and click on the \"Issue Pull Request\" button.  It will offer you the option of updating an existing pull request (this one.)</p>\n<ul><li>Instead of printing, I would suggest either raising an exception (which you can define in yt/exceptions.py) or issuing a warning with <code>mylog.warning(\"Not enough particles to determine ellipsoidal parameters.\")</code>\n</li><li>Using the position array the way you do for checking the cases and the axes could lead to a lot of temporary arrays being created, which can drive memory consumption way up.  In future versions (not necessary for this pull request) you might evaluate using a temporary array, in-place operations, or seeing which values can be calculated on the fly instead of retained.  This also applies to rr, which by my reading is of size (N_part, 3), and which is then duplicated into temp_e0, temp_e1, temp_e2.\n</li><li>I'd suggest you put all of the ellipsoidal functions in the base class instead of distributing throughout the subclasses.  This avoids code reuse.  You can then override them in parallelHF's halos.\n</li><li>Please move all of the rotation matrix functions into yt/utilities/math_utils.py and add docstrings.  These can then be imported in both data_containers.py and the halo functions.\n</li><li>Using the sphere function for _get_list_of_grids seems like a fine idea to me\n</li></ul>\n<p>Good work!  I (or someone else) still need to evaluate the correctness of the ellipsoid, but that set of comments should help with coding style and some other things.</p>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/comments/8728"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173/_/diff#comment-8728"
                }
            },
            "created_on": "2012-06-20T02:15:29.392519+00:00",
            "updated_on": "2012-06-20T02:15:29.444485+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173"
                    }
                },
                "title": "Ellipsoid Fork",
                "id": 173
            },
            "type": "pullrequest_comment",
            "id": 8728
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Geoffrey,\n\nSince this is a fairly complex data object, would it be possible to write a short script that:\n\n1) Creates an ellipsoidal data object (not based on halos, just a sample ellipsoid)\n\n2) Makes x,y,z projections of the \"Ones\" field with weight=None, and uses the ellipsoid data object as the data_source?\n\nand put it up on http://paste.yt-project.org/ ?\n\nThis would help do a couple of simple tests that could eventually be adopted for the automated testing suite.  \n\nGreat work!\nSam",
                "html": "<p>Hi Geoffrey,</p>\n<p>Since this is a fairly complex data object, would it be possible to write a short script that:</p>\n<p>1) Creates an ellipsoidal data object (not based on halos, just a sample ellipsoid)</p>\n<p>2) Makes x,y,z projections of the \"Ones\" field with weight=None, and uses the ellipsoid data object as the data_source?</p>\n<p>and put it up on <a href=\"http://paste.yt-project.org/\">http://paste.yt-project.org/</a> ?</p>\n<p>This would help do a couple of simple tests that could eventually be adopted for the automated testing suite.  </p>\n<p>Great work!\nSam</p>\n"
            },
            "user": {
                "username": "samskillman",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/comments/8816"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173/_/diff#comment-8816"
                }
            },
            "created_on": "2012-06-20T19:48:35.403352+00:00",
            "updated_on": "2012-06-20T19:56:01.796935+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173"
                    }
                },
                "title": "Ellipsoid Fork",
                "id": 173
            },
            "type": "pullrequest_comment",
            "id": 8816
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Geoffrey,\n\nSorry to jump in late, but I think I might be able to simplify your job a little bit.  It would be great if you could include the orientation logic by including an instance of the orientation class, defined in: utilities/orientation.py.  This class has a bunch of member functions that make it much easier to define a local coordinate system, in much the same way as you have done.\n\nPlease let me know if the orientation class isn't clear or if you have trouble integrating it into your code.  You can take a look at the camera to see how it's integrated there, if you want an example.\n\n-Nathan",
                "html": "<p>Hi Geoffrey,</p>\n<p>Sorry to jump in late, but I think I might be able to simplify your job a little bit.  It would be great if you could include the orientation logic by including an instance of the orientation class, defined in: utilities/orientation.py.  This class has a bunch of member functions that make it much easier to define a local coordinate system, in much the same way as you have done.</p>\n<p>Please let me know if the orientation class isn't clear or if you have trouble integrating it into your code.  You can take a look at the camera to see how it's integrated there, if you want an example.</p>\n<p>-Nathan</p>\n"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/comments/8919"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173/_/diff#comment-8919"
                }
            },
            "created_on": "2012-06-21T23:03:00.042876+00:00",
            "updated_on": "2012-06-21T23:03:00.049434+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173"
                    }
                },
                "title": "Ellipsoid Fork",
                "id": 173
            },
            "type": "pullrequest_comment",
            "id": 8919
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Geoffrey,\n\nThis addresses most/all of the concerns.  If you could please go over Sam's comment, that's the last item and we can accept -- a simple script, a projection, and something we can verify will do it.  Thanks!",
                "html": "<p>Hi Geoffrey,</p>\n<p>This addresses most/all of the concerns.  If you could please go over Sam's comment, that's the last item and we can accept -- a simple script, a projection, and something we can verify will do it.  Thanks!</p>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173/comments/9004"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173/_/diff#comment-9004"
                }
            },
            "created_on": "2012-06-23T04:06:59.708897+00:00",
            "updated_on": "2012-06-23T04:06:59.717080+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/173"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/173"
                    }
                },
                "title": "Ellipsoid Fork",
                "id": 173
            },
            "type": "pullrequest_comment",
            "id": 9004
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "This is the ellipsoid fork of YT by Geoffrey So, trying to get it in before YT 3.0.  The new functions are documented and will submit a separate yt-doc pull request.\r\n\r\nUpdate:\r\n-Merged in new definition of get_rotation_matrix\r\n-Moved the rotation matrices I made into math_utils.py and defined it relative to get_rotation_matrix, calls to RX will have to have the import statements\r\nfrom yt.utilities.math_utils import RX\r\nfrom yt.utilities.math_utils import RY\r\nfrom yt.utilities.math_utils import RZ\r\n-Changed behavior of not enough particles for ellipsoid to a warning log message\r\n",
    "author": {
        "username": "gsiisg",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/gsiisg"
            },
            "html": {
                "href": "https://bitbucket.org/gsiisg/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/gsiisg/avatar/32/"
            }
        },
        "display_name": "gsiisg",
        "uuid": "{142f28fc-a606-40a5-ad28-e1ca0344b4c5}"
    },
    "updated_on": "2012-06-23T12:29:27.605622+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "01d7918185b6",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/01d7918185b6"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}