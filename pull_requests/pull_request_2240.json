{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "charlie_watson/yt",
            "uuid": "{0c88153f-d589-4a0e-a0b1-26e67517347a}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/charlie_watson/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/charlie_watson/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/charlie_watson/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "f499a0db58f4",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/charlie_watson/yt/commit/f499a0db58f4"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "Changing amr_kdtree functions to be Node class methods",
    "id": 2240,
    "comment_count": 35,
    "created_on": "2016-06-16T00:45:05.018740+00:00",
    "merge_commit": {
        "hash": "3ca8a739e529",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/3ca8a739e529"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "markdown",
                "raw": "Thanks for the pull request!  I look forward to reviewing this, and to see the rest of your efforts.",
                "html": "<p>Thanks for the pull request!  I look forward to reviewing this, and to see the rest of your efforts.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820444"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820444"
                }
            },
            "created_on": "2016-06-16T00:46:39.587309+00:00",
            "updated_on": "2016-06-16T00:46:39.592712+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 19820444
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "can you delete this line?",
                "html": "<p>can you delete this line?</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820491"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820491"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:f90f0090a782..88532ec0be1d?path=yt%2Futilities%2Flib%2Famr_kdtools.pxd"
                }
            },
            "created_on": "2016-06-16T00:49:10.296273+00:00",
            "updated_on": "2016-06-16T00:49:10.298305+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 22,
                "path": "yt/utilities/lib/amr_kdtools.pxd",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19820491
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "You're welcome! I'm excited to continue working on it.",
                "html": "<p>You're welcome! I'm excited to continue working on it.</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820444"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820444"
                    }
                },
                "id": 19820444
            },
            "created_on": "2016-06-16T00:52:06.728517+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820534"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820534"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 19820534,
            "updated_on": "2016-06-16T00:52:06.786518+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "While you're touching these functions, it would also be nice to give them proper error handling. The easiest and lowest overhead way to do that is to make them all return int and have the return value indicate an error condition. See http://docs.cython.org/src/userguide/language_basics.html#error-return-values for more details.\n\nThat doesn't need to happen here, but it would be a really nice improvement for this code - I've done this manually once for another issue after discovering there was some out-of-bounds access happening and the error wasn't getting propogated up the call stack.",
                "html": "<p>While you're touching these functions, it would also be nice to give them proper error handling. The easiest and lowest overhead way to do that is to make them all return int and have the return value indicate an error condition. See <a href=\"http://docs.cython.org/src/userguide/language_basics.html#error-return-values\" rel=\"nofollow\">http://docs.cython.org/src/userguide/language_basics.html#error-return-values</a> for more details.</p>\n<p>That doesn't need to happen here, but it would be a really nice improvement for this code - I've done this manually once for another issue after discovering there was some out-of-bounds access happening and the error wasn't getting propogated up the call stack.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820540"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820540"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:f90f0090a782..88532ec0be1d?path=yt%2Futilities%2Flib%2Famr_kdtools.pxd"
                }
            },
            "created_on": "2016-06-16T00:52:22.722446+00:00",
            "updated_on": "2016-06-16T00:52:22.724194+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 84,
                "path": "yt/utilities/lib/amr_kdtools.pxd",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19820540
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Good idea! When I make these changes, should that go in my next pull request, or is there a way to modify the contents of this existing one #2240?",
                "html": "<p>Good idea! When I make these changes, should that go in my next pull request, or is there a way to modify the contents of this existing one #2240?</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820540"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820540"
                    }
                },
                "id": 19820540
            },
            "created_on": "2016-06-16T01:03:13.322420+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820725"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820725"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pxd"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pxd",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19820725,
            "updated_on": "2016-06-16T01:03:22.759110+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Either way is fine. You can push new commits to this pull request by making a commit with tipmost commit of this pull request checked out:\n\n```\n$ hg update f90f009\n<make changes>\n$ hg commit -m \"my commit!\"\n$ hg push -r . https://bitbucket.org/charlie_watson/yt\n```\n\nWhen you push the pull request will automatically update.\n\nThis workflow covered in the yt developer guide:\n\nhttp://yt-project.org/docs/dev/developing/developing.html#making-and-sharing-changes",
                "html": "<p>Either way is fine. You can push new commits to this pull request by making a commit with tipmost commit of this pull request checked out:</p>\n<div class=\"codehilite\"><pre><span></span>$ hg update f90f009\n&lt;make changes&gt;\n$ hg commit -m <span class=\"s2\">&quot;my commit!&quot;</span>\n$ hg push -r . https://bitbucket.org/charlie_watson/yt\n</pre></div>\n\n\n<p>When you push the pull request will automatically update.</p>\n<p>This workflow covered in the yt developer guide:</p>\n<p><a href=\"http://yt-project.org/docs/dev/developing/developing.html#making-and-sharing-changes\" rel=\"nofollow\">http://yt-project.org/docs/dev/developing/developing.html#making-and-sharing-changes</a></p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19820725"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19820725"
                    }
                },
                "id": 19820725
            },
            "created_on": "2016-06-16T01:22:08.501695+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19821073"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19821073"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pxd"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pxd",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19821073,
            "updated_on": "2016-06-16T01:22:08.504170+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Something went wrong, you should checkout https://tests.yt-project.org/job/yt_testsuite/598/",
                "html": "<p>Something went wrong, you should checkout <a href=\"https://tests.yt-project.org/job/yt_testsuite/598/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/598/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19823221"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19823221"
                }
            },
            "created_on": "2016-06-16T03:43:14.357733+00:00",
            "updated_on": "2016-06-16T03:43:14.439374+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 19823221
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I'd just remove the import, no need to comment it out or explain the comment. That's what VCS history is for :smile:",
                "html": "<p>I'd just remove the import, no need to comment it out or explain the comment. That's what VCS history is for <img src=\"https://d301sr5gafysq2.cloudfront.net/1cc0811f4855/emoji/img/smile.svg\" alt=\"smile\" title=\"smile\" class=\"emoji\"></p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19879502"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19879502"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:47669dc82f69..88532ec0be1d?path=yt%2Futilities%2Ftests%2Ftest_amr_kdtree.py"
                }
            },
            "created_on": "2016-06-16T23:27:05.867631+00:00",
            "updated_on": "2016-06-16T23:27:05.869872+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 19,
                "path": "yt/utilities/tests/test_amr_kdtree.py",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19879502
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Okay, just removed it. Thanks.",
                "html": "<p>Okay, just removed it. Thanks.</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19879502"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19879502"
                    }
                },
                "id": 19879502
            },
            "created_on": "2016-06-17T01:11:14.388374+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19881516"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19881516"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Ftests%2Ftest_amr_kdtree.py"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/tests/test_amr_kdtree.py",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 19881516,
            "updated_on": "2016-06-17T01:11:14.440036+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/614/",
                "html": "<p>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/614/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/614/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19883522"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19883522"
                }
            },
            "created_on": "2016-06-17T03:26:09.343341+00:00",
            "updated_on": "2016-06-17T03:26:09.402998+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 19883522
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Seems like a good idea to me. As long as the various tests still pass (which is seems like they do), and there isn't any significant slowdown (which I wouldn't expect much if at all), I'm +1 for these changes. Only other concern might be memory usage associated with adding additional function pointers onto each Node object. Probably not an issue with grid-based simulations where the number of nodes is probably less than a few hundred thousand, but particle datasets might be a different regime. I'll defer to others on whether this might be a concern. ",
                "html": "<p>Seems like a good idea to me. As long as the various tests still pass (which is seems like they do), and there isn't any significant slowdown (which I wouldn't expect much if at all), I'm +1 for these changes. Only other concern might be memory usage associated with adding additional function pointers onto each Node object. Probably not an issue with grid-based simulations where the number of nodes is probably less than a few hundred thousand, but particle datasets might be a different regime. I'll defer to others on whether this might be a concern. </p>"
            },
            "user": {
                "username": "samskillman",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/19935933"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-19935933"
                }
            },
            "created_on": "2016-06-19T05:09:40.256879+00:00",
            "updated_on": "2016-06-19T05:09:40.261068+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 19935933
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Something went wrong, you should checkout https://tests.yt-project.org/job/yt_testsuite/627/",
                "html": "<p>Something went wrong, you should checkout <a href=\"https://tests.yt-project.org/job/yt_testsuite/627/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/627/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20038898"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20038898"
                }
            },
            "created_on": "2016-06-21T16:36:21.086008+00:00",
            "updated_on": "2016-06-21T16:36:21.134015+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20038898
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Hmm, if you *do* want to rename the module, then I think you're going to need to leave an alias to the new module with the same name as the old module, since apparently we're advertising it as part of our public API, at least in this one cookbook recipe.",
                "html": "<p>Hmm, if you <em>do</em> want to rename the module, then I think you're going to need to leave an alias to the new module with the same name as the old module, since apparently we're advertising it as part of our public API, at least in this one cookbook recipe.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20038898"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20038898"
                    }
                },
                "id": 20038898
            },
            "created_on": "2016-06-21T16:37:43.054634+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20038973"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20038973"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20038973,
            "updated_on": "2016-06-21T16:37:43.057662+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Probably also with a deprecation warning printed out when you try to import something from the old module name.",
                "html": "<p>Probably also with a deprecation warning printed out when you try to import something from the old module name.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20038973"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20038973"
                    }
                },
                "id": 20038973
            },
            "created_on": "2016-06-21T16:44:04.305586+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20039309"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20039309"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20039309,
            "updated_on": "2016-06-21T16:44:04.315025+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Once I get on my computer I'll check this out but I'm afraid that the\ncommit that you're referring to was not supposed to update my pull request\nhere. I thought that if I left my old bookmark on an old commit (pointing\nto the commit that passed all of yt-fido's tests) and created a new\nbookmark and kept pushing to that, that it wouldn't update the pull\nrequest. Does this sound like a common problem?\nEl El mar, jun 21, 2016 a las 9:44 AM, Nathan Goldbaum <",
                "html": "<p>Once I get on my computer I'll check this out but I'm afraid that the\ncommit that you're referring to was not supposed to update my pull request\nhere. I thought that if I left my old bookmark on an old commit (pointing\nto the commit that passed all of yt-fido's tests) and created a new\nbookmark and kept pushing to that, that it wouldn't update the pull\nrequest. Does this sound like a common problem?\nEl El mar, jun 21, 2016 a las 9:44 AM, Nathan Goldbaum &lt;</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20039309"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20039309"
                    }
                },
                "id": 20039309
            },
            "created_on": "2016-06-21T17:00:12.487042+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20040111"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20040111"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20040111,
            "updated_on": "2016-06-21T17:00:12.661146+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Ah, I see. Yes, it is a common problem. The issue you're having is that bitbucket pull requests for mercurial are based on topological heads, not bookmarks. You pushed some changesets which are children of the original head of this pull request that you put a bookmark on, so the pull request updated to reflect the new topological head.\n\nTo fix this, you're going to need to strip 8fd56b9 and its descendants. To do that, go to your repository settings on your fork (the gear icon on the left-hand menu), then go to \"strip changesets\", then paste \"8fd56b9\" into the box and click \"strip\". You may need to manually update this pull request after you do that by clicking the \"edit\" button.\n\nThe strip operation will delete 8fd56b9 and its descendants from your bitbucket fork, but not your local clone of yt. If you'd like to be able to push changes to bitbucket that are successors of a pull request you have open without having your pull request update, the easiest way to do that is to make a *second* fork of yt that you push to. Your original fork will then just be for staging pull requests, while your second fork would be for your personal backups and whatever other uses you might have.\n\nSorry for the trouble! When bitbucket added this automatic updating of pull requests feature it caused a lot of confusion among our contributors, and I really wish there was a way to turn it off. Unfortunately there isn't :(\n\nHope that explanation clears up your confusion, feel free to drop in on slack if you have other workflow questions.",
                "html": "<p>Ah, I see. Yes, it is a common problem. The issue you're having is that bitbucket pull requests for mercurial are based on topological heads, not bookmarks. You pushed some changesets which are children of the original head of this pull request that you put a bookmark on, so the pull request updated to reflect the new topological head.</p>\n<p>To fix this, you're going to need to strip <a href=\"/yt_analysis/yt/commits/8fd56b9\" rel=\"nofollow\">8fd56b9</a> and its descendants. To do that, go to your repository settings on your fork (the gear icon on the left-hand menu), then go to \"strip changesets\", then paste \"<a href=\"/yt_analysis/yt/commits/8fd56b9\" rel=\"nofollow\">8fd56b9</a>\" into the box and click \"strip\". You may need to manually update this pull request after you do that by clicking the \"edit\" button.</p>\n<p>The strip operation will delete <a href=\"/yt_analysis/yt/commits/8fd56b9\" rel=\"nofollow\">8fd56b9</a> and its descendants from your bitbucket fork, but not your local clone of yt. If you'd like to be able to push changes to bitbucket that are successors of a pull request you have open without having your pull request update, the easiest way to do that is to make a <em>second</em> fork of yt that you push to. Your original fork will then just be for staging pull requests, while your second fork would be for your personal backups and whatever other uses you might have.</p>\n<p>Sorry for the trouble! When bitbucket added this automatic updating of pull requests feature it caused a lot of confusion among our contributors, and I really wish there was a way to turn it off. Unfortunately there isn't :(</p>\n<p>Hope that explanation clears up your confusion, feel free to drop in on slack if you have other workflow questions.</p>"
            },
            "user": {
                "username": "ngoldbaum",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20040111"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20040111"
                    }
                },
                "id": 20040111
            },
            "created_on": "2016-06-21T17:49:37.356828+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20042442"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20042442"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20042442,
            "updated_on": "2016-06-21T17:49:37.360589+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Okay thanks Nathan, I just used that feature to strip the changesets. Hopefully now I can edit this pull request to update it",
                "html": "<p>Okay thanks Nathan, I just used that feature to strip the changesets. Hopefully now I can edit this pull request to update it</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20042442"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20042442"
                    }
                },
                "id": 20042442
            },
            "created_on": "2016-06-21T21:53:29.758381+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20053414"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20053414"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20053414,
            "updated_on": "2016-06-21T21:53:29.817336+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/630/",
                "html": "<p>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/630/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/630/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20055275"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20055275"
                }
            },
            "created_on": "2016-06-21T22:53:02.474550+00:00",
            "updated_on": "2016-06-21T22:53:02.547786+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20055275
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Hi @charlie_watson, a quick question -- have you checked the performance impact of this change?  The two places to think about are the building of the tree and the traversing of the tree; if you run this on a relatively large (100-200k patch) simulation, does it take about the same amount of time?",
                "html": "<p>Hi <a href=\"/charlie_watson/\" rel=\"nofollow\" title=\"@charlie_watson\" class=\"mention\">Charlie Watson</a>, a quick question -- have you checked the performance impact of this change?  The two places to think about are the building of the tree and the traversing of the tree; if you run this on a relatively large (100-200k patch) simulation, does it take about the same amount of time?</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103198"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103198"
                }
            },
            "created_on": "2016-06-22T17:09:31.283211+00:00",
            "updated_on": "2016-06-22T17:09:31.333160+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20103198
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "It may be possible (not necessary in this PR) to use memoryviews here to simplify access:\n\n```\nreturn np.asarray(<np.float64_t[:3]>self.left_edge)\n```",
                "html": "<p>It may be possible (not necessary in this PR) to use memoryviews here to simplify access:</p>\n<div class=\"codehilite\"><pre><span></span>return np.asarray(&lt;np.float64_t[:3]&gt;self.left_edge)\n</pre></div>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103335"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103335"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:7bf1796eef82..d48c4a143f6e?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "created_on": "2016-06-22T17:12:20.375931+00:00",
            "updated_on": "2016-06-22T17:12:20.378916+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 92,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20103335
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Because this isn't a method, `self` doesn't have a known type.  If you annotate it as `Node self` it will be considerably faster.",
                "html": "<p>Because this isn't a method, <code>self</code> doesn't have a known type.  If you annotate it as <code>Node self</code> it will be considerably faster.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103866"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103866"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:7bf1796eef82..d48c4a143f6e?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "created_on": "2016-06-22T17:22:53.167785+00:00",
            "updated_on": "2016-06-22T17:22:53.169961+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 676,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20103866
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Other than the one comment, LGTM.",
                "html": "<p>Other than the one comment, LGTM.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103198"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103198"
                    }
                },
                "id": 20103198
            },
            "created_on": "2016-06-22T17:25:16.000278+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103984"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103984"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20103984,
            "updated_on": "2016-06-22T17:25:16.007833+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "That's a good point. I should definitely test it on a big dataset in the\nfuture! Up to this point though, I have not done so",
                "html": "<p>That's a good point. I should definitely test it on a big dataset in the\nfuture! Up to this point though, I have not done so</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103335"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103335"
                    }
                },
                "id": 20103335
            },
            "created_on": "2016-06-22T18:15:16.414448+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20106398"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20106398"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/charlie_watson/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20106398,
            "updated_on": "2016-06-22T18:15:16.441117+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Ok, just changed it.",
                "html": "<p>Ok, just changed it.</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103866"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103866"
                    }
                },
                "id": 20103866
            },
            "created_on": "2016-06-27T21:57:09.971609+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20294851"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20294851"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20294851,
            "updated_on": "2016-06-27T21:57:10.017390+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Ok, here are the results. I tested it on one of Cameron's zoom sims named DD1031, which has 4181 grids which you can see below in the call to yt stats.\n\n```\n#!bash\n\nCharlies-MacBook-Pro:yt_prac charliewatson$ yt stats DD1031\nyt : [INFO     ] 2016-06-27 16:32:47,695 Parameters: current_time              = 516.31659\nyt : [INFO     ] 2016-06-27 16:32:47,695 Parameters: domain_dimensions         = [128 128 128]\nyt : [INFO     ] 2016-06-27 16:32:47,696 Parameters: domain_left_edge          = [ 0.  0.  0.]\nyt : [INFO     ] 2016-06-27 16:32:47,696 Parameters: domain_right_edge         = [ 1.  1.  1.]\nyt : [INFO     ] 2016-06-27 16:32:47,697 Parameters: cosmological_simulation   = 1\nyt : [INFO     ] 2016-06-27 16:32:47,697 Parameters: current_redshift          = 0.20002413\nyt : [INFO     ] 2016-06-27 16:32:47,697 Parameters: omega_lambda              = 0.742\nyt : [INFO     ] 2016-06-27 16:32:47,697 Parameters: omega_matter              = 0.258\nyt : [INFO     ] 2016-06-27 16:32:47,697 Parameters: hubble_constant           = 0.719\nParsing Hierarchy : 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4181/4181 [00:00<00:00, 20001.35it/s]\nyt : [INFO     ] 2016-06-27 16:32:48,171 Gathering a field list (this may take a moment.)\nlevel\t# grids\t       # cells\t     # cells^3\n----------------------------------------------\n  0\t   192\t       2097152\t           128\n  1\t    32\t        269360\t            65\n  2\t   763\t       1988272\t           126\n  3\t   702\t       1500488\t           115\n  4\t   851\t        887312\t            97\n  5\t   679\t        641360\t            87\n  6\t   544\t        491312\t            79\n  7\t   303\t        253760\t            64\n  8\t    83\t         84248\t            44\n  9\t    32\t         41768\t            35\n----------------------------------------------\n   \t  4181\t       8255032\n\n\nt = 5.16316590e+02 = 3.56268871e+17 s = 1.12894793e+10 years\n\nSmallest Cell:\n\tWidth: 3.537e-04 Mpc\n\tWidth: 3.537e+02 pc\n\tWidth: 7.296e+07 AU\n\tWidth: 1.091e+21 cm\n```\n\nI tested this on the tip of the dev branch, which doesn't include my PR and ran the following line in cProfile: \n```\n#!python\n\ncProfile.run('kd = AMRKDTree(ds)')\n```\n**The results are averaged over the course of 10 runs:\n**\n\nBefore my PR (on tip): 3.251 sec\n\nAfter my PR: 3.2619 sec\n\nTo me this looks like a negligible amount of time, and demonstrates that my changes don't represent a significant slowdown. What do you think?",
                "html": "<p>Ok, here are the results. I tested it on one of Cameron's zoom sims named DD1031, which has 4181 grids which you can see below in the call to yt stats.</p>\n<div class=\"codehilite language-bash\"><pre><span></span>Charlies-MacBook-Pro:yt_prac charliewatson$ yt stats DD1031\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,695 Parameters: <span class=\"nv\">current_time</span>              <span class=\"o\">=</span> <span class=\"m\">516</span>.31659\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,695 Parameters: <span class=\"nv\">domain_dimensions</span>         <span class=\"o\">=</span> <span class=\"o\">[</span><span class=\"m\">128</span> <span class=\"m\">128</span> <span class=\"m\">128</span><span class=\"o\">]</span>\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,696 Parameters: <span class=\"nv\">domain_left_edge</span>          <span class=\"o\">=</span> <span class=\"o\">[</span> <span class=\"m\">0</span>.  <span class=\"m\">0</span>.  <span class=\"m\">0</span>.<span class=\"o\">]</span>\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,696 Parameters: <span class=\"nv\">domain_right_edge</span>         <span class=\"o\">=</span> <span class=\"o\">[</span> <span class=\"m\">1</span>.  <span class=\"m\">1</span>.  <span class=\"m\">1</span>.<span class=\"o\">]</span>\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,697 Parameters: <span class=\"nv\">cosmological_simulation</span>   <span class=\"o\">=</span> <span class=\"m\">1</span>\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,697 Parameters: <span class=\"nv\">current_redshift</span>          <span class=\"o\">=</span> <span class=\"m\">0</span>.20002413\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,697 Parameters: <span class=\"nv\">omega_lambda</span>              <span class=\"o\">=</span> <span class=\"m\">0</span>.742\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,697 Parameters: <span class=\"nv\">omega_matter</span>              <span class=\"o\">=</span> <span class=\"m\">0</span>.258\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:47,697 Parameters: <span class=\"nv\">hubble_constant</span>           <span class=\"o\">=</span> <span class=\"m\">0</span>.719\nParsing Hierarchy : <span class=\"m\">100</span>%<span class=\"p\">|</span>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588<span class=\"p\">|</span> <span class=\"m\">4181</span>/4181 <span class=\"o\">[</span><span class=\"m\">00</span>:00&lt;<span class=\"m\">00</span>:00, <span class=\"m\">20001</span>.35it/s<span class=\"o\">]</span>\nyt : <span class=\"o\">[</span>INFO     <span class=\"o\">]</span> <span class=\"m\">2016</span>-06-27 <span class=\"m\">16</span>:32:48,171 Gathering a field list <span class=\"o\">(</span>this may take a moment.<span class=\"o\">)</span>\nlevel   <span class=\"c1\"># grids        # cells       # cells^3</span>\n----------------------------------------------\n  <span class=\"m\">0</span>    <span class=\"m\">192</span>         <span class=\"m\">2097152</span>             <span class=\"m\">128</span>\n  <span class=\"m\">1</span>     <span class=\"m\">32</span>          <span class=\"m\">269360</span>              <span class=\"m\">65</span>\n  <span class=\"m\">2</span>    <span class=\"m\">763</span>         <span class=\"m\">1988272</span>             <span class=\"m\">126</span>\n  <span class=\"m\">3</span>    <span class=\"m\">702</span>         <span class=\"m\">1500488</span>             <span class=\"m\">115</span>\n  <span class=\"m\">4</span>    <span class=\"m\">851</span>          <span class=\"m\">887312</span>              <span class=\"m\">97</span>\n  <span class=\"m\">5</span>    <span class=\"m\">679</span>          <span class=\"m\">641360</span>              <span class=\"m\">87</span>\n  <span class=\"m\">6</span>    <span class=\"m\">544</span>          <span class=\"m\">491312</span>              <span class=\"m\">79</span>\n  <span class=\"m\">7</span>    <span class=\"m\">303</span>          <span class=\"m\">253760</span>              <span class=\"m\">64</span>\n  <span class=\"m\">8</span>     <span class=\"m\">83</span>           <span class=\"m\">84248</span>              <span class=\"m\">44</span>\n  <span class=\"m\">9</span>     <span class=\"m\">32</span>           <span class=\"m\">41768</span>              <span class=\"m\">35</span>\n----------------------------------------------\n      <span class=\"m\">4181</span>         <span class=\"m\">8255032</span>\n\n\n<span class=\"nv\">t</span> <span class=\"o\">=</span> <span class=\"m\">5</span>.16316590e+02 <span class=\"o\">=</span> <span class=\"m\">3</span>.56268871e+17 <span class=\"nv\">s</span> <span class=\"o\">=</span> <span class=\"m\">1</span>.12894793e+10 years\n\nSmallest Cell:\n    Width: <span class=\"m\">3</span>.537e-04 Mpc\n    Width: <span class=\"m\">3</span>.537e+02 pc\n    Width: <span class=\"m\">7</span>.296e+07 AU\n    Width: <span class=\"m\">1</span>.091e+21 cm\n</pre></div>\n\n\n<p>I tested this on the tip of the dev branch, which doesn't include my PR and ran the following line in cProfile: </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">cProfile</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">&#39;kd = AMRKDTree(ds)&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p><strong>The results are averaged over the course of 10 runs:\n</strong></p>\n<p>Before my PR (on tip): 3.251 sec</p>\n<p>After my PR: 3.2619 sec</p>\n<p>To me this looks like a negligible amount of time, and demonstrates that my changes don't represent a significant slowdown. What do you think?</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20103198"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20103198"
                    }
                },
                "id": 20103198
            },
            "created_on": "2016-06-27T23:40:21.364184+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20297538"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20297538"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20297538,
            "updated_on": "2016-06-27T23:40:58.485912+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Sounds good enough for me.  If there were any missing optimizations they\nshould show up in this run.",
                "html": "<p>Sounds good enough for me.  If there were any missing optimizations they\nshould show up in this run.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20297538"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20297538"
                    }
                },
                "id": 20297538
            },
            "created_on": "2016-06-28T00:40:14.268890+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20298856"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20298856"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20298856,
            "updated_on": "2016-06-28T00:40:14.287628+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Here's some extra data, i.e. the raw output of cProfile ordered by tottime.\n\nBefore the PR (on tip):\n\n```\n#!bash\n\n         1513726 function calls (1513724 primitive calls) in 3.261 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       10    2.009    0.201    2.009    0.201 {yt.utilities.lib.amr_kdtools.add_grids}\n    45500    0.157    0.000    1.062    0.000 data_containers.py:1083(chunks)\n    43570    0.116    0.000    0.344    0.000 grid_geometry_handler.py:324(_chunk_spatial)\n   131532    0.092    0.000    0.232    0.000 grid_geometry_handler.py:314(<genexpr>)\n    41660    0.089    0.000    1.218    0.000 data_containers.py:1028(blocks)\n    45490    0.085    0.000    0.108    0.000 contextlib.py:21(__exit__)\n   129451    0.079    0.000    0.095    0.000 grid_patch.py:342(_get_selector_mask)\n    45500    0.074    0.000    0.165    0.000 data_containers.py:1117(get_data)\n    87140    0.058    0.000    0.058    0.000 data_containers.py:1256(_chunked_read)\n    43731    0.052    0.000    0.284    0.000 {sum}\n    87801    0.051    0.000    0.117    0.000 grid_patch.py:363(count)\n    43571    0.041    0.000    0.041    0.000 geometry_handler.py:280(__init__)\n    45490    0.040    0.000    0.052    0.000 contextlib.py:82(helper)\n    43731    0.040    0.000    0.324    0.000 grid_geometry_handler.py:310(_count_selection)\n     1930    0.037    0.000    0.179    0.000 grid_geometry_handler.py:348(_chunk_io)\n   129452    0.035    0.000    0.036    0.000 data_containers.py:1067(selector)\n    43570    0.030    0.000    0.058    0.000 data_containers.py:974(_determine_fields)\n    45490    0.028    0.000    0.064    0.000 contextlib.py:15(__enter__)\n    83300    0.025    0.000    0.054    0.000 grid_patch.py:338(select_blocks)\n    43570    0.022    0.000    0.029    0.000 funcs.py:59(ensure_list)\n        1    0.017    0.017    3.258    3.258 amr_kdtree.py:102(build)\n129464/129462    0.016    0.000    0.016    0.000 {hash}\n    45490    0.012    0.000    0.012    0.000 contextlib.py:12(__init__)\n       51    0.012    0.000    0.012    0.000 {numpy.core.multiarray.array}\n    49375    0.008    0.000    0.008    0.000 {len}\n    43671    0.007    0.000    0.007    0.000 {isinstance}\n       11    0.005    0.000    0.007    0.001 {sorted}\n     3840    0.004    0.000    0.004    0.000 grid_geometry_handler.py:380(<genexpr>)\n    41811    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}\n       10    0.003    0.000    2.016    0.202 amr_kdtree.py:94(add_grids)\n     4181    0.002    0.000    0.002    0.000 grid_geometry_handler.py:285(_gsort)\n     1921    0.002    0.000    0.002    0.000 {range}\n     1930    0.002    0.000    0.002    0.000 geometry_handler.py:248(_chunk)\n        1    0.002    0.002    0.025    0.025 grid_geometry_handler.py:283(_identify_base_chunk)\n     3840    0.001    0.000    0.002    0.000 io.py:215(preload)\n     1930    0.001    0.000    0.001    0.000 geometry_handler.py:204(_split_fields)\n     1931    0.001    0.000    0.001    0.000 data_containers.py:158(index)\n     1973    0.001    0.000    0.001    0.000 {getattr}\n       26    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}\n        1    0.000    0.000    0.000    0.000 {method 'select_grids' of 'yt.geometry.selection_routines.SelectorObject' objects}\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:590(get)\n       10    0.000    0.000    0.000    0.000 basic.py:278(__eq__)\n        2    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:570(__getitem__)\n        1    0.000    0.000    0.000    0.000 grid_geometry_handler.py:88(select_grids)\n       26    0.000    0.000    0.001    0.000 re.py:148(sub)\n        3    0.000    0.000    0.000    0.000 yt_array.py:1171(__array_wrap__)\n       10    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.generic' objects}\n       21    0.000    0.000    0.000    0.000 sre_parse.py:822(expand_template)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:355(_get)\n        8    0.000    0.000    0.000    0.000 yt_array.py:372(__new__)\n       10    0.000    0.000    0.000    0.000 basic.py:394(__str__)\n       26    0.000    0.000    0.000    0.000 re.py:230(_compile)\n       10    0.000    0.000    0.000    0.000 printer.py:235(_print)\n        5    0.000    0.000    0.000    0.000 unit_object.py:155(__new__)\n       10    0.000    0.000    0.000    0.000 printer.py:196(__init__)\n        1    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}\n        1    0.000    0.000    3.261    3.261 amr_kdtree.py:157(__init__)\n        1    0.000    0.000    0.000    0.000 data_containers.py:123(__init__)\n       26    0.000    0.000    0.000    0.000 re.py:284(_subx)\n        1    0.000    0.000    0.001    0.001 derived_quantities.py:87(__new__)\n       10    0.000    0.000    0.000    0.000 sympify.py:53(sympify)\n        3    0.000    0.000    0.000    0.000 lru_cache.py:113(wrapper)\n        1    0.000    0.000    0.000    0.000 yt_array.py:971(__div__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:657(_interpolate)\n       13    0.000    0.000    0.001    0.000 funcs.py:787(camelcase_to_underscore)\n        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.zeros}\n        1    0.000    0.000    3.258    3.258 amr_kdtree.py:68(__init__)\n       10    0.000    0.000    0.001    0.000 unit_object.py:304(__str__)\n       13    0.000    0.000    0.000    0.000 derived_quantities.py:94(__getitem__)\n       20    0.000    0.000    0.000    0.000 {hasattr}\n        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}\n       21    0.000    0.000    0.000    0.000 re.py:290(filter)\n       26    0.000    0.000    0.000    0.000 re.py:264(_compile_repl)\n       10    0.000    0.000    0.000    0.000 str.py:732(sstr)\n       13    0.000    0.000    0.000    0.000 yt_array.py:435(__array_finalize__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:358(getint)\n        1    0.000    0.000    0.000    0.000 grid_geometry_handler.py:116(get_smallest_dx)\n        1    0.000    0.000    0.000    0.000 yt_array.py:513(in_units)\n       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}\n        8    0.000    0.000    0.000    0.000 yt_array.py:119(coerce_iterable_units)\n       10    0.000    0.000    0.000    0.000 {max}\n        1    0.000    0.000    0.000    0.000 yt_array.py:903(__add__)\n        3    0.000    0.000    0.000    0.000 threading.py:147(acquire)\n        1    0.000    0.000    0.000    0.000 yt_array.py:459(convert_to_units)\n       10    0.000    0.000    0.000    0.000 printer.py:231(doprint)\n        1    0.000    0.000    0.002    0.002 static_output.py:737(all_data)\n       29    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:373(optionxform)\n        5    0.000    0.000    0.000    0.000 unit_object.py:290(__hash__)\n        1    0.000    0.000    0.000    0.000 yt_array.py:1164(__getitem__)\n        1    0.000    0.000    0.000    0.000 data_containers.py:188(_set_center)\n       13    0.000    0.000    0.000    0.000 {setattr}\n       23    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}\n        1    0.000    0.000    0.000    0.000 yt_array.py:144(sanitize_units_add)\n        3    0.000    0.000    0.000    0.000 yt_array.py:56(iterable)\n        4    0.000    0.000    0.000    0.000 {_codecs.utf_8_decode}\n       42    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}\n        2    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:1093(__init__)\n        7    0.000    0.000    0.000    0.000 numeric.py:414(asarray)\n       12    0.000    0.000    0.000    0.000 numbers.py:1880(__hash__)\n       13    0.000    0.000    0.000    0.000 derived_quantities.py:53(__init__)\n        3    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}\n        1    0.000    0.000    0.001    0.001 data_containers.py:1052(__init__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:567(__init__)\n        4    0.000    0.000    0.000    0.000 {method 'decode' of 'str' objects}\n        3    0.000    0.000    0.000    0.000 threading.py:187(release)\n        5    0.000    0.000    0.000    0.000 basic.py:102(__hash__)\n        1    0.000    0.000    0.000    0.000 data_containers.py:174(_set_default_field_parameters)\n       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 basic.py:77(__new__)\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)\n        1    0.000    0.000    0.000    0.000 yt_array.py:1352(__new__)\n        2    0.000    0.000    0.000    0.000 grid_geometry_handler.py:317(_chunk_all)\n       10    0.000    0.000    0.000    0.000 sympify.py:329(_sympify)\n        1    0.000    0.000    3.261    3.261 <string>:1(<module>)\n        3    0.000    0.000    0.000    0.000 threading.py:215(__exit__)\n       21    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}\n        1    0.000    0.000    0.000    0.000 libmpf.py:291(from_man_exp)\n        1    0.000    0.000    0.001    0.001 selection_data_containers.py:595(__init__)\n        1    0.000    0.000    0.001    0.001 data_containers.py:1473(__init__)\n        2    0.000    0.000    0.000    0.000 unit_object.py:481(get_conversion_factor)\n        4    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n        1    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)\n        2    0.000    0.000    0.000    0.000 numbers.py:1834(__eq__)\n        1    0.000    0.000    0.000    0.000 numbers.py:405(__float__)\n        2    0.000    0.000    0.000    0.000 {issubclass}\n        1    0.000    0.000    0.000    0.000 unit_object.py:517(_get_unit_data_from_expr)\n        2    0.000    0.000    0.000    0.000 yt_array.py:1486(get_binary_op_return_class)\n        2    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)\n        1    0.000    0.000    0.000    0.000 _methods.py:25(_amax)\n        5    0.000    0.000    0.000    0.000 static_output.py:385(index)\n       10    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}\n        3    0.000    0.000    0.000    0.000 unit_object.py:422(is_dimensionless)\n        1    0.000    0.000    0.000    0.000 yt_array.py:133(sanitize_units_mul)\n        6    0.000    0.000    0.000    0.000 {thread.get_ident}\n        1    0.000    0.000    0.000    0.000 unit_object.py:379(__eq__)\n        1    0.000    0.000    0.000    0.000 libmpf.py:429(to_float)\n        2    0.000    0.000    0.000    0.000 __init__.py:1137(debug)\n        2    0.000    0.000    0.000    0.000 yt_array.py:878(ndview)\n        1    0.000    0.000    0.000    0.000 derived_quantities.py:101(keys)\n        1    0.000    0.000    0.000    0.000 unit_object.py:386(__ne__)\n        2    0.000    0.000    0.000    0.000 __init__.py:1352(isEnabledFor)\n        2    0.000    0.000    0.000    0.000 __init__.py:1338(getEffectiveLevel)\n        2    0.000    0.000    0.000    0.000 yt_array.py:642(ndarray_view)\n        2    0.000    0.000    0.000    0.000 unit_object.py:471(get_conversion_factor)\n       10    0.000    0.000    0.000    0.000 str.py:628(_print_Symbol)\n        1    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}\n        3    0.000    0.000    0.000    0.000 {method 'release' of 'thread.lock' objects}\n        1    0.000    0.000    0.000    0.000 {math.ldexp}\n        3    0.000    0.000    0.000    0.000 {function __array_wrap__ at 0x10a9a3320}\n        4    0.000    0.000    0.000    0.000 data_containers.py:223(set_field_parameter)\n        1    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)\n        1    0.000    0.000    0.000    0.000 numbers.py:1711(_as_mpf_val)\n        4    0.000    0.000    0.000    0.000 static_output.py:909(arr)\n        1    0.000    0.000    0.000    0.000 libmpf.py:330(from_int)\n        2    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x100186920}\n        1    0.000    0.000    0.000    0.000 unit_object.py:415(same_dimensions_as)\n        6    0.000    0.000    0.000    0.000 threading.py:64(_note)\n        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:894(rank)\n       12    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:889(size)\n        1    0.000    0.000    0.000    0.000 unit_object.py:293(_hashable_content)\n        1    0.000    0.000    0.000    0.000 {_weakref.proxy}\n        1    0.000    0.000    0.000    0.000 _methods.py:28(_amin)\n        1    0.000    0.000    0.000    0.000 yt_array.py:80(preserve_units)\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n```\n\nAfter the PR:\n\n```\n#!bash\n\n       1513726 function calls (1513724 primitive calls) in 3.328 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       10    2.012    0.201    2.012    0.201 {method 'add_grids' of 'yt.utilities.lib.amr_kdtools.Node' objects}\n    45500    0.163    0.000    1.117    0.000 data_containers.py:1083(chunks)\n    43570    0.127    0.000    0.367    0.000 grid_geometry_handler.py:324(_chunk_spatial)\n   131532    0.097    0.000    0.245    0.000 grid_geometry_handler.py:314(<genexpr>)\n    41660    0.093    0.000    1.280    0.000 data_containers.py:1028(blocks)\n    45490    0.091    0.000    0.114    0.000 contextlib.py:21(__exit__)\n   129451    0.084    0.000    0.103    0.000 grid_patch.py:342(_get_selector_mask)\n    45500    0.075    0.000    0.169    0.000 data_containers.py:1117(get_data)\n    87140    0.060    0.000    0.060    0.000 data_containers.py:1256(_chunked_read)\n    43731    0.056    0.000    0.301    0.000 {sum}\n    87801    0.053    0.000    0.124    0.000 grid_patch.py:363(count)\n    45490    0.042    0.000    0.054    0.000 contextlib.py:82(helper)\n    43731    0.042    0.000    0.343    0.000 grid_geometry_handler.py:310(_count_selection)\n     1930    0.041    0.000    0.189    0.000 grid_geometry_handler.py:348(_chunk_io)\n    43571    0.040    0.000    0.040    0.000 geometry_handler.py:280(__init__)\n   129452    0.037    0.000    0.037    0.000 data_containers.py:1067(selector)\n    43570    0.031    0.000    0.061    0.000 data_containers.py:974(_determine_fields)\n    45490    0.029    0.000    0.067    0.000 contextlib.py:15(__enter__)\n    83300    0.026    0.000    0.057    0.000 grid_patch.py:338(select_blocks)\n    43570    0.022    0.000    0.030    0.000 funcs.py:59(ensure_list)\n129464/129462    0.019    0.000    0.019    0.000 {hash}\n        1    0.018    0.018    3.326    3.326 amr_kdtree.py:90(build)\n       51    0.013    0.000    0.013    0.000 {numpy.core.multiarray.array}\n    45490    0.012    0.000    0.012    0.000 contextlib.py:12(__init__)\n    49375    0.009    0.000    0.009    0.000 {len}\n    43671    0.008    0.000    0.008    0.000 {isinstance}\n     3840    0.004    0.000    0.004    0.000 grid_geometry_handler.py:380(<genexpr>)\n    41811    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}\n       11    0.004    0.000    0.005    0.000 {sorted}\n       10    0.003    0.000    2.021    0.202 amr_kdtree.py:82(add_grids)\n     1921    0.002    0.000    0.002    0.000 {range}\n     1930    0.002    0.000    0.002    0.000 geometry_handler.py:248(_chunk)\n     4181    0.002    0.000    0.002    0.000 grid_geometry_handler.py:285(_gsort)\n     3840    0.001    0.000    0.002    0.000 io.py:215(preload)\n        1    0.001    0.001    0.025    0.025 grid_geometry_handler.py:283(_identify_base_chunk)\n     1930    0.001    0.000    0.001    0.000 geometry_handler.py:204(_split_fields)\n     1931    0.001    0.000    0.001    0.000 data_containers.py:158(index)\n     1973    0.001    0.000    0.001    0.000 {getattr}\n        2    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}\n       26    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}\n        1    0.000    0.000    0.000    0.000 {method 'select_grids' of 'yt.geometry.selection_routines.SelectorObject' objects}\n       10    0.000    0.000    0.000    0.000 basic.py:278(__eq__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:590(get)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:570(__getitem__)\n       10    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.generic' objects}\n        3    0.000    0.000    0.000    0.000 yt_array.py:1171(__array_wrap__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:355(_get)\n       10    0.000    0.000    0.000    0.000 printer.py:235(_print)\n       21    0.000    0.000    0.000    0.000 sre_parse.py:822(expand_template)\n        8    0.000    0.000    0.000    0.000 yt_array.py:372(__new__)\n       10    0.000    0.000    0.000    0.000 basic.py:394(__str__)\n       10    0.000    0.000    0.000    0.000 printer.py:196(__init__)\n        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}\n        1    0.000    0.000    0.000    0.000 grid_geometry_handler.py:88(select_grids)\n       26    0.000    0.000    0.000    0.000 re.py:230(_compile)\n        1    0.000    0.000    0.000    0.000 data_containers.py:123(__init__)\n       10    0.000    0.000    0.001    0.000 unit_object.py:304(__str__)\n        1    0.000    0.000    0.001    0.001 derived_quantities.py:87(__new__)\n       10    0.000    0.000    0.000    0.000 sympify.py:53(sympify)\n        1    0.000    0.000    3.328    3.328 amr_kdtree.py:145(__init__)\n        5    0.000    0.000    0.000    0.000 unit_object.py:155(__new__)\n        1    0.000    0.000    0.000    0.000 yt_array.py:513(in_units)\n       26    0.000    0.000    0.000    0.000 re.py:148(sub)\n        1    0.000    0.000    0.000    0.000 yt_array.py:903(__add__)\n       13    0.000    0.000    0.000    0.000 funcs.py:787(camelcase_to_underscore)\n       13    0.000    0.000    0.000    0.000 yt_array.py:435(__array_finalize__)\n       26    0.000    0.000    0.000    0.000 re.py:264(_compile_repl)\n       20    0.000    0.000    0.000    0.000 {hasattr}\n        1    0.000    0.000    3.326    3.326 amr_kdtree.py:56(__init__)\n       10    0.000    0.000    0.000    0.000 str.py:732(sstr)\n       13    0.000    0.000    0.000    0.000 derived_quantities.py:94(__getitem__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:358(getint)\n        3    0.000    0.000    0.000    0.000 {function __array_wrap__ at 0x10a9da140}\n       26    0.000    0.000    0.000    0.000 re.py:284(_subx)\n        3    0.000    0.000    0.000    0.000 lru_cache.py:113(wrapper)\n       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:657(_interpolate)\n        1    0.000    0.000    0.001    0.001 grid_geometry_handler.py:116(get_smallest_dx)\n       10    0.000    0.000    0.000    0.000 {max}\n       10    0.000    0.000    0.000    0.000 printer.py:231(doprint)\n        1    0.000    0.000    0.000    0.000 yt_array.py:971(__div__)\n       29    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\n       23    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}\n        7    0.000    0.000    0.000    0.000 numeric.py:414(asarray)\n        1    0.000    0.000    0.002    0.002 static_output.py:737(all_data)\n        5    0.000    0.000    0.000    0.000 unit_object.py:290(__hash__)\n        3    0.000    0.000    0.000    0.000 threading.py:147(acquire)\n        1    0.000    0.000    0.000    0.000 yt_array.py:459(convert_to_units)\n        2    0.000    0.000    0.000    0.000 grid_geometry_handler.py:317(_chunk_all)\n       21    0.000    0.000    0.000    0.000 re.py:290(filter)\n        8    0.000    0.000    0.000    0.000 yt_array.py:119(coerce_iterable_units)\n       13    0.000    0.000    0.000    0.000 derived_quantities.py:53(__init__)\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:373(optionxform)\n        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.zeros}\n       12    0.000    0.000    0.000    0.000 numbers.py:1880(__hash__)\n       10    0.000    0.000    0.000    0.000 sympify.py:329(_sympify)\n        3    0.000    0.000    0.000    0.000 yt_array.py:56(iterable)\n        1    0.000    0.000    0.000    0.000 yt_array.py:1164(__getitem__)\n       13    0.000    0.000    0.000    0.000 {setattr}\n        1    0.000    0.000    0.000    0.000 data_containers.py:188(_set_center)\n        4    0.000    0.000    0.000    0.000 {_codecs.utf_8_decode}\n       10    0.000    0.000    0.000    0.000 ConfigParser.py:567(__init__)\n        1    0.000    0.000    0.000    0.000 libmpf.py:291(from_man_exp)\n        5    0.000    0.000    0.000    0.000 basic.py:102(__hash__)\n        1    0.000    0.000    3.328    3.328 <string>:1(<module>)\n       10    0.000    0.000    0.000    0.000 str.py:628(_print_Symbol)\n        3    0.000    0.000    0.000    0.000 threading.py:187(release)\n        1    0.000    0.000    0.001    0.001 data_containers.py:1052(__init__)\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)\n       42    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}\n        4    0.000    0.000    0.000    0.000 {method 'decode' of 'str' objects}\n        2    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:1093(__init__)\n        3    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}\n        2    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)\n        1    0.000    0.000    0.000    0.000 yt_array.py:144(sanitize_units_add)\n        1    0.000    0.000    0.000    0.000 data_containers.py:174(_set_default_field_parameters)\n        1    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 yt_array.py:1352(__new__)\n        1    0.000    0.000    0.000    0.000 basic.py:77(__new__)\n        5    0.000    0.000    0.000    0.000 static_output.py:385(index)\n        1    0.000    0.000    0.000    0.000 unit_object.py:517(_get_unit_data_from_expr)\n        3    0.000    0.000    0.000    0.000 threading.py:215(__exit__)\n        1    0.000    0.000    0.001    0.001 data_containers.py:1473(__init__)\n       21    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}\n       10    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}\n        1    0.000    0.000    0.001    0.001 selection_data_containers.py:595(__init__)\n        2    0.000    0.000    0.000    0.000 yt_array.py:1486(get_binary_op_return_class)\n        4    0.000    0.000    0.000    0.000 static_output.py:909(arr)\n        2    0.000    0.000    0.000    0.000 unit_object.py:471(get_conversion_factor)\n        1    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)\n        2    0.000    0.000    0.000    0.000 numbers.py:1834(__eq__)\n        6    0.000    0.000    0.000    0.000 threading.py:64(_note)\n        2    0.000    0.000    0.000    0.000 __init__.py:1352(isEnabledFor)\n        1    0.000    0.000    0.000    0.000 libmpf.py:429(to_float)\n        4    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n        1    0.000    0.000    0.000    0.000 numbers.py:405(__float__)\n        2    0.000    0.000    0.000    0.000 unit_object.py:481(get_conversion_factor)\n        1    0.000    0.000    0.000    0.000 _methods.py:25(_amax)\n        2    0.000    0.000    0.000    0.000 {issubclass}\n        1    0.000    0.000    0.000    0.000 derived_quantities.py:101(keys)\n        1    0.000    0.000    0.000    0.000 yt_array.py:133(sanitize_units_mul)\n        2    0.000    0.000    0.000    0.000 __init__.py:1338(getEffectiveLevel)\n        1    0.000    0.000    0.000    0.000 unit_object.py:379(__eq__)\n        2    0.000    0.000    0.000    0.000 yt_array.py:642(ndarray_view)\n        1    0.000    0.000    0.000    0.000 libmpf.py:330(from_int)\n        2    0.000    0.000    0.000    0.000 __init__.py:1137(debug)\n        1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)\n        1    0.000    0.000    0.000    0.000 {math.ldexp}\n       10    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 unit_object.py:415(same_dimensions_as)\n        1    0.000    0.000    0.000    0.000 numbers.py:1711(_as_mpf_val)\n        3    0.000    0.000    0.000    0.000 unit_object.py:422(is_dimensionless)\n        6    0.000    0.000    0.000    0.000 {thread.get_ident}\n       12    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}\n        2    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x100186920}\n        1    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}\n        3    0.000    0.000    0.000    0.000 {method 'release' of 'thread.lock' objects}\n        2    0.000    0.000    0.000    0.000 yt_array.py:878(ndview)\n        1    0.000    0.000    0.000    0.000 unit_object.py:386(__ne__)\n        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}\n        1    0.000    0.000    0.000    0.000 unit_object.py:293(_hashable_content)\n        1    0.000    0.000    0.000    0.000 {_weakref.proxy}\n        1    0.000    0.000    0.000    0.000 _methods.py:28(_amin)\n        4    0.000    0.000    0.000    0.000 data_containers.py:223(set_field_parameter)\n        1    0.000    0.000    0.000    0.000 yt_array.py:80(preserve_units)\n        1    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:894(rank)\n        1    0.000    0.000    0.000    0.000 parallel_analysis_interface.py:889(size)\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n```",
                "html": "<p>Here's some extra data, i.e. the raw output of cProfile ordered by tottime.</p>\n<p>Before the PR (on tip):</p>\n<div class=\"codehilite language-bash\"><pre><span></span>         <span class=\"m\">1513726</span> <span class=\"k\">function</span> calls <span class=\"o\">(</span><span class=\"m\">1513724</span> primitive calls<span class=\"o\">)</span> in <span class=\"m\">3</span>.261 seconds\n\n   Ordered by: internal <span class=\"nb\">time</span>\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno<span class=\"o\">(</span><span class=\"k\">function</span><span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">2</span>.009    <span class=\"m\">0</span>.201    <span class=\"m\">2</span>.009    <span class=\"m\">0</span>.201 <span class=\"o\">{</span>yt.utilities.lib.amr_kdtools.add_grids<span class=\"o\">}</span>\n    <span class=\"m\">45500</span>    <span class=\"m\">0</span>.157    <span class=\"m\">0</span>.000    <span class=\"m\">1</span>.062    <span class=\"m\">0</span>.000 data_containers.py:1083<span class=\"o\">(</span>chunks<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.116    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.344    <span class=\"m\">0</span>.000 grid_geometry_handler.py:324<span class=\"o\">(</span>_chunk_spatial<span class=\"o\">)</span>\n   <span class=\"m\">131532</span>    <span class=\"m\">0</span>.092    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.232    <span class=\"m\">0</span>.000 grid_geometry_handler.py:314<span class=\"o\">(</span>&lt;genexpr&gt;<span class=\"o\">)</span>\n    <span class=\"m\">41660</span>    <span class=\"m\">0</span>.089    <span class=\"m\">0</span>.000    <span class=\"m\">1</span>.218    <span class=\"m\">0</span>.000 data_containers.py:1028<span class=\"o\">(</span>blocks<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.085    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.108    <span class=\"m\">0</span>.000 contextlib.py:21<span class=\"o\">(</span>__exit__<span class=\"o\">)</span>\n   <span class=\"m\">129451</span>    <span class=\"m\">0</span>.079    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.095    <span class=\"m\">0</span>.000 grid_patch.py:342<span class=\"o\">(</span>_get_selector_mask<span class=\"o\">)</span>\n    <span class=\"m\">45500</span>    <span class=\"m\">0</span>.074    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.165    <span class=\"m\">0</span>.000 data_containers.py:1117<span class=\"o\">(</span>get_data<span class=\"o\">)</span>\n    <span class=\"m\">87140</span>    <span class=\"m\">0</span>.058    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.058    <span class=\"m\">0</span>.000 data_containers.py:1256<span class=\"o\">(</span>_chunked_read<span class=\"o\">)</span>\n    <span class=\"m\">43731</span>    <span class=\"m\">0</span>.052    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.284    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>sum<span class=\"o\">}</span>\n    <span class=\"m\">87801</span>    <span class=\"m\">0</span>.051    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.117    <span class=\"m\">0</span>.000 grid_patch.py:363<span class=\"o\">(</span>count<span class=\"o\">)</span>\n    <span class=\"m\">43571</span>    <span class=\"m\">0</span>.041    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.041    <span class=\"m\">0</span>.000 geometry_handler.py:280<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.040    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.052    <span class=\"m\">0</span>.000 contextlib.py:82<span class=\"o\">(</span>helper<span class=\"o\">)</span>\n    <span class=\"m\">43731</span>    <span class=\"m\">0</span>.040    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.324    <span class=\"m\">0</span>.000 grid_geometry_handler.py:310<span class=\"o\">(</span>_count_selection<span class=\"o\">)</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.037    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.179    <span class=\"m\">0</span>.000 grid_geometry_handler.py:348<span class=\"o\">(</span>_chunk_io<span class=\"o\">)</span>\n   <span class=\"m\">129452</span>    <span class=\"m\">0</span>.035    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.036    <span class=\"m\">0</span>.000 data_containers.py:1067<span class=\"o\">(</span>selector<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.030    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.058    <span class=\"m\">0</span>.000 data_containers.py:974<span class=\"o\">(</span>_determine_fields<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.028    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.064    <span class=\"m\">0</span>.000 contextlib.py:15<span class=\"o\">(</span>__enter__<span class=\"o\">)</span>\n    <span class=\"m\">83300</span>    <span class=\"m\">0</span>.025    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.054    <span class=\"m\">0</span>.000 grid_patch.py:338<span class=\"o\">(</span>select_blocks<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.022    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.029    <span class=\"m\">0</span>.000 funcs.py:59<span class=\"o\">(</span>ensure_list<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.017    <span class=\"m\">0</span>.017    <span class=\"m\">3</span>.258    <span class=\"m\">3</span>.258 amr_kdtree.py:102<span class=\"o\">(</span>build<span class=\"o\">)</span>\n<span class=\"m\">129464</span>/129462    <span class=\"m\">0</span>.016    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.016    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>hash<span class=\"o\">}</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000 contextlib.py:12<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">51</span>    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.array<span class=\"o\">}</span>\n    <span class=\"m\">49375</span>    <span class=\"m\">0</span>.008    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.008    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>len<span class=\"o\">}</span>\n    <span class=\"m\">43671</span>    <span class=\"m\">0</span>.007    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.007    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>isinstance<span class=\"o\">}</span>\n       <span class=\"m\">11</span>    <span class=\"m\">0</span>.005    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.007    <span class=\"m\">0</span>.001 <span class=\"o\">{</span>sorted<span class=\"o\">}</span>\n     <span class=\"m\">3840</span>    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000 grid_geometry_handler.py:380<span class=\"o\">(</span>&lt;genexpr&gt;<span class=\"o\">)</span>\n    <span class=\"m\">41811</span>    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;append&#39;</span> of <span class=\"s1\">&#39;list&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.003    <span class=\"m\">0</span>.000    <span class=\"m\">2</span>.016    <span class=\"m\">0</span>.202 amr_kdtree.py:94<span class=\"o\">(</span>add_grids<span class=\"o\">)</span>\n     <span class=\"m\">4181</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 grid_geometry_handler.py:285<span class=\"o\">(</span>_gsort<span class=\"o\">)</span>\n     <span class=\"m\">1921</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>range<span class=\"o\">}</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 geometry_handler.py:248<span class=\"o\">(</span>_chunk<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.025    <span class=\"m\">0</span>.025 grid_geometry_handler.py:283<span class=\"o\">(</span>_identify_base_chunk<span class=\"o\">)</span>\n     <span class=\"m\">3840</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 io.py:215<span class=\"o\">(</span>preload<span class=\"o\">)</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 geometry_handler.py:204<span class=\"o\">(</span>_split_fields<span class=\"o\">)</span>\n     <span class=\"m\">1931</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 data_containers.py:158<span class=\"o\">(</span>index<span class=\"o\">)</span>\n     <span class=\"m\">1973</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>getattr<span class=\"o\">}</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;sub&#39;</span> of <span class=\"s1\">&#39;_sre.SRE_Pattern&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;select_grids&#39;</span> of <span class=\"s1\">&#39;yt.geometry.selection_routines.SelectorObject&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:590<span class=\"o\">(</span>get<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:278<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;reduce&#39;</span> of <span class=\"s1\">&#39;numpy.ufunc&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:570<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 grid_geometry_handler.py:88<span class=\"o\">(</span>select_grids<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 re.py:148<span class=\"o\">(</span>sub<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1171<span class=\"o\">(</span>__array_wrap__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;astype&#39;</span> of <span class=\"s1\">&#39;numpy.generic&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sre_parse.py:822<span class=\"o\">(</span>expand_template<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:355<span class=\"o\">(</span>_get<span class=\"o\">)</span>\n        <span class=\"m\">8</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:372<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:394<span class=\"o\">(</span>__str__<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:230<span class=\"o\">(</span>_compile<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:235<span class=\"o\">(</span>_print<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:155<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:196<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;copy&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.261    <span class=\"m\">3</span>.261 amr_kdtree.py:157<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:123<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:284<span class=\"o\">(</span>_subx<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 derived_quantities.py:87<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sympify.py:53<span class=\"o\">(</span>sympify<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 lru_cache.py:113<span class=\"o\">(</span>wrapper<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:971<span class=\"o\">(</span>__div__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:657<span class=\"o\">(</span>_interpolate<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 funcs.py:787<span class=\"o\">(</span>camelcase_to_underscore<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.zeros<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.258    <span class=\"m\">3</span>.258 amr_kdtree.py:68<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 unit_object.py:304<span class=\"o\">(</span>__str__<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:94<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n       <span class=\"m\">20</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>hasattr<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.empty<span class=\"o\">}</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:290<span class=\"o\">(</span>filter<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:264<span class=\"o\">(</span>_compile_repl<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 str.py:732<span class=\"o\">(</span>sstr<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:435<span class=\"o\">(</span>__array_finalize__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:358<span class=\"o\">(</span>getint<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 grid_geometry_handler.py:116<span class=\"o\">(</span>get_smallest_dx<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:513<span class=\"o\">(</span>in_units<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;view&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">8</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:119<span class=\"o\">(</span>coerce_iterable_units<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>max<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:903<span class=\"o\">(</span>__add__<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:147<span class=\"o\">(</span>acquire<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:459<span class=\"o\">(</span>convert_to_units<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:231<span class=\"o\">(</span>doprint<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.002 static_output.py:737<span class=\"o\">(</span>all_data<span class=\"o\">)</span>\n       <span class=\"m\">29</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;get&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:373<span class=\"o\">(</span>optionxform<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:290<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1164<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:188<span class=\"o\">(</span>_set_center<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>setattr<span class=\"o\">}</span>\n       <span class=\"m\">23</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;lower&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:144<span class=\"o\">(</span>sanitize_units_add<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:56<span class=\"o\">(</span>iterable<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>_codecs.utf_8_decode<span class=\"o\">}</span>\n       <span class=\"m\">42</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;group&#39;</span> of <span class=\"s1\">&#39;_sre.SRE_Match&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:1093<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">7</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numeric.py:414<span class=\"o\">(</span>asarray<span class=\"o\">)</span>\n       <span class=\"m\">12</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1880<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:53<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;acquire&#39;</span> of <span class=\"s1\">&#39;thread.lock&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 data_containers.py:1052<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:567<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;decode&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:187<span class=\"o\">(</span>release<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:102<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:174<span class=\"o\">(</span>_set_default_field_parameters<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;update&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:77<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _weakrefset.py:70<span class=\"o\">(</span>__contains__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1352<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 grid_geometry_handler.py:317<span class=\"o\">(</span>_chunk_all<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sympify.py:329<span class=\"o\">(</span>_sympify<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.261    <span class=\"m\">3</span>.261 &lt;string&gt;:1<span class=\"o\">(</span>&lt;module&gt;<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:215<span class=\"o\">(</span>__exit__<span class=\"o\">)</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;join&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:291<span class=\"o\">(</span>from_man_exp<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 selection_data_containers.py:595<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 data_containers.py:1473<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:481<span class=\"o\">(</span>get_conversion_factor<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 utf_8.py:15<span class=\"o\">(</span>decode<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 abc.py:128<span class=\"o\">(</span>__instancecheck__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1834<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:405<span class=\"o\">(</span>__float__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>issubclass<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:517<span class=\"o\">(</span>_get_unit_data_from_expr<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1486<span class=\"o\">(</span>get_binary_op_return_class<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 abc.py:148<span class=\"o\">(</span>__subclasscheck__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _methods.py:25<span class=\"o\">(</span>_amax<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 static_output.py:385<span class=\"o\">(</span>index<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;copy&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:422<span class=\"o\">(</span>is_dimensionless<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:133<span class=\"o\">(</span>sanitize_units_mul<span class=\"o\">)</span>\n        <span class=\"m\">6</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>thread.get_ident<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:379<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:429<span class=\"o\">(</span>to_float<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1137<span class=\"o\">(</span>debug<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:878<span class=\"o\">(</span>ndview<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:101<span class=\"o\">(</span>keys<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:386<span class=\"o\">(</span>__ne__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1352<span class=\"o\">(</span>isEnabledFor<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1338<span class=\"o\">(</span>getEffectiveLevel<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:642<span class=\"o\">(</span>ndarray_view<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:471<span class=\"o\">(</span>get_conversion_factor<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 str.py:628<span class=\"o\">(</span>_print_Symbol<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;min&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;max&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;release&#39;</span> of <span class=\"s1\">&#39;thread.lock&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>math.ldexp<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span><span class=\"k\">function</span> __array_wrap__ at 0x10a9a3320<span class=\"o\">}</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:223<span class=\"o\">(</span>set_field_parameter<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:153<span class=\"o\">(</span>_normalize<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1711<span class=\"o\">(</span>_as_mpf_val<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 static_output.py:909<span class=\"o\">(</span>arr<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:330<span class=\"o\">(</span>from_int<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>built-in method __new__ of <span class=\"nb\">type</span> object at 0x100186920<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:415<span class=\"o\">(</span>same_dimensions_as<span class=\"o\">)</span>\n        <span class=\"m\">6</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:64<span class=\"o\">(</span>_note<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;keys&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:894<span class=\"o\">(</span>rank<span class=\"o\">)</span>\n       <span class=\"m\">12</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;items&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:889<span class=\"o\">(</span>size<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:293<span class=\"o\">(</span>_hashable_content<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>_weakref.proxy<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _methods.py:28<span class=\"o\">(</span>_amin<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:80<span class=\"o\">(</span>preserve_units<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;disable&#39;</span> of <span class=\"s1\">&#39;_lsprof.Profiler&#39;</span> objects<span class=\"o\">}</span>\n</pre></div>\n\n\n<p>After the PR:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>       <span class=\"m\">1513726</span> <span class=\"k\">function</span> calls <span class=\"o\">(</span><span class=\"m\">1513724</span> primitive calls<span class=\"o\">)</span> in <span class=\"m\">3</span>.328 seconds\n\n   Ordered by: internal <span class=\"nb\">time</span>\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno<span class=\"o\">(</span><span class=\"k\">function</span><span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">2</span>.012    <span class=\"m\">0</span>.201    <span class=\"m\">2</span>.012    <span class=\"m\">0</span>.201 <span class=\"o\">{</span>method <span class=\"s1\">&#39;add_grids&#39;</span> of <span class=\"s1\">&#39;yt.utilities.lib.amr_kdtools.Node&#39;</span> objects<span class=\"o\">}</span>\n    <span class=\"m\">45500</span>    <span class=\"m\">0</span>.163    <span class=\"m\">0</span>.000    <span class=\"m\">1</span>.117    <span class=\"m\">0</span>.000 data_containers.py:1083<span class=\"o\">(</span>chunks<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.127    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.367    <span class=\"m\">0</span>.000 grid_geometry_handler.py:324<span class=\"o\">(</span>_chunk_spatial<span class=\"o\">)</span>\n   <span class=\"m\">131532</span>    <span class=\"m\">0</span>.097    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.245    <span class=\"m\">0</span>.000 grid_geometry_handler.py:314<span class=\"o\">(</span>&lt;genexpr&gt;<span class=\"o\">)</span>\n    <span class=\"m\">41660</span>    <span class=\"m\">0</span>.093    <span class=\"m\">0</span>.000    <span class=\"m\">1</span>.280    <span class=\"m\">0</span>.000 data_containers.py:1028<span class=\"o\">(</span>blocks<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.091    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.114    <span class=\"m\">0</span>.000 contextlib.py:21<span class=\"o\">(</span>__exit__<span class=\"o\">)</span>\n   <span class=\"m\">129451</span>    <span class=\"m\">0</span>.084    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.103    <span class=\"m\">0</span>.000 grid_patch.py:342<span class=\"o\">(</span>_get_selector_mask<span class=\"o\">)</span>\n    <span class=\"m\">45500</span>    <span class=\"m\">0</span>.075    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.169    <span class=\"m\">0</span>.000 data_containers.py:1117<span class=\"o\">(</span>get_data<span class=\"o\">)</span>\n    <span class=\"m\">87140</span>    <span class=\"m\">0</span>.060    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.060    <span class=\"m\">0</span>.000 data_containers.py:1256<span class=\"o\">(</span>_chunked_read<span class=\"o\">)</span>\n    <span class=\"m\">43731</span>    <span class=\"m\">0</span>.056    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.301    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>sum<span class=\"o\">}</span>\n    <span class=\"m\">87801</span>    <span class=\"m\">0</span>.053    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.124    <span class=\"m\">0</span>.000 grid_patch.py:363<span class=\"o\">(</span>count<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.042    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.054    <span class=\"m\">0</span>.000 contextlib.py:82<span class=\"o\">(</span>helper<span class=\"o\">)</span>\n    <span class=\"m\">43731</span>    <span class=\"m\">0</span>.042    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.343    <span class=\"m\">0</span>.000 grid_geometry_handler.py:310<span class=\"o\">(</span>_count_selection<span class=\"o\">)</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.041    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.189    <span class=\"m\">0</span>.000 grid_geometry_handler.py:348<span class=\"o\">(</span>_chunk_io<span class=\"o\">)</span>\n    <span class=\"m\">43571</span>    <span class=\"m\">0</span>.040    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.040    <span class=\"m\">0</span>.000 geometry_handler.py:280<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n   <span class=\"m\">129452</span>    <span class=\"m\">0</span>.037    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.037    <span class=\"m\">0</span>.000 data_containers.py:1067<span class=\"o\">(</span>selector<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.031    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.061    <span class=\"m\">0</span>.000 data_containers.py:974<span class=\"o\">(</span>_determine_fields<span class=\"o\">)</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.029    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.067    <span class=\"m\">0</span>.000 contextlib.py:15<span class=\"o\">(</span>__enter__<span class=\"o\">)</span>\n    <span class=\"m\">83300</span>    <span class=\"m\">0</span>.026    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.057    <span class=\"m\">0</span>.000 grid_patch.py:338<span class=\"o\">(</span>select_blocks<span class=\"o\">)</span>\n    <span class=\"m\">43570</span>    <span class=\"m\">0</span>.022    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.030    <span class=\"m\">0</span>.000 funcs.py:59<span class=\"o\">(</span>ensure_list<span class=\"o\">)</span>\n<span class=\"m\">129464</span>/129462    <span class=\"m\">0</span>.019    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.019    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>hash<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.018    <span class=\"m\">0</span>.018    <span class=\"m\">3</span>.326    <span class=\"m\">3</span>.326 amr_kdtree.py:90<span class=\"o\">(</span>build<span class=\"o\">)</span>\n       <span class=\"m\">51</span>    <span class=\"m\">0</span>.013    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.013    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.array<span class=\"o\">}</span>\n    <span class=\"m\">45490</span>    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.012    <span class=\"m\">0</span>.000 contextlib.py:12<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n    <span class=\"m\">49375</span>    <span class=\"m\">0</span>.009    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.009    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>len<span class=\"o\">}</span>\n    <span class=\"m\">43671</span>    <span class=\"m\">0</span>.008    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.008    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>isinstance<span class=\"o\">}</span>\n     <span class=\"m\">3840</span>    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000 grid_geometry_handler.py:380<span class=\"o\">(</span>&lt;genexpr&gt;<span class=\"o\">)</span>\n    <span class=\"m\">41811</span>    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;append&#39;</span> of <span class=\"s1\">&#39;list&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">11</span>    <span class=\"m\">0</span>.004    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.005    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>sorted<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.003    <span class=\"m\">0</span>.000    <span class=\"m\">2</span>.021    <span class=\"m\">0</span>.202 amr_kdtree.py:82<span class=\"o\">(</span>add_grids<span class=\"o\">)</span>\n     <span class=\"m\">1921</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>range<span class=\"o\">}</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 geometry_handler.py:248<span class=\"o\">(</span>_chunk<span class=\"o\">)</span>\n     <span class=\"m\">4181</span>    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 grid_geometry_handler.py:285<span class=\"o\">(</span>_gsort<span class=\"o\">)</span>\n     <span class=\"m\">3840</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.000 io.py:215<span class=\"o\">(</span>preload<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.025    <span class=\"m\">0</span>.025 grid_geometry_handler.py:283<span class=\"o\">(</span>_identify_base_chunk<span class=\"o\">)</span>\n     <span class=\"m\">1930</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 geometry_handler.py:204<span class=\"o\">(</span>_split_fields<span class=\"o\">)</span>\n     <span class=\"m\">1931</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 data_containers.py:158<span class=\"o\">(</span>index<span class=\"o\">)</span>\n     <span class=\"m\">1973</span>    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>getattr<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;reduce&#39;</span> of <span class=\"s1\">&#39;numpy.ufunc&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;sub&#39;</span> of <span class=\"s1\">&#39;_sre.SRE_Pattern&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;select_grids&#39;</span> of <span class=\"s1\">&#39;yt.geometry.selection_routines.SelectorObject&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:278<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:590<span class=\"o\">(</span>get<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:570<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;astype&#39;</span> of <span class=\"s1\">&#39;numpy.generic&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1171<span class=\"o\">(</span>__array_wrap__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:355<span class=\"o\">(</span>_get<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:235<span class=\"o\">(</span>_print<span class=\"o\">)</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sre_parse.py:822<span class=\"o\">(</span>expand_template<span class=\"o\">)</span>\n        <span class=\"m\">8</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:372<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:394<span class=\"o\">(</span>__str__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:196<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.empty<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 grid_geometry_handler.py:88<span class=\"o\">(</span>select_grids<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:230<span class=\"o\">(</span>_compile<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:123<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.000 unit_object.py:304<span class=\"o\">(</span>__str__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 derived_quantities.py:87<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sympify.py:53<span class=\"o\">(</span>sympify<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.328    <span class=\"m\">3</span>.328 amr_kdtree.py:145<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:155<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:513<span class=\"o\">(</span>in_units<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:148<span class=\"o\">(</span>sub<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:903<span class=\"o\">(</span>__add__<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 funcs.py:787<span class=\"o\">(</span>camelcase_to_underscore<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:435<span class=\"o\">(</span>__array_finalize__<span class=\"o\">)</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:264<span class=\"o\">(</span>_compile_repl<span class=\"o\">)</span>\n       <span class=\"m\">20</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>hasattr<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.326    <span class=\"m\">3</span>.326 amr_kdtree.py:56<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 str.py:732<span class=\"o\">(</span>sstr<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:94<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:358<span class=\"o\">(</span>getint<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span><span class=\"k\">function</span> __array_wrap__ at 0x10a9da140<span class=\"o\">}</span>\n       <span class=\"m\">26</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:284<span class=\"o\">(</span>_subx<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 lru_cache.py:113<span class=\"o\">(</span>wrapper<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;view&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:657<span class=\"o\">(</span>_interpolate<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 grid_geometry_handler.py:116<span class=\"o\">(</span>get_smallest_dx<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>max<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 printer.py:231<span class=\"o\">(</span>doprint<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:971<span class=\"o\">(</span>__div__<span class=\"o\">)</span>\n       <span class=\"m\">29</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;get&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">23</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;lower&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">7</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numeric.py:414<span class=\"o\">(</span>asarray<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.002    <span class=\"m\">0</span>.002 static_output.py:737<span class=\"o\">(</span>all_data<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:290<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:147<span class=\"o\">(</span>acquire<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:459<span class=\"o\">(</span>convert_to_units<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 grid_geometry_handler.py:317<span class=\"o\">(</span>_chunk_all<span class=\"o\">)</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 re.py:290<span class=\"o\">(</span>filter<span class=\"o\">)</span>\n        <span class=\"m\">8</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:119<span class=\"o\">(</span>coerce_iterable_units<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:53<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:373<span class=\"o\">(</span>optionxform<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>numpy.core.multiarray.zeros<span class=\"o\">}</span>\n       <span class=\"m\">12</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1880<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 sympify.py:329<span class=\"o\">(</span>_sympify<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:56<span class=\"o\">(</span>iterable<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1164<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n       <span class=\"m\">13</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>setattr<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:188<span class=\"o\">(</span>_set_center<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>_codecs.utf_8_decode<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 ConfigParser.py:567<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:291<span class=\"o\">(</span>from_man_exp<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:102<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">3</span>.328    <span class=\"m\">3</span>.328 &lt;string&gt;:1<span class=\"o\">(</span>&lt;module&gt;<span class=\"o\">)</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 str.py:628<span class=\"o\">(</span>_print_Symbol<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:187<span class=\"o\">(</span>release<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 data_containers.py:1052<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _weakrefset.py:70<span class=\"o\">(</span>__contains__<span class=\"o\">)</span>\n       <span class=\"m\">42</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;group&#39;</span> of <span class=\"s1\">&#39;_sre.SRE_Match&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;decode&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:1093<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;acquire&#39;</span> of <span class=\"s1\">&#39;thread.lock&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 abc.py:148<span class=\"o\">(</span>__subclasscheck__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:144<span class=\"o\">(</span>sanitize_units_add<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:174<span class=\"o\">(</span>_set_default_field_parameters<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;copy&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1352<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 basic.py:77<span class=\"o\">(</span>__new__<span class=\"o\">)</span>\n        <span class=\"m\">5</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 static_output.py:385<span class=\"o\">(</span>index<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:517<span class=\"o\">(</span>_get_unit_data_from_expr<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:215<span class=\"o\">(</span>__exit__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 data_containers.py:1473<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n       <span class=\"m\">21</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;join&#39;</span> of <span class=\"s1\">&#39;str&#39;</span> objects<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;update&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.001    <span class=\"m\">0</span>.001 selection_data_containers.py:595<span class=\"o\">(</span>__init__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:1486<span class=\"o\">(</span>get_binary_op_return_class<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 static_output.py:909<span class=\"o\">(</span>arr<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:471<span class=\"o\">(</span>get_conversion_factor<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 abc.py:128<span class=\"o\">(</span>__instancecheck__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1834<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n        <span class=\"m\">6</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 threading.py:64<span class=\"o\">(</span>_note<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1352<span class=\"o\">(</span>isEnabledFor<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:429<span class=\"o\">(</span>to_float<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 utf_8.py:15<span class=\"o\">(</span>decode<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:405<span class=\"o\">(</span>__float__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:481<span class=\"o\">(</span>get_conversion_factor<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _methods.py:25<span class=\"o\">(</span>_amax<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>issubclass<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 derived_quantities.py:101<span class=\"o\">(</span>keys<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:133<span class=\"o\">(</span>sanitize_units_mul<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1338<span class=\"o\">(</span>getEffectiveLevel<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:379<span class=\"o\">(</span>__eq__<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:642<span class=\"o\">(</span>ndarray_view<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:330<span class=\"o\">(</span>from_int<span class=\"o\">)</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 __init__.py:1137<span class=\"o\">(</span>debug<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;max&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 libmpf.py:153<span class=\"o\">(</span>_normalize<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>math.ldexp<span class=\"o\">}</span>\n       <span class=\"m\">10</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;copy&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:415<span class=\"o\">(</span>same_dimensions_as<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 numbers.py:1711<span class=\"o\">(</span>_as_mpf_val<span class=\"o\">)</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:422<span class=\"o\">(</span>is_dimensionless<span class=\"o\">)</span>\n        <span class=\"m\">6</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>thread.get_ident<span class=\"o\">}</span>\n       <span class=\"m\">12</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;items&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>built-in method __new__ of <span class=\"nb\">type</span> object at 0x100186920<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;min&#39;</span> of <span class=\"s1\">&#39;numpy.ndarray&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">3</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;release&#39;</span> of <span class=\"s1\">&#39;thread.lock&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">2</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:878<span class=\"o\">(</span>ndview<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:386<span class=\"o\">(</span>__ne__<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;keys&#39;</span> of <span class=\"s1\">&#39;dict&#39;</span> objects<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 unit_object.py:293<span class=\"o\">(</span>_hashable_content<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>_weakref.proxy<span class=\"o\">}</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 _methods.py:28<span class=\"o\">(</span>_amin<span class=\"o\">)</span>\n        <span class=\"m\">4</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 data_containers.py:223<span class=\"o\">(</span>set_field_parameter<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 yt_array.py:80<span class=\"o\">(</span>preserve_units<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:894<span class=\"o\">(</span>rank<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 parallel_analysis_interface.py:889<span class=\"o\">(</span>size<span class=\"o\">)</span>\n        <span class=\"m\">1</span>    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000    <span class=\"m\">0</span>.000 <span class=\"o\">{</span>method <span class=\"s1\">&#39;disable&#39;</span> of <span class=\"s1\">&#39;_lsprof.Profiler&#39;</span> objects<span class=\"o\">}</span>\n</pre></div>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20298856"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20298856"
                    }
                },
                "id": 20298856
            },
            "created_on": "2016-06-28T00:42:58.743318+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20298908"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20298908"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20298908,
            "updated_on": "2016-06-28T00:42:59.073264+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Something went wrong, you should checkout https://tests.yt-project.org/job/yt_testsuite/651/",
                "html": "<p>Something went wrong, you should checkout <a href=\"https://tests.yt-project.org/job/yt_testsuite/651/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/651/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299119"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299119"
                }
            },
            "created_on": "2016-06-28T00:54:11.687636+00:00",
            "updated_on": "2016-06-28T00:54:11.754545+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20299119
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "why change this method at all? `self` is usually used in class methods only",
                "html": "<p>why change this method at all? <code>self</code> is usually used in class methods only</p>"
            },
            "user": {
                "username": "xarthisius",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/xarthisius"
                    },
                    "html": {
                        "href": "https://bitbucket.org/xarthisius/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/xarthisius/avatar/32/"
                    }
                },
                "display_name": "Kacper Kowalik",
                "uuid": "{26af8f1d-35b3-46ce-9939-09915b06e31f}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299451"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299451"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:19ea66b61c5f..d48c4a143f6e?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "created_on": "2016-06-28T01:14:16.718185+00:00",
            "updated_on": "2016-06-28T01:14:33.790381+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": 676,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20299451
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Because @MatthewTurk explicitly asked Charlie to change it for speed.",
                "html": "<p>Because <a href=\"/MatthewTurk/\" rel=\"nofollow\" title=\"@MatthewTurk\" class=\"mention\">Matt Turk</a> explicitly asked Charlie to change it for speed.</p>"
            },
            "user": {
                "username": "chummels",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "display_name": "chummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299451"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299451"
                    }
                },
                "id": 20299451
            },
            "created_on": "2016-06-28T01:15:08.804465+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299473"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299473"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20299473,
            "updated_on": "2016-06-28T01:15:08.811236+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Matt asked to define type of the argument, i.e. `cdef int should_i_build(Node self, ...` AFAICT current code will fail. Nevertheless, what  I'm pointing out why rename original `node` to `self`?",
                "html": "<p>Matt asked to define type of the argument, i.e. <code>cdef int should_i_build(Node self, ...</code> AFAICT current code will fail. Nevertheless, what  I'm pointing out why rename original <code>node</code> to <code>self</code>?</p>"
            },
            "user": {
                "username": "xarthisius",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/xarthisius"
                    },
                    "html": {
                        "href": "https://bitbucket.org/xarthisius/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/xarthisius/avatar/32/"
                    }
                },
                "display_name": "Kacper Kowalik",
                "uuid": "{26af8f1d-35b3-46ce-9939-09915b06e31f}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299473"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299473"
                    }
                },
                "id": 20299473
            },
            "created_on": "2016-06-28T01:19:54.970159+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299577"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299577"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20299577,
            "updated_on": "2016-06-28T01:19:54.978387+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "You're right.  @charlie_watson is getting rid of this change.  ",
                "html": "<p>You're right.  <a href=\"/charlie_watson/\" rel=\"nofollow\" title=\"@charlie_watson\" class=\"mention\">Charlie Watson</a> is getting rid of this change.  </p>"
            },
            "user": {
                "username": "chummels",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "display_name": "chummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299577"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299577"
                    }
                },
                "id": 20299577
            },
            "created_on": "2016-06-28T01:27:04.640788+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299719"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299719"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20299719,
            "updated_on": "2016-06-28T01:27:04.715592+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Ok, I changed it back to node. Sorry for the brain fart. In fact, with this change that Matt suggested, we get a very slight speedup to the AMRKDTree initialization call, taking us down from 3.2619 sec to 3.1684 sec (averaged over 10 runs)",
                "html": "<p>Ok, I changed it back to node. Sorry for the brain fart. In fact, with this change that Matt suggested, we get a very slight speedup to the AMRKDTree initialization call, taking us down from 3.2619 sec to 3.1684 sec (averaged over 10 runs)</p>"
            },
            "user": {
                "username": "charlie_watson",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
                    },
                    "html": {
                        "href": "https://bitbucket.org/charlie_watson/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
                    }
                },
                "display_name": "Charlie Watson",
                "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299577"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299577"
                    }
                },
                "id": 20299577
            },
            "created_on": "2016-06-28T01:34:36.067499+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20299868"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20299868"
                },
                "code": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/diff/charlie_watson/yt:None..None?path=yt%2Futilities%2Flib%2Famr_kdtools.pyx"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "inline": {
                "to": null,
                "path": "yt/utilities/lib/amr_kdtools.pyx",
                "from": null
            },
            "type": "pullrequest_comment",
            "id": 20299868,
            "updated_on": "2016-06-28T01:34:36.116647+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/653/",
                "html": "<p>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/653/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/653/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20300997"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20300997"
                }
            },
            "created_on": "2016-06-28T02:29:09.522069+00:00",
            "updated_on": "2016-06-28T02:29:09.593206+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20300997
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/654/",
                "html": "<p>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/654/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/654/</a></p>"
            },
            "user": {
                "username": "yt-fido",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240/comments/20302059"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240/_/diff#comment-20302059"
                }
            },
            "created_on": "2016-06-28T03:30:54.786098+00:00",
            "updated_on": "2016-06-28T03:30:54.849862+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2240"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2240"
                    }
                },
                "title": "Changing amr_kdtree functions to be Node class methods",
                "id": 2240
            },
            "type": "pullrequest_comment",
            "id": 20302059
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "As the title describes, all functions in the **amr_kdtree.pyx** class which take \"Node\" as their first argument have been made into Node class methods with the exception of:\r\n\r\n```\r\n#!python\r\n_lchild_id\r\n_rchild_id\r\n_parent_id\r\nshould_i_build\r\nstep_depth\r\nstep_viewpoint\r\nkdtree_get_choices\r\n```\r\n\r\nLikewise, the .pxd file of the same name has been updated so that the definition of the Node class includes all these new class methods. The rest of the modified files reflect the new way that one must call these class methods: with a Node making the function call instead of each function being called independently and being given a Node as input. Now that all these methods are part of the Node class, it is only necessary to import Node from **amr_kdtools.pyx**.\r\n\r\nThis is a small step in a larger project that I am undertaking this summer: making yt compatible with SPH (smoothed particle hydrodynamics) datasets. So far, the only test that has been run on this changeset is the second function \"test_amr_kdtree_set_fields\" in the **test_amr_kdtree.py** file which is also included in the changeset of this pull request. I'm looking forward to see what the bot has to say about these changes, and hopefully all of its tests pass.\r\n\r\n*Note: Docstrings for the functions in amr_kdtree.pyx were not present when I began to modify this file. They will be added in a later pull request.*",
    "author": {
        "username": "charlie_watson",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/charlie_watson"
            },
            "html": {
                "href": "https://bitbucket.org/charlie_watson/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/charlie_watson/avatar/32/"
            }
        },
        "display_name": "Charlie Watson",
        "uuid": "{97e8faa4-bd02-43d4-8686-1126338098ae}"
    },
    "updated_on": "2016-06-28T15:29:56.716032+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "d48c4a143f6e",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/d48c4a143f6e"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}