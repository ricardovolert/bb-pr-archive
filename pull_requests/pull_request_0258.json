{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "scopatz/yt",
            "uuid": "{d3bfac70-757b-4422-bafd-399bbc417c95}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/scopatz/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/scopatz/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/scopatz/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "376f17175659",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/scopatz/yt/commit/376f17175659"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "na is dead, long live np - 2.x style",
    "id": 258,
    "comment_count": 4,
    "created_on": "2012-08-31T16:11:28.192877+00:00",
    "merge_commit": {
        "hash": "e6986d875c43",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/e6986d875c43"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Anthony -- thanks!  I'm on board with these changes, but let's wait a few days so the developers can speak up if there's an issue.  Additionally, I've identified one change that needs to be made, which I've pushed to my repo.  You can get it by doing:\n\n{{{\nhg pull -r 376f17175659 https://bitbucket.org/MatthewTurk/yt/\n}}}\n\nif you push this to your repo and update the pull request, all the tests pass for me.",
                "html": "<p>Hi Anthony -- thanks!  I'm on board with these changes, but let's wait a few days so the developers can speak up if there's an issue.  Additionally, I've identified one change that needs to be made, which I've pushed to my repo.  You can get it by doing:</p>\n<pre>hg pull -r 376f17175659 https://bitbucket.org/MatthewTurk/yt/\n</pre>\n<p>if you push this to your repo and update the pull request, all the tests pass for me.</p>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/16320"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-16320"
                }
            },
            "created_on": "2012-08-31T18:06:54.052907+00:00",
            "updated_on": "2012-08-31T18:06:54.060682+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258"
                    }
                },
                "title": "na is dead, long live np - 2.x style",
                "id": 258
            },
            "type": "pullrequest_comment",
            "id": 16320
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Whoops, sorry about that!  I have now included your update in the PR.  Additionally, I agree that waiting until next week for further comments seems prudent.",
                "html": "<p>Whoops, sorry about that!  I have now included your update in the PR.  Additionally, I agree that waiting until next week for further comments seems prudent.</p>\n"
            },
            "user": {
                "username": "scopatz",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/scopatz"
                    },
                    "html": {
                        "href": "https://bitbucket.org/scopatz/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/scopatz/avatar/32/"
                    }
                },
                "display_name": "Anthony Scopatz",
                "uuid": "{4a5f5093-32ea-4c47-bb62-819578ca18f5}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/16320"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-16320"
                    }
                },
                "id": 16320
            },
            "created_on": "2012-08-31T18:15:34.802329+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/16322"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-16322"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258"
                    }
                },
                "title": "na is dead, long live np - 2.x style",
                "id": 258
            },
            "type": "pullrequest_comment",
            "id": 16322,
            "updated_on": "2012-08-31T18:15:34.958944+00:00"
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Hi Anthony,\n\nI think it's fine to accept this, but would it be possible to set up a coordinated time?  I think the most effective way to do this would be for me to merge the PR, and then immediate re-apply the same regex before pushing to the main repo to catch any changes that may have happened in between.  Would you be able to send the regex or leave it as a comment here?",
                "html": "<p>Hi Anthony,</p>\n<p>I think it's fine to accept this, but would it be possible to set up a coordinated time?  I think the most effective way to do this would be for me to merge the PR, and then immediate re-apply the same regex before pushing to the main repo to catch any changes that may have happened in between.  Would you be able to send the regex or leave it as a comment here?</p>\n"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/17161"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-17161"
                }
            },
            "created_on": "2012-09-10T15:25:16.063514+00:00",
            "updated_on": "2012-09-10T15:25:16.069515+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258"
                    }
                },
                "title": "na is dead, long live np - 2.x style",
                "id": 258
            },
            "type": "pullrequest_comment",
            "id": 17161
        },
        {
            "content": {
                "markup": "creole",
                "raw": "Sure thing.  I just have a little \"replace_all\" script that I keep around for doing this kind of thing (though you could do this with find.)\n\n{{{\n#!python\n\n#! /usr/bin/env python\nimport subprocess\nimport argparse\n\n\ndef rep_all(s, t):\n    \"\"\"Functional version of replace all.\"\"\"\n    cnt_cmd = \"grep -r {0} * | wc -l\".format(s)\n    rep_cmd = \"find . -type f -exec sed -i 's/{0}/{1}/g' {{}} ';'\".format(s, t)\n\n    rtn = subprocess.check_call(rep_cmd, shell=True)\n    assert rtn == 0\n\n\ndef main():\n    \"\"\"Script version of replace all.\"\"\"\n    # parse out two args\n    parser = argparse.ArgumentParser(description='Replaces all instance of a string with a new string.')\n    parser.add_argument(\"s\", type=str, help=\"Original string to replace.\")\n    parser.add_argument(\"t\", type=str, help=\"New replacement string.\")\n    args = parser.parse_args()\n\n    # run the command\n    rep_all(args.s, args.t)\n\n\nif __name__ == \"__main__\":\n    main()\n\n}}}\n\nThen, in the yt/yt/ directory I run:\n\n{{{\n#!bash\n\n$ replace_all \"na[.]\" \"np.\"\n$ replace_all \"import numpy as na\" \"import numpy as np\"\n}}}",
                "html": "<p>Sure thing.  I just have a little \"replace_all\" script that I keep around for doing this kind of thing (though you could do this with find.)</p>\n<div class=\"codehilite highlight\"><pre><span></span><span class=\"ch\">#! /usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">rep_all</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Functional version of replace all.&quot;&quot;&quot;</span>\n    <span class=\"n\">cnt_cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;grep -r {0} * | wc -l&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"n\">rep_cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;find . -type f -exec sed -i &#39;s/{0}/{1}/g&#39; {{}} &#39;;&#39;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">rtn</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">(</span><span class=\"n\">rep_cmd</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">rtn</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;Script version of replace all.&quot;&quot;&quot;</span>\n    <span class=\"c1\"># parse out two args</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Replaces all instance of a string with a new string.&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;s&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Original string to replace.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;t&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;New replacement string.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># run the command</span>\n    <span class=\"n\">rep_all</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre></div>\n\n<p>Then, in the yt/yt/ directory I run:</p>\n<div class=\"codehilite highlight\"><pre><span></span>$ replace_all <span class=\"s2\">&quot;na[.]&quot;</span> <span class=\"s2\">&quot;np.&quot;</span>\n$ replace_all <span class=\"s2\">&quot;import numpy as na&quot;</span> <span class=\"s2\">&quot;import numpy as np&quot;</span>\n</pre></div>\n\n"
            },
            "user": {
                "username": "scopatz",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/scopatz"
                    },
                    "html": {
                        "href": "https://bitbucket.org/scopatz/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/scopatz/avatar/32/"
                    }
                },
                "display_name": "Anthony Scopatz",
                "uuid": "{4a5f5093-32ea-4c47-bb62-819578ca18f5}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/17161"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-17161"
                    }
                },
                "id": 17161
            },
            "created_on": "2012-09-10T15:38:59.434416+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258/comments/17165"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258/_/diff#comment-17165"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/258"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/258"
                    }
                },
                "title": "na is dead, long live np - 2.x style",
                "id": 258
            },
            "type": "pullrequest_comment",
            "id": 17165,
            "updated_on": "2012-09-10T15:38:59.752298+00:00"
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "As per mailing list request.",
    "author": {
        "username": "scopatz",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/scopatz"
            },
            "html": {
                "href": "https://bitbucket.org/scopatz/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/scopatz/avatar/32/"
            }
        },
        "display_name": "Anthony Scopatz",
        "uuid": "{4a5f5093-32ea-4c47-bb62-819578ca18f5}"
    },
    "updated_on": "2012-09-10T17:56:29.417520+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "b45aa6c3c142",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/b45aa6c3c142"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}