{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/345"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "jzuhone/yt-old",
            "uuid": "{8936e0ba-e21c-47d2-bfc6-728321863245}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/jzuhone/yt-old"
                },
                "html": {
                    "href": "https://bitbucket.org/jzuhone/yt-old"
                },
                "avatar": {
                    "href": "https://bitbucket.org/jzuhone/yt-old/avatar/32/"
                }
            },
            "name": "yt-old"
        },
        "commit": {
            "hash": "05d098ee846f",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/jzuhone/yt-old/commit/05d098ee846f"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "jzuhone",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/jzuhone"
            },
            "html": {
                "href": "https://bitbucket.org/jzuhone/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/jzuhone/avatar/32/"
            }
        },
        "display_name": "John ZuHone",
        "uuid": "{0c51edfa-e317-432f-bbef-7401c6e2aa8a}"
    },
    "title": "Grid Tree for particle deposition",
    "id": 345,
    "comment_count": 1,
    "created_on": "2012-11-20T20:04:54.042930+00:00",
    "merge_commit": {
        "hash": "26e7f66ee689",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/26e7f66ee689"
            }
        }
    },
    "comments": [
        {
            "content": {
                "markup": "markdown",
                "raw": "My original comments got lost in the shuffle, so here they are:\n\nThis implements a Cython tree of the hierarchy's grids, for the primary application of fast searching for the grids to which specific points in the domain belong to. \n\nGiven a list of points x, y, z, to find the grids and grid indices to which these points belong, simply call:\n\npoint_grids, point_grid_inds = pf.h.find_points(x,y,z)\n\nThe tree is searched depth-first. Execution is fairly fast: searching through ~7000 FLASH blocks for ~10^7 particle positions takes less than a second. I've tested it out on FLASH data, Enzo data, and on data created with load_amr_grids and refine_amr. \n\nI'm sure we could extend this to other applications as well. \n\nTwo tests, one for the grid tree itself, and another for the find_points application, are given in yt/utilities/lib/tests.\n\nAlso added an is_in_grid method for grid patches to check if a given set of points is inside this grid; this is only used for checking the answers from pf.h.find_points but it may be useful elsewhere.",
                "html": "<p>My original comments got lost in the shuffle, so here they are:</p>\n<p>This implements a Cython tree of the hierarchy's grids, for the primary application of fast searching for the grids to which specific points in the domain belong to. </p>\n<p>Given a list of points x, y, z, to find the grids and grid indices to which these points belong, simply call:</p>\n<p>point_grids, point_grid_inds = pf.h.find_points(x,y,z)</p>\n<p>The tree is searched depth-first. Execution is fairly fast: searching through ~7000 FLASH blocks for ~10^7 particle positions takes less than a second. I've tested it out on FLASH data, Enzo data, and on data created with load_amr_grids and refine_amr. </p>\n<p>I'm sure we could extend this to other applications as well. </p>\n<p>Two tests, one for the grid tree itself, and another for the find_points application, are given in yt/utilities/lib/tests.</p>\n<p>Also added an is_in_grid method for grid patches to check if a given set of points is inside this grid; this is only used for checking the answers from pf.h.find_points but it may be useful elsewhere.</p>"
            },
            "user": {
                "username": "jzuhone",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/jzuhone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/jzuhone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/jzuhone/avatar/32/"
                    }
                },
                "display_name": "John ZuHone",
                "uuid": "{0c51edfa-e317-432f-bbef-7401c6e2aa8a}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345/comments/46270"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/345/_/diff#comment-46270"
                }
            },
            "created_on": "2012-11-20T20:11:29.560306+00:00",
            "updated_on": "2012-11-20T20:11:29.569146+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/345"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/345"
                    }
                },
                "title": "Grid Tree for particle deposition",
                "id": 345
            },
            "type": "pullrequest_comment",
            "id": 46270
        }
    ],
    "reason": "",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "MERGED",
    "description": "This pull request adds a GridTree which allows fast point location, as well as tests, and particle deposition into grids.",
    "author": {
        "username": "jzuhone",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/jzuhone"
            },
            "html": {
                "href": "https://bitbucket.org/jzuhone/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/jzuhone/avatar/32/"
            }
        },
        "display_name": "John ZuHone",
        "uuid": "{0c51edfa-e317-432f-bbef-7401c6e2aa8a}"
    },
    "updated_on": "2012-11-20T20:56:28.332070+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "b02c04e5b033",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/b02c04e5b033"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}