{
    "links": {
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/decline"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/activity"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/commits"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/merge"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/statuses"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments"
        },
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/diff"
        }
    },
    "task_count": 0,
    "source": {
        "repository": {
            "full_name": "MatthewTurk/yt",
            "uuid": "{b5dfa70b-707c-4330-92a8-e3ea1bee18b3}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/MatthewTurk/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/MatthewTurk/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "e89da84e1ca3",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt/commit/e89da84e1ca3"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    },
    "closed_by": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "title": "This replaces pmods.py with a new, different implementation.",
    "id": 433,
    "comment_count": 8,
    "created_on": "2013-02-16T03:19:23.757762+00:00",
    "merge_commit": null,
    "comments": [
        {
            "content": {
                "markup": "markdown",
                "raw": "I just ran a test of this on Nautilus and I'm not seeing any speedup with pmods.\nI'm comparing this: http://paste.yt-project.org/show/3172/\nwith this: http://paste.yt-project.org/show/3173/\n\nIs that correct?  If so, the times for both scripts increase roughly linearly with the number of procs, with the yt.mods actually a little bit faster.  I tested this up to 128 cores.",
                "html": "<p>I just ran a test of this on Nautilus and I'm not seeing any speedup with pmods.\nI'm comparing this: <a href=\"http://paste.yt-project.org/show/3172/\" rel=\"nofollow\">http://paste.yt-project.org/show/3172/</a>\nwith this: <a href=\"http://paste.yt-project.org/show/3173/\" rel=\"nofollow\">http://paste.yt-project.org/show/3173/</a></p>\n<p>Is that correct?  If so, the times for both scripts increase roughly linearly with the number of procs, with the yt.mods actually a little bit faster.  I tested this up to 128 cores.</p>"
            },
            "user": {
                "username": "brittonsmith",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/120113"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-120113"
                }
            },
            "created_on": "2013-02-16T17:08:56.098269+00:00",
            "updated_on": "2013-02-16T17:08:56.105409+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 120113
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "That's a bummer.  Can you insert some prints into the mpi4py_finder and make sure it's actually doing the right thing, to do all the file-finding on the root proc?  There's a spot where it does a `comm.rank == 0`.  On the mpi4py mailing list he posted that this was an improvement.",
                "html": "<p>That's a bummer.  Can you insert some prints into the mpi4py_finder and make sure it's actually doing the right thing, to do all the file-finding on the root proc?  There's a spot where it does a <code>comm.rank == 0</code>.  On the mpi4py mailing list he posted that this was an improvement.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/120113"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-120113"
                    }
                },
                "id": 120113
            },
            "created_on": "2013-02-16T18:01:46.644871+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/120129"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-120129"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 120129,
            "updated_on": "2013-02-16T18:01:46.654944+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I just tried this on Kraken, and the new pmods is a mixed bag. On a few cores O(10) pmods is actually a bit slower, but at O(100) it looks like pmods is still faster by perhaps 20% than mods. I put some prints in, like asked of Britton, and it looks like the right things are called by the right ranks.",
                "html": "<p>I just tried this on Kraken, and the new pmods is a mixed bag. On a few cores O(10) pmods is actually a bit slower, but at O(100) it looks like pmods is still faster by perhaps 20% than mods. I put some prints in, like asked of Britton, and it looks like the right things are called by the right ranks.</p>"
            },
            "user": {
                "username": "sskory",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/sskory"
                    },
                    "html": {
                        "href": "https://bitbucket.org/sskory/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/sskory/avatar/32/"
                    }
                },
                "display_name": "Stephen Skory",
                "uuid": "{11787434-dea2-42d8-b94d-88d347eb151a}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/120278"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-120278"
                }
            },
            "created_on": "2013-02-16T20:59:44.496387+00:00",
            "updated_on": "2013-02-16T20:59:44.503236+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 120278
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Hi @sskory and @brittonsmith -- this is definitely not what I was hoping for.  I think that we should perhaps write to mpi4py's mailing list about this to ask for suggestions.  I would like to do this, but would it be possible for you to send me the exact timing figures you have?  No need to run new calculations, but just the results you have would be sufficient.",
                "html": "<p>Hi <a href=\"/sskory/\" rel=\"nofollow\" title=\"@sskory\" class=\"mention\">Stephen Skory</a> and <a href=\"/brittonsmith/\" rel=\"nofollow\" title=\"@brittonsmith\" class=\"mention\">Britton Smith</a> -- this is definitely not what I was hoping for.  I think that we should perhaps write to mpi4py's mailing list about this to ask for suggestions.  I would like to do this, but would it be possible for you to send me the exact timing figures you have?  No need to run new calculations, but just the results you have would be sufficient.</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/120600"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-120600"
                }
            },
            "created_on": "2013-02-17T18:08:46.349079+00:00",
            "updated_on": "2013-02-17T18:08:46.362828+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 120600
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Matt,\n\nsince I didn't keep good records for the first time I did this I ran the tests again. I did three tests for each core count using mods and pmods on Kraken. Below are the maximum time in seconds reported by the tasks.\n\n12 cores\nmods: (39, 62, 54)\npmods: (64, 91, 89)\n\n132 cores\nmods: (122, 122, 121)\npmods: (69, 74, 84)\n\nThere is quite a bit of scatter, which is kind of inconvenient. These results do look slightly better for pmods at higher core counts than I reported earlier, but I'm not sure it's as good as the old pmods was. Let me know if there's anything else I can do!",
                "html": "<p>Matt,</p>\n<p>since I didn't keep good records for the first time I did this I ran the tests again. I did three tests for each core count using mods and pmods on Kraken. Below are the maximum time in seconds reported by the tasks.</p>\n<p>12 cores\nmods: (39, 62, 54)\npmods: (64, 91, 89)</p>\n<p>132 cores\nmods: (122, 122, 121)\npmods: (69, 74, 84)</p>\n<p>There is quite a bit of scatter, which is kind of inconvenient. These results do look slightly better for pmods at higher core counts than I reported earlier, but I'm not sure it's as good as the old pmods was. Let me know if there's anything else I can do!</p>"
            },
            "user": {
                "username": "sskory",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/sskory"
                    },
                    "html": {
                        "href": "https://bitbucket.org/sskory/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/sskory/avatar/32/"
                    }
                },
                "display_name": "Stephen Skory",
                "uuid": "{11787434-dea2-42d8-b94d-88d347eb151a}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/121966"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-121966"
                }
            },
            "created_on": "2013-02-18T16:26:54.138032+00:00",
            "updated_on": "2013-02-18T16:26:54.148330+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 121966
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Okay, this is not too heartening.  What is your thought, Stephen?  Is this better than a broken pmods?  Or should we lobby h5py to avoid the double-relative imports?",
                "html": "<p>Okay, this is not too heartening.  What is your thought, Stephen?  Is this better than a broken pmods?  Or should we lobby h5py to avoid the double-relative imports?</p>"
            },
            "user": {
                "username": "MatthewTurk",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "display_name": "Matt Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
            },
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/122858"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-122858"
                }
            },
            "created_on": "2013-02-19T12:42:41.797858+00:00",
            "updated_on": "2013-02-19T12:42:41.807980+00:00",
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 122858
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "Stephen's results are similar, if perhaps even a little better, than what I was seeing on Nautilus.  Up to 128 cores, I was seeing a continued increase in import time with pmods.  The old solution was considerably faster.  Since it's only one module that's problematic, I think it may be worth it to see what can be done to fix it.",
                "html": "<p>Stephen's results are similar, if perhaps even a little better, than what I was seeing on Nautilus.  Up to 128 cores, I was seeing a continued increase in import time with pmods.  The old solution was considerably faster.  Since it's only one module that's problematic, I think it may be worth it to see what can be done to fix it.</p>"
            },
            "user": {
                "username": "brittonsmith",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/122858"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-122858"
                    }
                },
                "id": 122858
            },
            "created_on": "2013-02-19T14:56:09.958127+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/123013"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-123013"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 123013,
            "updated_on": "2013-02-19T14:56:09.966522+00:00"
        },
        {
            "content": {
                "markup": "markdown",
                "raw": "I agree we should appeal to h5py's interests in performance and ask them to change. I hope that double-relative imports are rare enough that we don't end up playing \"whack a mole\" with this, tho...",
                "html": "<p>I agree we should appeal to h5py's interests in performance and ask them to change. I hope that double-relative imports are rare enough that we don't end up playing \"whack a mole\" with this, tho...</p>"
            },
            "user": {
                "username": "sskory",
                "type": "user",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/sskory"
                    },
                    "html": {
                        "href": "https://bitbucket.org/sskory/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/sskory/avatar/32/"
                    }
                },
                "display_name": "Stephen Skory",
                "uuid": "{11787434-dea2-42d8-b94d-88d347eb151a}"
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/122858"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-122858"
                    }
                },
                "id": 122858
            },
            "created_on": "2013-02-19T16:14:53.463808+00:00",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433/comments/123135"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433/_/diff#comment-123135"
                }
            },
            "pullrequest": {
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/433"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/433"
                    }
                },
                "title": "This replaces pmods.py with a new, different implementation.",
                "id": 433
            },
            "type": "pullrequest_comment",
            "id": 123135,
            "updated_on": "2013-02-19T16:14:53.471207+00:00"
        }
    ],
    "reason": "Stephen's PR supersedes this.",
    "type": "pullrequest",
    "close_source_branch": false,
    "state": "DECLINED",
    "description": "This replaces pmods.py with a new, different implementation.\r\n\r\nThe old implementation of pmods.py was based on MPI_Import by Asher Langton.  This is now based on his new implementation, simpler_finder. The old implementation broke with the relative imports now used in h5py. The new version does not.\r\n\r\nThere may be a performance regression associated with this. Additionally, I do not have the ability to test it on Kraken. However, it works for me.\r\n\r\nThis needs testing and signoff from:\r\n\r\n * @chummels \r\n * @sskory \r\n * @brittonsmith \r\n * @samskillman ",
    "author": {
        "username": "MatthewTurk",
        "type": "user",
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}"
    },
    "updated_on": "2013-02-23T11:14:35.506423+00:00",
    "destination": {
        "repository": {
            "full_name": "yt_analysis/yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt"
        },
        "commit": {
            "hash": "9b309d23df19",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/9b309d23df19"
                }
            }
        },
        "branch": {
            "name": "yt"
        }
    }
}