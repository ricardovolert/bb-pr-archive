{
    "reason": "I am pushing a second yt-3.0 head, bookmark experimental, at revision 3ec7ae320899 .  We will eventually merge into yt-3.0 mainline from this bookmark.",
    "state": "DECLINED",
    "updated_on": "2014-03-13T13:48:55.347921+00:00",
    "comment_count": 32,
    "description": "This is the big PR for the unit refactor.\r\n\r\n * YTArray is used nearly everywhere.\r\n * Units are checked and passed around.\r\n * Arrays and plots (image plots) can be switched between units\r\n * Fields are now added via explicit plugins, rather than a large set of universal fields.\r\n * Field detection has been vastly simplified.\r\n * Index-related fields (x, dx, ones, volume) are now of field type \"index\"\r\n * Frontend fields are defaulted to code units, but *gas* fields are defaulted to CGS\r\n * Other things I can't quite remember.\r\n\r\nNot ready for acceptance.\r\n\r\nUPDATE 1: Fixed the projection issues @brittonsmith reported.\r\n\r\nUPDATE 2: Some derived quantities fixes\r\n\r\nUPDATE 3: Sam has provided some fixes for various things, including VR.\r\n\r\nUPDATE 4: More fixes from Sam and Nathan.  Positioning issues for projections (#742) are up next.\r\n\r\nUPDATE 4: Fixes for projections, and attempting to ensure consistent unit creation everywhere by removing `code_*` units from the default lookup table.\r\n\r\nUPDATE 5: Fix up the unit registry for `cell_mass`\r\n\r\nUPDATE 6: Adding the Rockstar frontend, which was accidentally pushed into my repo.  Whoops!\r\n\r\nSo, the remaining things, a non-comprehensive subset:\r\n\r\n * Porting frontends, which I am becoming somewhat adept at at this point.\r\n * Adding documentation, which is going to be a considerable hurdle, and which I'm going to start on once the rest has settled down slightly.\r\n * Running lots of on-the-ground tests.\r\n * Merging in the profiles work and making profiles work with units.\r\n\r\nUPDATE 7:\r\n\r\nMany new fixes and changes from @ngoldbaum , @brittonsmith , @jzuhone and others.  Athena frontend is now ported.\r\n\r\nUPDATE 8:\r\n\r\nUpdating from latest bookmark.  More fixes.\r\n\r\nUPDATE 9:\r\n\r\nMany more fixes -- the only remaining tests to address are the frontend tests, which we have a few of still to go.",
    "created_on": "2013-12-03T13:14:11.039654+00:00",
    "task_count": 0,
    "merge_commit": null,
    "title": "Unit refactor",
    "links": {
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/diff"
        },
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/decline"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/activity"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/merge"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/commits"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/statuses"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments"
        }
    },
    "closed_by": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
        "username": "MatthewTurk"
    },
    "id": 662,
    "type": "pullrequest",
    "author": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
        "username": "MatthewTurk"
    },
    "source": {
        "branch": {
            "name": "yt-3.0"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt/commit/939e2b769afd"
                }
            },
            "hash": "939e2b769afd"
        },
        "repository": {
            "full_name": "MatthewTurk/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/MatthewTurk/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/MatthewTurk/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b5dfa70b-707c-4330-92a8-e3ea1bee18b3}"
        }
    },
    "close_source_branch": false,
    "destination": {
        "branch": {
            "name": "yt-3.0"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/f327552a6ede"
                }
            },
            "hash": "f327552a6ede"
        },
        "repository": {
            "full_name": "yt_analysis/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}"
        }
    },
    "comments": [
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}",
                "username": "brittonsmith"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896159"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896159"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Can you add a list of unit changing commands that people can try out?\n\nAdditionally, I'm seeing issues with plots.  A projection of the whole box is giving me the following:\n\nhttp://i.imgur.com/Xs4zdK9.png",
                "html": "<p>Can you add a list of unit changing commands that people can try out?</p>\n<p>Additionally, I'm seeing issues with plots.  A projection of the whole box is giving me the following:</p>\n<p><a href=\"http://i.imgur.com/Xs4zdK9.png\" rel=\"nofollow\">http://i.imgur.com/Xs4zdK9.png</a></p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:01:17.774602+00:00",
            "updated_on": "2013-12-03T14:01:17.783473+00:00",
            "id": 896159
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}",
                "username": "brittonsmith"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896189"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896189"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896159"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896159"
                    }
                },
                "id": 896159
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Also, it seems now that the default weight_field is now \"density\".  I am actually unable to make an unweighted projection.\n\nTo be clear what I mean:\n\nProjectionPlot(pf, 'x', 'density')\n\nProjectionPlot(pf, 'x', 'density', weight_field='density')\n\nProjectionPlot(pf, 'x', 'density', weight_field=None)\n\nall give the same thing.",
                "html": "<p>Also, it seems now that the default weight_field is now \"density\".  I am actually unable to make an unweighted projection.</p>\n<p>To be clear what I mean:</p>\n<p>ProjectionPlot(pf, 'x', 'density')</p>\n<p>ProjectionPlot(pf, 'x', 'density', weight_field='density')</p>\n<p>ProjectionPlot(pf, 'x', 'density', weight_field=None)</p>\n<p>all give the same thing.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:06:48.243495+00:00",
            "updated_on": "2013-12-03T14:08:15.237055+00:00",
            "id": 896189
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896208"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896208"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896189"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896189"
                    }
                },
                "id": 896189
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "So, I'm taking a look -- I didn't see these two issues last night before I finished running the tests.  I will try now.  Weighting seems like a bug, and the other seems to me like a problem with centering.  Likely it's because of how coordinates are now in \"code length\" which I'm not 100% certain I am in favor of.  So let me take a few shots at this, but THANK YOU for finding things like this.",
                "html": "<p>So, I'm taking a look -- I didn't see these two issues last night before I finished running the tests.  I will try now.  Weighting seems like a bug, and the other seems to me like a problem with centering.  Likely it's because of how coordinates are now in \"code length\" which I'm not 100% certain I am in favor of.  So let me take a few shots at this, but THANK YOU for finding things like this.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:08:57.604590+00:00",
            "updated_on": "2013-12-03T14:08:57.612688+00:00",
            "id": 896208
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}",
                "username": "brittonsmith"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896215"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896215"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896208"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896208"
                    }
                },
                "id": 896208
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Not a problem!  That's what PRs are for!",
                "html": "<p>Not a problem!  That's what PRs are for!</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:11:10.809584+00:00",
            "updated_on": "2013-12-03T14:11:10.817223+00:00",
            "id": 896215
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896243"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896243"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896215"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896215"
                    }
                },
                "id": 896215
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "So, I took a closer look.  What is going on is not that it's not weighting the projections -- it is -- but that it's not carrying through the multiplication by the full path length in cm.  I'm getting different bounds and images.  I'll be fixing this in a subsequent PR update.",
                "html": "<p>So, I took a closer look.  What is going on is not that it's not weighting the projections -- it is -- but that it's not carrying through the multiplication by the full path length in cm.  I'm getting different bounds and images.  I'll be fixing this in a subsequent PR update.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:16:24.941739+00:00",
            "updated_on": "2013-12-03T14:16:24.952903+00:00",
            "id": 896243
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896436"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896436"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896159"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896159"
                    }
                },
                "id": 896159
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Most user-facing functionality should now return a `YTArray` rather than a numpy array.  YTArray is a subclass of ndarray that has some additional unit manipulating member functions.  I've copy/pasted some of the relevant function signatures and docstrings below:\n\n\n```\n#!python\n    def convert_to_units(self, units):\n        \"\"\"\n        Convert the array and units to the given units.\n\n        Parameters\n        ----------\n        units : Unit object or str\n            The units you want to convert to.\n\n        \"\"\"\n\n    def convert_to_cgs(self):\n        \"\"\"\n        Convert the array and units to the equivalent cgs units.\n\n        \"\"\"\n\n    def in_units(self, units):\n        \"\"\"\n        Creates a copy of this array with the data in the supplied units, and\n        returns it.\n\n        Parameters\n        ----------\n        units : Unit object or string\n            The units you want to get a new quantity in.\n\n        Returns\n        -------\n        YTArray\n\n        \"\"\"\n\n    def in_cgs(self):\n        \"\"\"\n        Creates a copy of this array with the data in the equivalent cgs units,\n        and returns it.\n\n        Returns\n        -------\n        Quantity object with data converted to cgs and cgs units.\n\n        \"\"\"\n\n    def ndarray_view(self):\n        \"\"\"\n        Returns a view into the array, but as an ndarray rather than ytarray.\n\n        Returns\n        -------\n        View of this array's data.\n        \"\"\"\n\n    def to_ndarray(self):\n        \"\"\"\n        Creates a copy of this array with the unit information stripped\n\n        \"\"\"\n```\n\nThe `in_*` methods return a *copy* of the original array in the new unit system.  The `convert_to_*` methods convert the original array into the new units.\n\nAdditionally there are some hooks in the plotting code now.  For example, there is a new `set_units`  member function for `PlotWindow`.  The following example script and resulting image illustrates this:\n\n\n```\n#!python\n\nfrom yt.mods import *\npf = load(\"IsolatedGalaxy/galaxy0030/galaxy0030\")\nslc = SlicePlot(pf, \"z\", [\"density\"])\nslc.set_unit('density','kg/m**3')\nslc.save()\n```\n\nhttp://i.imgur.com/DvsFPqK.png\n\nThere aren't too many other examples - the new `ProfilePlot` and `PhasePlot` interface still need to be converted, for example.  This PR provides the base functionality and integrates yt to know about units internally - there is still a lot of room to expose unit manipulation functionality in the user interface that would have been difficult to integrate before the unit system.",
                "html": "<p>Most user-facing functionality should now return a <code>YTArray</code> rather than a numpy array.  YTArray is a subclass of ndarray that has some additional unit manipulating member functions.  I've copy/pasted some of the relevant function signatures and docstrings below:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">convert_to_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Convert the array and units to the given units.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        units : Unit object or str</span>\n<span class=\"sd\">            The units you want to convert to.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">convert_to_cgs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Convert the array and units to the equivalent cgs units.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">in_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Creates a copy of this array with the data in the supplied units, and</span>\n<span class=\"sd\">        returns it.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        units : Unit object or string</span>\n<span class=\"sd\">            The units you want to get a new quantity in.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        YTArray</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">in_cgs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Creates a copy of this array with the data in the equivalent cgs units,</span>\n<span class=\"sd\">        and returns it.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        Quantity object with data converted to cgs and cgs units.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">ndarray_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Returns a view into the array, but as an ndarray rather than ytarray.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        View of this array&#39;s data.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">to_ndarray</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Creates a copy of this array with the unit information stripped</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n</pre></div>\n\n\n<p>The <code>in_*</code> methods return a <em>copy</em> of the original array in the new unit system.  The <code>convert_to_*</code> methods convert the original array into the new units.</p>\n<p>Additionally there are some hooks in the plotting code now.  For example, there is a new <code>set_units</code>  member function for <code>PlotWindow</code>.  The following example script and resulting image illustrates this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">yt.mods</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">pf</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;IsolatedGalaxy/galaxy0030/galaxy0030&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">slc</span> <span class=\"o\">=</span> <span class=\"n\">SlicePlot</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;density&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">slc</span><span class=\"o\">.</span><span class=\"n\">set_unit</span><span class=\"p\">(</span><span class=\"s1\">&#39;density&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;kg/m**3&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">slc</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p><a href=\"http://i.imgur.com/DvsFPqK.png\" rel=\"nofollow\">http://i.imgur.com/DvsFPqK.png</a></p>\n<p>There aren't too many other examples - the new <code>ProfilePlot</code> and <code>PhasePlot</code> interface still need to be converted, for example.  This PR provides the base functionality and integrates yt to know about units internally - there is still a lot of room to expose unit manipulation functionality in the user interface that would have been difficult to integrate before the unit system.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T14:48:15.951958+00:00",
            "updated_on": "2013-12-03T15:00:31.481932+00:00",
            "id": 896436
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896930"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896930"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "So I just tried this out and expected pf.h.find_max('density') to have units attached. That said, pf.h.find_max('Density') gave a value that looks like code units, so that's cool.  Anyways, can someone comment on how scalar values are treated in this approach?",
                "html": "<p>So I just tried this out and expected pf.h.find_max('density') to have units attached. That said, pf.h.find_max('Density') gave a value that looks like code units, so that's cool.  Anyways, can someone comment on how scalar values are treated in this approach?</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T15:59:49.203574+00:00",
            "updated_on": "2013-12-03T15:59:49.214854+00:00",
            "id": 896930
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896947"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896947"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896930"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896930"
                    }
                },
                "id": 896930
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "I don't think the derived quantities have been updated.  I'll look at this right now.\n\nScalars are treated using the `YTQuantity`, which is a subclass of `YTArray` that can have only one element.  It's defined at the bottom of `yt/data_objects/yt_array.py`.",
                "html": "<p>I don't think the derived quantities have been updated.  I'll look at this right now.</p>\n<p>Scalars are treated using the <code>YTQuantity</code>, which is a subclass of <code>YTArray</code> that can have only one element.  It's defined at the bottom of <code>yt/data_objects/yt_array.py</code>.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:01:51.725802+00:00",
            "updated_on": "2013-12-03T16:01:51.736502+00:00",
            "id": 896947
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896959"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896959"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896947"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896947"
                    }
                },
                "id": 896947
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Ok, awesome!",
                "html": "<p>Ok, awesome!</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:03:24.442862+00:00",
            "updated_on": "2013-12-03T16:03:24.731698+00:00",
            "id": 896959
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896992"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896992"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896959"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896959"
                    }
                },
                "id": 896959
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Yes, check out `physical_constants.py` as well :)",
                "html": "<p>Yes, check out <code>physical_constants.py</code> as well :)</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:07:43.722982+00:00",
            "updated_on": "2013-12-03T16:07:43.735803+00:00",
            "id": 896992
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896995"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896995"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Another comment -- we should make sure the docstrings for YTArray and YTQuantity are properly filled out so that YTArray? in ipython works.  Currently they are fairly minimal.  Also, quantities.py (because i was taking a look) and possibly others have gpl headers.",
                "html": "<p>Another comment -- we should make sure the docstrings for YTArray and YTQuantity are properly filled out so that YTArray? in ipython works.  Currently they are fairly minimal.  Also, quantities.py (because i was taking a look) and possibly others have gpl headers.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:08:10.624944+00:00",
            "updated_on": "2013-12-03T16:08:10.631926+00:00",
            "id": 896995
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897008"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897008"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/896995"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-896995"
                    }
                },
                "id": 896995
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Oh, hmm, I think I'm a bit confused now. There is a yt.utilities.quantities Quantity class as well. Maybe it is just a duplicate?",
                "html": "<p>Oh, hmm, I think I'm a bit confused now. There is a yt.utilities.quantities Quantity class as well. Maybe it is just a duplicate?</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:10:20.531263+00:00",
            "updated_on": "2013-12-03T16:10:20.543849+00:00",
            "id": 897008
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897036"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897036"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897008"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897008"
                    }
                },
                "id": 897008
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "quantities.py is a stub that should probably be removed.",
                "html": "<p>quantities.py is a stub that should probably be removed.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:15:15.000248+00:00",
            "updated_on": "2013-12-03T16:15:15.009591+00:00",
            "id": 897036
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Cameron Hummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}",
                "username": "chummels"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897114"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897114"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "I'd like to make my standard request that this infrastructure be documented (in the formal docs) as part of this PR.  I realize this is currently difficult because we have not enabled a yt-3.0 branch in the yt-docs repo, but I'd request that be done ASAP.  I'd really like to avoid the need for massive documentation sprints to get the docs up to par with the current state of the codebase.  Not only does it leave the docs out of step with the code for some period of time making it difficult for non-authors to use a particular piece of functionality, but it requires a potentially larger effort down the road to remember the details of the undocumented functionality.\n\nWhat do you guys think?  @MatthewTurk : could you create the yt-3.0 branch in yt-docs to enable documentation to be done on this?",
                "html": "<p>I'd like to make my standard request that this infrastructure be documented (in the formal docs) as part of this PR.  I realize this is currently difficult because we have not enabled a yt-3.0 branch in the yt-docs repo, but I'd request that be done ASAP.  I'd really like to avoid the need for massive documentation sprints to get the docs up to par with the current state of the codebase.  Not only does it leave the docs out of step with the code for some period of time making it difficult for non-authors to use a particular piece of functionality, but it requires a potentially larger effort down the road to remember the details of the undocumented functionality.</p>\n<p>What do you guys think?  <a href=\"/MatthewTurk/\" rel=\"nofollow\" title=\"@MatthewTurk\" class=\"mention\">Matthew Turk</a> : could you create the yt-3.0 branch in yt-docs to enable documentation to be done on this?</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:29:03.790839+00:00",
            "updated_on": "2013-12-03T16:29:03.813142+00:00",
            "id": 897114
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897141"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897141"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897114"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897114"
                    }
                },
                "id": 897114
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "We have enabled a yt-3.0 branch in the repository.\n\nBecause our documentation repository is separate from this repository, the PR for this cannot be the same as the PR for the documentation.  However, as I have stated numerous times, documentation is a high priority for 3.0 development.\n\nI am interested in getting individuals to try this out to see how it intersects everything else that they are used to, and finding out how individuals use it will be an important guide for how to document it and present it.  This PR was issued to have some shakedown testing from experience users and to find out where else it needs to be improved.",
                "html": "<p>We have enabled a yt-3.0 branch in the repository.</p>\n<p>Because our documentation repository is separate from this repository, the PR for this cannot be the same as the PR for the documentation.  However, as I have stated numerous times, documentation is a high priority for 3.0 development.</p>\n<p>I am interested in getting individuals to try this out to see how it intersects everything else that they are used to, and finding out how individuals use it will be an important guide for how to document it and present it.  This PR was issued to have some shakedown testing from experience users and to find out where else it needs to be improved.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:31:34.588994+00:00",
            "updated_on": "2013-12-03T16:31:34.598386+00:00",
            "id": 897141
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897146"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897146"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897141"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897141"
                    }
                },
                "id": 897141
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Sorry, the yt-3.0 branch has not been enabled in the docs, but it does exist in my fork and is an open PR.",
                "html": "<p>Sorry, the yt-3.0 branch has not been enabled in the docs, but it does exist in my fork and is an open PR.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:32:06.309564+00:00",
            "updated_on": "2013-12-03T16:32:06.320788+00:00",
            "id": 897146
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897151"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897151"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897114"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897114"
                    }
                },
                "id": 897114
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Like it says at the top, this isn't ready to go in yet.",
                "html": "<p>Like it says at the top, this isn't ready to go in yet.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:32:42.256283+00:00",
            "updated_on": "2013-12-03T16:32:42.266318+00:00",
            "id": 897151
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}",
                "username": "brittonsmith"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897170"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897170"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897151"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897151"
                    }
                },
                "id": 897151
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Still, I think Cameron's point is valid in terms of what should be done before this PR does finally get accepted.  Sure, the docs aren't in this repo, so they can't be included here, but I think it's reasonable to state that this not be accepted until a PR to the docs has been issued covering this code.",
                "html": "<p>Still, I think Cameron's point is valid in terms of what should be done before this PR does finally get accepted.  Sure, the docs aren't in this repo, so they can't be included here, but I think it's reasonable to state that this not be accepted until a PR to the docs has been issued covering this code.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:34:59.907947+00:00",
            "updated_on": "2013-12-03T16:34:59.917694+00:00",
            "id": 897170
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897174"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897174"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897170"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897170"
                    }
                },
                "id": 897170
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "I agree.",
                "html": "<p>I agree.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:35:45.215532+00:00",
            "updated_on": "2013-12-03T16:35:45.225842+00:00",
            "id": 897174
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Cameron Hummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}",
                "username": "chummels"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897188"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897188"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897146"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897146"
                    }
                },
                "id": 897146
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "In the PR you say that it will be added at a later time.  Is it ready to be added now?",
                "html": "<p>In the PR you say that it will be added at a later time.  Is it ready to be added now?</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:36:52.776201+00:00",
            "updated_on": "2013-12-03T16:36:52.785060+00:00",
            "id": 897188
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Cameron Hummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}",
                "username": "chummels"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897189"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897189"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897151"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897151"
                    }
                },
                "id": 897151
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "That's fair enough, but I didn't see any mention of documentation throughout the PR or the comments section, which is why I wanted to make sure it got mentioned.",
                "html": "<p>That's fair enough, but I didn't see any mention of documentation throughout the PR or the comments section, which is why I wanted to make sure it got mentioned.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:36:56.632270+00:00",
            "updated_on": "2013-12-03T16:36:56.639199+00:00",
            "id": 897189
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/chummels"
                    },
                    "html": {
                        "href": "https://bitbucket.org/chummels/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/chummels/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Cameron Hummels",
                "uuid": "{de871bb8-32e9-450a-b8c9-2b49a1334f16}",
                "username": "chummels"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897197"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897197"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897170"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897170"
                    }
                },
                "id": 897170
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Right--this is what I meant.  People have never been able to include documentation *in* the PR, but one can issue a docs PR simultaneously.",
                "html": "<p>Right--this is what I meant.  People have never been able to include documentation <em>in</em> the PR, but one can issue a docs PR simultaneously.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:38:00.371520+00:00",
            "updated_on": "2013-12-03T16:38:00.380052+00:00",
            "id": 897197
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897255"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897255"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "So one thing that seems a little bulky is how the YTQuantity is displayed. Would it be possible to set the repr so that instead of \n\n\n```\n#!python\n\nIn [4]: pf.domain_width[0]*0.5\nOut[4]: YTQuantity(0.5) code_length\n\n```\n\nit was \n\n```\n#!python\n\nIn [4]: pf.domain_width[0]*0.5\nOut[4]: 0.5 code_length\n\n```",
                "html": "<p>So one thing that seems a little bulky is how the YTQuantity is displayed. Would it be possible to set the repr so that instead of </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_width</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"mf\">0.5</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">YTQuantity</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"n\">code_length</span>\n</pre></div>\n\n\n<p>it was </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_width</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"mf\">0.5</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"mf\">0.5</span> <span class=\"n\">code_length</span>\n</pre></div>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:45:21.338279+00:00",
            "updated_on": "2013-12-03T16:45:21.353194+00:00",
            "id": 897255
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897287"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897287"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "I'm going to keep commenting here, but just in case it wasn't clear, this is seriously *awesome* stuff.  \n\nOne of the failures in the VR unit tests comes from this failure:\n\n```\n#!python\n\nIn [10]: pf.h.sphere(pf.domain_center, pf.domain_width[0])\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n/home/skillman/local/src/yt-3.0/yt/mods.pyc in <module>()\n----> 1 pf.h.sphere(pf.domain_center, pf.domain_width[0])\n\n/home/skillman/local/src/yt-3.0/yt/data_objects/selection_data_containers.pyc in __init__(self, center, radius, pf, field_parameters)\n    562         super(YTSphereBase, self).__init__(center, pf, field_parameters)\n    563         # Unpack the radius, if necessary\n--> 564         radius = fix_length(radius)\n    565         if radius < self.hierarchy.get_smallest_dx():\n    566             raise YTSphereTooSmall(pf, radius, self.hierarchy.get_smallest_dx())\n\n/home/skillman/local/src/yt-3.0/yt/funcs.pyc in fix_length(length)\n    591         return YTArray(length, 'cm')\n    592     length_valid_tuple = isinstance(length, (list, tuple)) and len(length) == 2\n--> 593     unit_is_string = isinstance(length[1], types.StringTypes)\n    594     if length_valid_tuple and unit_is_string:\n    595         if length[1] in ('unitary', '1'):\n\n/home/skillman/local/src/yt-3.0/yt/data_objects/yt_array.pyc in __getitem__(self, item)\n    695 \n    696     def __getitem__(self, item):\n--> 697         ret = super(YTArray, self).__getitem__(item)\n    698         if ret.shape == ():\n    699             return YTQuantity(ret, self.units)\n\nIndexError: 0-d arrays can't be indexed\n\n```",
                "html": "<p>I'm going to keep commenting here, but just in case it wasn't clear, this is seriously <em>awesome</em> stuff.  </p>\n<p>One of the failures in the VR unit tests comes from this failure:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">sphere</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_center</span><span class=\"p\">,</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_width</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"ne\">IndexError</span>                                <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">mods</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">sphere</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_center</span><span class=\"p\">,</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_width</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">data_objects</span><span class=\"o\">/</span><span class=\"n\">selection_data_containers</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"n\">field_parameters</span><span class=\"p\">)</span>\n    <span class=\"mi\">562</span>         <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">YTSphereBase</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"n\">field_parameters</span><span class=\"p\">)</span>\n    <span class=\"mi\">563</span>         <span class=\"c1\"># Unpack the radius, if necessary</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">564</span>         <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">fix_length</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n    <span class=\"mi\">565</span>         <span class=\"k\">if</span> <span class=\"n\">radius</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hierarchy</span><span class=\"o\">.</span><span class=\"n\">get_smallest_dx</span><span class=\"p\">():</span>\n    <span class=\"mi\">566</span>             <span class=\"k\">raise</span> <span class=\"n\">YTSphereTooSmall</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hierarchy</span><span class=\"o\">.</span><span class=\"n\">get_smallest_dx</span><span class=\"p\">())</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">funcs</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">fix_length</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span>\n    <span class=\"mi\">591</span>         <span class=\"k\">return</span> <span class=\"n\">YTArray</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cm&#39;</span><span class=\"p\">)</span>\n    <span class=\"mi\">592</span>     <span class=\"n\">length_valid_tuple</span> <span class=\"o\">=</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">))</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">593</span>     <span class=\"n\">unit_is_string</span> <span class=\"o\">=</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StringTypes</span><span class=\"p\">)</span>\n    <span class=\"mi\">594</span>     <span class=\"k\">if</span> <span class=\"n\">length_valid_tuple</span> <span class=\"ow\">and</span> <span class=\"n\">unit_is_string</span><span class=\"p\">:</span>\n    <span class=\"mi\">595</span>         <span class=\"k\">if</span> <span class=\"n\">length</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">&#39;unitary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">):</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">data_objects</span><span class=\"o\">/</span><span class=\"n\">yt_array</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span>\n    <span class=\"mi\">695</span> \n    <span class=\"mi\">696</span>     <span class=\"k\">def</span> <span class=\"nf\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">):</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">697</span>         <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">YTArray</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__getitem__</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n    <span class=\"mi\">698</span>         <span class=\"k\">if</span> <span class=\"n\">ret</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">():</span>\n    <span class=\"mi\">699</span>             <span class=\"k\">return</span> <span class=\"n\">YTQuantity</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n\n<span class=\"ne\">IndexError</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">arrays</span> <span class=\"n\">can</span><span class=\"s1\">&#39;t be indexed</span>\n</pre></div>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T16:48:59.461386+00:00",
            "updated_on": "2013-12-03T16:48:59.469463+00:00",
            "id": 897287
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897540"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897540"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897287"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897287"
                    }
                },
                "id": 897287
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Possibly related, but this one is mind-bottling:\n\n\n```\n#!python\n\nIn [17]: pf.h.sphere(pf.domain_center, (1.0,'code_length'))\n---------------------------------------------------------------------------\nYTSphereTooSmall                          Traceback (most recent call last)\n/home/skillman/local/src/yt-3.0/yt/mods.pyc in <module>()\n----> 1 pf.h.sphere(pf.domain_center, (1.0,'code_length'))\n\n/home/skillman/local/src/yt-3.0/yt/data_objects/selection_data_containers.pyc in __init__(self, center, radius, pf, field_parameters)\n    564         radius = fix_length(radius)\n    565         if radius < self.hierarchy.get_smallest_dx():\n--> 566             raise YTSphereTooSmall(pf, radius, self.hierarchy.get_smallest_dx())\n    567         self.set_field_parameter('radius',radius)\n    568         self.radius = radius\n\nYTSphereTooSmall: 1.00000e+00 < 9.76562e-04\n\nIn [18]: pf.h.get_smallest_dx()\nOut[18]: YTQuantity(0.0009765625) code_length\n\n```",
                "html": "<p>Possibly related, but this one is mind-bottling:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]:</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">sphere</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_center</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"s1\">&#39;code_length&#39;</span><span class=\"p\">))</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"n\">YTSphereTooSmall</span>                          <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">mods</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">sphere</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">domain_center</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"s1\">&#39;code_length&#39;</span><span class=\"p\">))</span>\n\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">skillman</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">-</span><span class=\"mf\">3.0</span><span class=\"o\">/</span><span class=\"n\">yt</span><span class=\"o\">/</span><span class=\"n\">data_objects</span><span class=\"o\">/</span><span class=\"n\">selection_data_containers</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"n\">field_parameters</span><span class=\"p\">)</span>\n    <span class=\"mi\">564</span>         <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">fix_length</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n    <span class=\"mi\">565</span>         <span class=\"k\">if</span> <span class=\"n\">radius</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hierarchy</span><span class=\"o\">.</span><span class=\"n\">get_smallest_dx</span><span class=\"p\">():</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">566</span>             <span class=\"k\">raise</span> <span class=\"n\">YTSphereTooSmall</span><span class=\"p\">(</span><span class=\"n\">pf</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hierarchy</span><span class=\"o\">.</span><span class=\"n\">get_smallest_dx</span><span class=\"p\">())</span>\n    <span class=\"mi\">567</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_field_parameter</span><span class=\"p\">(</span><span class=\"s1\">&#39;radius&#39;</span><span class=\"p\">,</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n    <span class=\"mi\">568</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span>\n\n<span class=\"n\">YTSphereTooSmall</span><span class=\"p\">:</span> <span class=\"mf\">1.00000e+00</span> <span class=\"o\">&lt;</span> <span class=\"mf\">9.76562e-04</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]:</span> <span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">get_smallest_dx</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]:</span> <span class=\"n\">YTQuantity</span><span class=\"p\">(</span><span class=\"mf\">0.0009765625</span><span class=\"p\">)</span> <span class=\"n\">code_length</span>\n</pre></div>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T17:21:36.194672+00:00",
            "updated_on": "2013-12-03T17:21:36.204930+00:00",
            "id": 897540
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897574"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897574"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897540"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897540"
                    }
                },
                "id": 897540
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "That one looks important. It looks like the unit registry is not correctly\naffiliated. I will try to go through and collect these. Can you add a test\nthat does precisely this?",
                "html": "<p>That one looks important. It looks like the unit registry is not correctly\naffiliated. I will try to go through and collect these. Can you add a test\nthat does precisely this?</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T17:25:07.757209+00:00",
            "updated_on": "2013-12-03T17:25:07.780863+00:00",
            "id": 897574
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/samskillman"
                    },
                    "html": {
                        "href": "https://bitbucket.org/samskillman/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/samskillman/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Sam Skillman",
                "uuid": "{b03f9d96-1c52-4f21-bbdc-72f8e2a97a81}",
                "username": "samskillman"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897602"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897602"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897574"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897574"
                    }
                },
                "id": 897574
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Yes, I will add the test.  I also have fixes for the VR failures. That said, I think this issue actually comes from fix_length:\n\n\n```\n#!python\n\n589 def fix_length(length):                                                        \n590     if isinstance(length, numeric_type):                                       \n591         return YTArray(length, 'cm') \n```",
                "html": "<p>Yes, I will add the test.  I also have fixes for the VR failures. That said, I think this issue actually comes from fix_length:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">589</span> <span class=\"k\">def</span> <span class=\"nf\">fix_length</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">):</span>                                                        \n<span class=\"mi\">590</span>     <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"n\">numeric_type</span><span class=\"p\">):</span>                                       \n<span class=\"mi\">591</span>         <span class=\"k\">return</span> <span class=\"n\">YTArray</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cm&#39;</span><span class=\"p\">)</span> \n</pre></div>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T17:28:15.997922+00:00",
            "updated_on": "2013-12-03T17:28:16.006634+00:00",
            "id": 897602
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897649"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897649"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/897602"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-897602"
                    }
                },
                "id": 897602
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "You're right. It needs to supply a registry there, which should be\nself.pf.unit_registry.\n\nWe likely need a shorthand for this. Something like .new_array.",
                "html": "<p>You're right. It needs to supply a registry there, which should be\nself.pf.unit_registry.</p>\n<p>We likely need a shorthand for this. Something like .new_array.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T17:35:04.694054+00:00",
            "updated_on": "2013-12-03T17:35:04.714267+00:00",
            "id": 897649
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/mswarren"
                    },
                    "html": {
                        "href": "https://bitbucket.org/mswarren/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/mswarren/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Michael Warren",
                "uuid": "{770ac953-de9c-443a-83f3-8e6c4983715c}",
                "username": "mswarren"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/898488"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-898488"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "I think physical_constants.py will be important for everything, but I have a couple of comments.\n\nThis is a key interface between yt and the real world. How is the namespace defined/controlled? For instance, 'h' is used as a unit in rho_crit_now, but SI considers 'h' to be the Planck constant.\n\nThere is also a not-so-simple relationship between 'G' in astronomical units and 'G' in cgs.  The product G*Msol is known to much better precision than G or Msol (as realized in the Gaussian Gravitational constant 'k'), so you can get different answers depending on the path you take.\n\nastropy has also done some work on constants and units https://github.com/astropy/astropy/tree/master/astropy It would be nice if yt were consistent to the extent possible.",
                "html": "<p>I think physical_constants.py will be important for everything, but I have a couple of comments.</p>\n<p>This is a key interface between yt and the real world. How is the namespace defined/controlled? For instance, 'h' is used as a unit in rho_crit_now, but SI considers 'h' to be the Planck constant.</p>\n<p>There is also a not-so-simple relationship between 'G' in astronomical units and 'G' in cgs.  The product G*Msol is known to much better precision than G or Msol (as realized in the Gaussian Gravitational constant 'k'), so you can get different answers depending on the path you take.</p>\n<p>astropy has also done some work on constants and units <a href=\"https://github.com/astropy/astropy/tree/master/astropy\" rel=\"nofollow\">https://github.com/astropy/astropy/tree/master/astropy</a> It would be nice if yt were consistent to the extent possible.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T19:57:43.164602+00:00",
            "updated_on": "2013-12-03T19:57:43.347977+00:00",
            "id": 898488
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
                    },
                    "html": {
                        "href": "https://bitbucket.org/MatthewTurk/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Matthew Turk",
                "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
                "username": "MatthewTurk"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/898538"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-898538"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/898488"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-898488"
                    }
                },
                "id": 898488
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Hi Mike, thanks for the feedback.  To address a few points, which perhaps @caseywstark or @ngoldbaum could address slightly better, the way it's set up currently is that we should be able to provide conversions between units, so in theory we could define G in one method rather than another and then allow conversions back and forth.\n\nNamespacing is tricky, and something we have *not* yet addressed, although it is something we should do before this gets implemented.  (And, having a default namespace.)  Currently sympy maps strings to units 1:1, which can be problematic as strings then map identically between \"h\" for instance.  One way to do this would be at the level of the unit registry, which is implemented, to switch in and out different units.  Having an actual namespace worrisomely touches upon sympy's string parsing, and I'm not sure how to do that correctly.\n\nWe've evaluated some astropy stuff, and Nathan just wrote back to yt-dev with a brief summary of where we're going.  I do think that a compatibility layer is feasible.",
                "html": "<p>Hi Mike, thanks for the feedback.  To address a few points, which perhaps <a href=\"/caseywstark/\" rel=\"nofollow\" title=\"@caseywstark\" class=\"mention\">Casey Stark</a> or <a href=\"/ngoldbaum/\" rel=\"nofollow\" title=\"@ngoldbaum\" class=\"mention\">Nathan Goldbaum</a> could address slightly better, the way it's set up currently is that we should be able to provide conversions between units, so in theory we could define G in one method rather than another and then allow conversions back and forth.</p>\n<p>Namespacing is tricky, and something we have <em>not</em> yet addressed, although it is something we should do before this gets implemented.  (And, having a default namespace.)  Currently sympy maps strings to units 1:1, which can be problematic as strings then map identically between \"h\" for instance.  One way to do this would be at the level of the unit registry, which is implemented, to switch in and out different units.  Having an actual namespace worrisomely touches upon sympy's string parsing, and I'm not sure how to do that correctly.</p>\n<p>We've evaluated some astropy stuff, and Nathan just wrote back to yt-dev with a brief summary of where we're going.  I do think that a compatibility layer is feasible.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-03T20:04:35.056926+00:00",
            "updated_on": "2013-12-03T20:04:35.452372+00:00",
            "id": 898538
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/brittonsmith"
                    },
                    "html": {
                        "href": "https://bitbucket.org/brittonsmith/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/brittonsmith/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Britton Smith",
                "uuid": "{94333901-a436-4c2c-8322-8d09e387eece}",
                "username": "brittonsmith"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/921662"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-921662"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "Maybe this is already known, but I'm getting derived quantities returned to me as dimensionless.  For example, the particle mass extrema calculation in Rockstar is returning the raw particle masses still unconverted to actual masses making it impossible to convert them to solar masses.",
                "html": "<p>Maybe this is already known, but I'm getting derived quantities returned to me as dimensionless.  For example, the particle mass extrema calculation in Rockstar is returning the raw particle masses still unconverted to actual masses making it impossible to convert them to solar masses.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-09T11:33:11.442378+00:00",
            "updated_on": "2013-12-09T11:33:11.451452+00:00",
            "id": 921662
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/jzuhone"
                    },
                    "html": {
                        "href": "https://bitbucket.org/jzuhone/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/jzuhone/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "John ZuHone",
                "uuid": "{0c51edfa-e317-432f-bbef-7401c6e2aa8a}",
                "username": "jzuhone"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662/comments/940861"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662/_/diff#comment-940861"
                }
            },
            "pullrequest": {
                "title": "Unit refactor",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/662"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/662"
                    }
                },
                "id": 662
            },
            "content": {
                "raw": "If I multiply a `YTArray` by a physical constant that is a `YTQuantity`, then I get the returned array as a `YTQuantity`, which I'm guessing is not the desired behavior.",
                "html": "<p>If I multiply a <code>YTArray</code> by a physical constant that is a <code>YTQuantity</code>, then I get the returned array as a <code>YTQuantity</code>, which I'm guessing is not the desired behavior.</p>",
                "markup": "markdown"
            },
            "created_on": "2013-12-12T06:02:37.806353+00:00",
            "updated_on": "2013-12-12T06:02:37.817801+00:00",
            "id": 940861
        }
    ]
}