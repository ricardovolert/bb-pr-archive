{
    "reason": "",
    "state": "MERGED",
    "updated_on": "2016-01-27T22:27:21.747643+00:00",
    "comment_count": 3,
    "description": "Thanks to Kacper Kowalik for pointing this out to me -- looks like we weren't caching whether or not we computed a hash. This slowed things down considerably. Now, we do! And we cache it. This works for all cases where we expect that a selector is immutable; we can in fact make this the case somehow, but I think the likelihood that this is not true is extremely low.\r\n\r\nI hope this can go in relatively soon; it's a big performance impact for simple operations.",
    "created_on": "2016-01-27T21:25:37.299461+00:00",
    "task_count": 0,
    "merge_commit": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/481d5a937fb8e369949bae0073a7777d71cc952f"
            }
        },
        "hash": "481d5a937fb8e369949bae0073a7777d71cc952f"
    },
    "title": "Adding a hash cache: big speedup",
    "links": {
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/diff"
        },
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/decline"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/activity"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/merge"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/commits"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/statuses"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/comments"
        }
    },
    "closed_by": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/xarthisius"
            },
            "html": {
                "href": "https://bitbucket.org/xarthisius/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/xarthisius/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Kacper Kowalik",
        "uuid": "{26af8f1d-35b3-46ce-9939-09915b06e31f}",
        "username": "xarthisius"
    },
    "id": 1965,
    "type": "pullrequest",
    "author": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/MatthewTurk"
            },
            "html": {
                "href": "https://bitbucket.org/MatthewTurk/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/MatthewTurk/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Matt Turk",
        "uuid": "{b3f0b280-55fc-4e8a-8bd1-40478d4cbdbf}",
        "username": "MatthewTurk"
    },
    "source": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt/commit/481d5a937fb8"
                }
            },
            "hash": "481d5a937fb8"
        },
        "repository": {
            "full_name": "MatthewTurk/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/MatthewTurk/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/MatthewTurk/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/MatthewTurk/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b5dfa70b-707c-4330-92a8-e3ea1bee18b3}"
        }
    },
    "close_source_branch": false,
    "destination": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/440902ffb795"
                }
            },
            "hash": "440902ffb795"
        },
        "repository": {
            "full_name": "yt_analysis/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}"
        }
    },
    "comments": [
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/xarthisius"
                    },
                    "html": {
                        "href": "https://bitbucket.org/xarthisius/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/xarthisius/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Kacper Kowalik",
                "uuid": "{26af8f1d-35b3-46ce-9939-09915b06e31f}",
                "username": "xarthisius"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/comments/13925076"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965/_/diff#comment-13925076"
                }
            },
            "pullrequest": {
                "title": "Adding a hash cache: big speedup",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965"
                    }
                },
                "id": 1965
            },
            "content": {
                "raw": "For slightly modified `doc/source/cookbook/simple_projection.py` (just x proj), before:\n\n```\n$ python simple_projection.py \nWed Jan 27 14:43:22 2016    Profile.prof\n\n         557152437 function calls (557019010 primitive calls) in 237.037 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n108136215   67.473    0.000  142.324    0.000 stringsource:358(__getitem__)\n108136215   29.276    0.000   29.276    0.000 stringsource:624(_unellipsify)\n108136215   26.365    0.000   36.847    0.000 stringsource:348(get_item_pointer)\n   387585   22.641    0.000  187.739    0.000 selection_routines.pyx:618(__hash__)\n   387585   20.732    0.000  163.918    0.000 selection_routines.pyx:49(fnv_hash)\n108136215   10.482    0.000   10.482    0.000 stringsource:868(pybuffer_index)\n107748630    8.728    0.000    8.728    0.000 stringsource:937(convert_item_to_object)\n       44    5.280    0.120    5.280    0.120 {method 'add_chunk_to_tree' of 'yt.utilities.lib.quad_tree.QuadTree' objects}\n    43065    2.382    0.000   43.845    0.001 grid_patch.py:355(select)\n```\n\nafter:\n\n```\n         12198872 function calls (12065692 primitive calls) in 46.929 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       44    5.260    0.120    5.260    0.120 {method 'add_chunk_to_tree' of 'yt.utilities.lib.quad_tree.QuadTree' objects}\n    43065    2.082    0.000    2.207    0.000 grid_patch.py:355(select)\n        1    2.053    2.053    5.111    5.111 data_structures.py:153(_populate_grid_objects)\n    43065    2.049    0.000    2.049    0.000 selection_routines.pyx:461(fill_mask_selector)\n    43065    2.006    0.000    3.107    0.000 grid_patch.py:282(select_icoords)\n       44    1.757    0.040    4.865    0.111 geometry_handler.py:326(icoords)\n       44    1.677    0.038    5.651    0.128 geometry_handler.py:342(fwidth)\n    43065    1.229    0.000    3.783    0.000 grid_patch.py:298(select_fwidth)\n     2114    1.185    0.001    1.187    0.001 {method 'copy' of 'numpy.ndarray' objects}\n       44    1.109    0.025   22.491    0.511 construction_data_containers.py:417(_handle_chunk)\n    43064    1.033    0.000    2.128    0.000 grid_patch.py:179(_fill_child_mask)\n    43065    1.030    0.000   10.523    0.000 selection_routines.pyx:428(fill_mask)\n```",
                "html": "<p>For slightly modified <code>doc/source/cookbook/simple_projection.py</code> (just x proj), before:</p>\n<div class=\"codehilite\"><pre><span></span>$ python simple_projection.py \nWed Jan <span class=\"m\">27</span> 14:43:22 <span class=\"m\">2016</span>    Profile.prof\n\n         <span class=\"m\">557152437</span> <span class=\"k\">function</span> calls <span class=\"o\">(</span><span class=\"m\">557019010</span> primitive calls<span class=\"o\">)</span> in 237.037 seconds\n\n   Ordered by: internal <span class=\"nb\">time</span>\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno<span class=\"o\">(</span><span class=\"k\">function</span><span class=\"o\">)</span>\n<span class=\"m\">108136215</span>   67.473    0.000  142.324    0.000 stringsource:358<span class=\"o\">(</span>__getitem__<span class=\"o\">)</span>\n<span class=\"m\">108136215</span>   29.276    0.000   29.276    0.000 stringsource:624<span class=\"o\">(</span>_unellipsify<span class=\"o\">)</span>\n<span class=\"m\">108136215</span>   26.365    0.000   36.847    0.000 stringsource:348<span class=\"o\">(</span>get_item_pointer<span class=\"o\">)</span>\n   <span class=\"m\">387585</span>   22.641    0.000  187.739    0.000 selection_routines.pyx:618<span class=\"o\">(</span>__hash__<span class=\"o\">)</span>\n   <span class=\"m\">387585</span>   20.732    0.000  163.918    0.000 selection_routines.pyx:49<span class=\"o\">(</span>fnv_hash<span class=\"o\">)</span>\n<span class=\"m\">108136215</span>   10.482    0.000   10.482    0.000 stringsource:868<span class=\"o\">(</span>pybuffer_index<span class=\"o\">)</span>\n<span class=\"m\">107748630</span>    8.728    0.000    8.728    0.000 stringsource:937<span class=\"o\">(</span>convert_item_to_object<span class=\"o\">)</span>\n       <span class=\"m\">44</span>    5.280    0.120    5.280    0.120 <span class=\"o\">{</span>method <span class=\"s1\">&#39;add_chunk_to_tree&#39;</span> of <span class=\"s1\">&#39;yt.utilities.lib.quad_tree.QuadTree&#39;</span> objects<span class=\"o\">}</span>\n    <span class=\"m\">43065</span>    2.382    0.000   43.845    0.001 grid_patch.py:355<span class=\"o\">(</span><span class=\"k\">select</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>after:</p>\n<div class=\"codehilite\"><pre><span></span>         12198872 function calls (12065692 primitive calls) in 46.929 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       44    5.260    0.120    5.260    0.120 {method &#39;add_chunk_to_tree&#39; of &#39;yt.utilities.lib.quad_tree.QuadTree&#39; objects}\n    43065    2.082    0.000    2.207    0.000 grid_patch.py:355(select)\n        1    2.053    2.053    5.111    5.111 data_structures.py:153(_populate_grid_objects)\n    43065    2.049    0.000    2.049    0.000 selection_routines.pyx:461(fill_mask_selector)\n    43065    2.006    0.000    3.107    0.000 grid_patch.py:282(select_icoords)\n       44    1.757    0.040    4.865    0.111 geometry_handler.py:326(icoords)\n       44    1.677    0.038    5.651    0.128 geometry_handler.py:342(fwidth)\n    43065    1.229    0.000    3.783    0.000 grid_patch.py:298(select_fwidth)\n     2114    1.185    0.001    1.187    0.001 {method &#39;copy&#39; of &#39;numpy.ndarray&#39; objects}\n       44    1.109    0.025   22.491    0.511 construction_data_containers.py:417(_handle_chunk)\n    43064    1.033    0.000    2.128    0.000 grid_patch.py:179(_fill_child_mask)\n    43065    1.030    0.000   10.523    0.000 selection_routines.pyx:428(fill_mask)\n</pre></div>",
                "markup": "markdown"
            },
            "created_on": "2016-01-27T21:29:32.661938+00:00",
            "updated_on": "2016-01-27T21:29:32.665089+00:00",
            "id": 13925076
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/comments/13925749"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965/_/diff#comment-13925749"
                }
            },
            "pullrequest": {
                "title": "Adding a hash cache: big speedup",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965"
                    }
                },
                "id": 1965
            },
            "content": {
                "raw": "Hmm, makes me want to take another look at ASV",
                "html": "<p>Hmm, makes me want to take another look at ASV</p>",
                "markup": "markdown"
            },
            "created_on": "2016-01-27T21:47:47.910657+00:00",
            "updated_on": "2016-01-27T21:47:47.912876+00:00",
            "id": 13925749
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}",
                "username": "yt-fido"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965/comments/13926979"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965/_/diff#comment-13926979"
                }
            },
            "pullrequest": {
                "title": "Adding a hash cache: big speedup",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/1965"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/1965"
                    }
                },
                "id": 1965
            },
            "content": {
                "raw": "All tests pass. Good job!",
                "html": "<p>All tests pass. Good job!</p>",
                "markup": "markdown"
            },
            "created_on": "2016-01-27T22:23:18.255838+00:00",
            "updated_on": "2016-01-27T22:23:18.317862+00:00",
            "id": 13926979
        }
    ]
}