{
    "reason": "",
    "state": "MERGED",
    "updated_on": "2016-05-27T18:00:26.644635+00:00",
    "comment_count": 3,
    "description": "This makes a few improvements to the IDV renderer for unstructured mesh data:\r\n\r\n1) Some Exodus-specific assumptions have been dropped, so that (for instance) Moab datasets will work with it out of the box.\r\n\r\n2) Element-centered fields are now supported.\r\n\r\n3) The mesh triangulation code has been moved to Cython, so that the setup times are faster.\r\n\r\nThese sample scripts will now work:\r\n\r\n\r\n```\r\n#!python\r\n\r\nimport yt\r\nds = yt.load(\"MOOSE_sample_data/out.e-s010\")\r\nyt.interactive_render(ds, ('connect1','conv_indicator'))  # element field\r\n```\r\n\r\n```\r\n#!python\r\n\r\nimport yt\r\nds = yt.load(\"c5/c5.h5m\")  # moab dataset\r\nyt.interactive_render(ds, ('moab','flux'))   # element field\r\n```\r\n\r\n```\r\n#!python\r\n\r\nimport yt\r\nfrom yt.testing import fake_hexahedral_ds\r\nds = fake_hexahedral_ds()\r\nyt.interactive_render(ds, ('connect1','elem'))  # element field\r\n```\r\n",
    "created_on": "2016-05-24T23:24:49.117189+00:00",
    "task_count": 0,
    "merge_commit": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/b8a09cd382dd"
            }
        },
        "hash": "b8a09cd382dd"
    },
    "title": "IDV improvements for unstructured mesh.",
    "links": {
        "diff": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/diff"
        },
        "decline": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/decline"
        },
        "self": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194"
        },
        "activity": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/activity"
        },
        "merge": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/merge"
        },
        "commits": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/commits"
        },
        "statuses": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/statuses"
        },
        "approve": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/approve"
        },
        "html": {
            "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194"
        },
        "comments": {
            "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/comments"
        }
    },
    "closed_by": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
            },
            "html": {
                "href": "https://bitbucket.org/ngoldbaum/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Nathan Goldbaum",
        "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
        "username": "ngoldbaum"
    },
    "id": 2194,
    "type": "pullrequest",
    "author": {
        "links": {
            "self": {
                "href": "https://api.bitbucket.org/2.0/users/atmyers"
            },
            "html": {
                "href": "https://bitbucket.org/atmyers/"
            },
            "avatar": {
                "href": "https://bitbucket.org/account/atmyers/avatar/32/"
            }
        },
        "type": "user",
        "display_name": "Andrew Myers",
        "uuid": "{651c5647-b78f-4cd9-8d9a-5d6e8c9ac8d3}",
        "username": "atmyers"
    },
    "source": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/atmyers/yt/commit/d740180148ec"
                }
            },
            "hash": "d740180148ec"
        },
        "repository": {
            "full_name": "atmyers/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/atmyers/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/atmyers/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/atmyers/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{14866916-6c53-4d06-95e1-89d30c798c08}"
        }
    },
    "close_source_branch": false,
    "destination": {
        "branch": {
            "name": "yt"
        },
        "commit": {
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/commit/027e7591dc5a"
                }
            },
            "hash": "027e7591dc5a"
        },
        "repository": {
            "full_name": "yt_analysis/yt",
            "type": "repository",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt"
                },
                "avatar": {
                    "href": "https://bitbucket.org/yt_analysis/yt/avatar/32/"
                }
            },
            "name": "yt",
            "uuid": "{b73cb37c-40f2-493a-aaa9-41bc8d8974cc}"
        }
    },
    "comments": [
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/yt-fido"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt-fido/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/yt-fido/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "yt-fido",
                "uuid": "{da2aa332-3f05-45c9-ae53-ff5ba34b35ce}",
                "username": "yt-fido"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/comments/18898277"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194/_/diff#comment-18898277"
                }
            },
            "pullrequest": {
                "title": "IDV improvements for unstructured mesh.",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194"
                    }
                },
                "id": 2194
            },
            "content": {
                "raw": "All tests pass. Good job! https://tests.yt-project.org/job/yt_testsuite/481/",
                "html": "<p>All tests pass. Good job! <a href=\"https://tests.yt-project.org/job/yt_testsuite/481/\" rel=\"nofollow\">https://tests.yt-project.org/job/yt_testsuite/481/</a></p>",
                "markup": "markdown"
            },
            "created_on": "2016-05-25T00:35:03.864542+00:00",
            "updated_on": "2016-05-25T00:35:04.073785+00:00",
            "id": 18898277
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/ngoldbaum"
                    },
                    "html": {
                        "href": "https://bitbucket.org/ngoldbaum/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/ngoldbaum/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Nathan Goldbaum",
                "uuid": "{5dcd72da-6420-4a6d-9571-e75dffcac587}",
                "username": "ngoldbaum"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/comments/18898592"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194/_/diff#comment-18898592"
                }
            },
            "pullrequest": {
                "title": "IDV improvements for unstructured mesh.",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194"
                    }
                },
                "id": 2194
            },
            "content": {
                "raw": "Hmm, I'm getting weird HDF5 errors unless I do `ds.index` before calling `interactive_render` for the MOAB test dataset. See http://paste.yt-project.org/show/6542/\n\nI also tried the TALLY_TAG field in one of the other moab test datasets:\n\n```\nimport yt\nds = yt.load(\"MoabTest/fng_usrbin22.h5m\")  # moab dataset\nds.index\nyt.interactive_render(ds, ('moab','TALLY_TAG'))   # element field\n```\n\nAnd that dies with an OpenGL error: http://paste.yt-project.org/show/6543/\n\nLooks pretty sweet though!",
                "html": "<p>Hmm, I'm getting weird HDF5 errors unless I do <code>ds.index</code> before calling <code>interactive_render</code> for the MOAB test dataset. See <a href=\"http://paste.yt-project.org/show/6542/\" rel=\"nofollow\">http://paste.yt-project.org/show/6542/</a></p>\n<p>I also tried the TALLY_TAG field in one of the other moab test datasets:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">yt</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;MoabTest/fng_usrbin22.h5m&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># moab dataset</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">index</span>\n<span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">interactive_render</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;moab&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;TALLY_TAG&#39;</span><span class=\"p\">))</span>   <span class=\"c1\"># element field</span>\n</pre></div>\n\n\n<p>And that dies with an OpenGL error: <a href=\"http://paste.yt-project.org/show/6543/\" rel=\"nofollow\">http://paste.yt-project.org/show/6543/</a></p>\n<p>Looks pretty sweet though!</p>",
                "markup": "markdown"
            },
            "created_on": "2016-05-25T00:52:41.909667+00:00",
            "updated_on": "2016-05-25T00:52:41.911432+00:00",
            "id": 18898592
        },
        {
            "user": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/users/atmyers"
                    },
                    "html": {
                        "href": "https://bitbucket.org/atmyers/"
                    },
                    "avatar": {
                        "href": "https://bitbucket.org/account/atmyers/avatar/32/"
                    }
                },
                "type": "user",
                "display_name": "Andrew Myers",
                "uuid": "{651c5647-b78f-4cd9-8d9a-5d6e8c9ac8d3}",
                "username": "atmyers"
            },
            "type": "pullrequest_comment",
            "links": {
                "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/comments/18900483"
                },
                "html": {
                    "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194/_/diff#comment-18900483"
                }
            },
            "parent": {
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194/comments/18898592"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194/_/diff#comment-18898592"
                    }
                },
                "id": 18898592
            },
            "pullrequest": {
                "title": "IDV improvements for unstructured mesh.",
                "type": "pullrequest",
                "links": {
                    "self": {
                        "href": "https://api.bitbucket.org/2.0/repositories/yt_analysis/yt/pullrequests/2194"
                    },
                    "html": {
                        "href": "https://bitbucket.org/yt_analysis/yt/pull-requests/2194"
                    }
                },
                "id": 2194
            },
            "content": {
                "raw": "I think the TALLY_TAG dataset is too big for our current approach. It actually segfaults for me during the rendering, and the mesh data is too big to all fit on the GPU at once. I think we need to do something to cull the interior faces before sending it to the GPU. I have some ideas about that, but none of them are implemented yet.",
                "html": "<p>I think the TALLY_TAG dataset is too big for our current approach. It actually segfaults for me during the rendering, and the mesh data is too big to all fit on the GPU at once. I think we need to do something to cull the interior faces before sending it to the GPU. I have some ideas about that, but none of them are implemented yet.</p>",
                "markup": "markdown"
            },
            "created_on": "2016-05-25T02:28:40.611205+00:00",
            "updated_on": "2016-05-25T02:28:40.616268+00:00",
            "id": 18900483
        }
    ]
}